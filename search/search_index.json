{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open-Source IS-IS Configuration Labs This series of hands-on labs will help you master the IS-IS routing protocol configuration on a platform of your choice 1 , including: Arista EOS Cisco ASAv, IOSv, IOS XE, IOS XR and Nexus OS FRRouting Dell OS10 Juniper vSRX, vMX and vPTX Nokia SR OS and SR Linux Vyatta VyOS Tip If this is your first visit to this site, you should start with the Installation and Setup documentation or run labs in GitHub codespaces . The initial lab exercises will help you configure basic IS-IS features: Work with FRRouting (optional) Start the IS-IS Routing for IPv4 Explore IS-IS Data Structures IS-IS on Point-to-Point Links Using IS-IS Metrics Dual-Stack (IPv4+IPv6) IS-IS Routing Optimize Simple IS-IS Deployments Running IS-IS Over IPv4 Unnumbered and IPv6 LLA-only Interfaces The next set of exercises covers individual IS-IS features. We just started working on this section, and this is what you can practice at the moment: Passive IS-IS Interfaces Influence the Designated IS Election Protect IS-IS Routing Data with MD5 Authentication Hide Transit Subnets in IS-IS Networks Drain Traffic Before Node Maintenance Adjust IS-IS Timers Want to know what else we have planned? Check the Upcoming Lab Exercises document. Some assembly required: the virtual machines or containers that we recommend to use as external IS-IS speakers are easy to download, but you\u2019ll have to build a Vagrant box or install a vendor-supplied Vagrant box or Docker container image for most other platforms. See installation and setup for details. \u21a9","title":"Labs Overview"},{"location":"#open-source-is-is-configuration-labs","text":"This series of hands-on labs will help you master the IS-IS routing protocol configuration on a platform of your choice 1 , including: Arista EOS Cisco ASAv, IOSv, IOS XE, IOS XR and Nexus OS FRRouting Dell OS10 Juniper vSRX, vMX and vPTX Nokia SR OS and SR Linux Vyatta VyOS Tip If this is your first visit to this site, you should start with the Installation and Setup documentation or run labs in GitHub codespaces . The initial lab exercises will help you configure basic IS-IS features: Work with FRRouting (optional) Start the IS-IS Routing for IPv4 Explore IS-IS Data Structures IS-IS on Point-to-Point Links Using IS-IS Metrics Dual-Stack (IPv4+IPv6) IS-IS Routing Optimize Simple IS-IS Deployments Running IS-IS Over IPv4 Unnumbered and IPv6 LLA-only Interfaces The next set of exercises covers individual IS-IS features. We just started working on this section, and this is what you can practice at the moment: Passive IS-IS Interfaces Influence the Designated IS Election Protect IS-IS Routing Data with MD5 Authentication Hide Transit Subnets in IS-IS Networks Drain Traffic Before Node Maintenance Adjust IS-IS Timers Want to know what else we have planned? Check the Upcoming Lab Exercises document. Some assembly required: the virtual machines or containers that we recommend to use as external IS-IS speakers are easy to download, but you\u2019ll have to build a Vagrant box or install a vendor-supplied Vagrant box or Docker container image for most other platforms. See installation and setup for details. \u21a9","title":"Open-Source IS-IS Configuration Labs"},{"location":"1-setup/","text":"Software Installation and Lab Setup It\u2019s easiest to use the IS-IS labs with netlab . Still, you can use most of them (potentially with slightly reduced functionality) with any other virtual lab environment or on physical gear. For the rest of this document, we\u2019ll assume you decided to use netlab ; if you want to set up your lab in some other way, read the Manual Setup section of the BGP Labs documentation. Warning IS-IS labs work best with netlab release 1.8.4 or later. If you\u2019re using an earlier netlab release, please upgrade with pip3 install --upgrade networklab . Select the Network Devices You Will Work With You can run FRRouting in all netlab -supported virtualization environments (VirtualBox, libvirt, or Docker) 2 , and if you want to start practicing IS-IS with minimum hassle, consider using FRRouting for all lab devices. You can even run FRRouting containers on Macbooks with Apple silicon . If you\u2019d like to use a more traditional networking device, use any other netlab -supported device for which we implemented basic IS-IS configuration as the device to practice with 1 . I recommend Arista cEOS or Nokia SR Linux containers; they are the easiest ones to install and use. Tip If you plan to run the labs in free GitHub Codespaces , you MUST use container-based network devices like Arista cEOS, FRR, Nokia SR Linux, or Vyos. Select the Additional Devices in Your Lab Some labs use additional routers \u2013 preconfigured devices with which your routers exchange routing information. You won\u2019t configure those devices, but you might have to log into them and execute show commands. The default setup uses FRRouting for additional routers; we also generated all the show printouts with FRRouting. Alternatively, you can use any other device for which we implemented basic IS-IS configuration as additional routers. Additional limitations (should they exist) are listed under the Device Requirements section of individual lab exercises. Select the Virtualization Environment Now that you know which network device to use, check which virtualization environment you can use. Running IS-IS labs in a free GitHub Codespace is an excellent starting point, but if you decide to build your own infrastructure, containerlab is easier to set up than libvirt , with virtualbox being a distant third. Now for a few gotchas: You can use virtualbox if you want to run the lab devices as virtual machines on your Windows- or MacOS laptop with Intel CPU, but even then, I\u2019d prefer running them in a Ubuntu VM . Your hardware and virtualization software (for example, VirtualBox or VMware Fusion) must support nested virtualization if you want to use libvirt on that Ubuntu VM. You don\u2019t need nested virtualization to run Docker containers unless you\u2019re using the crazy trick we\u2019re forced to use for Juniper vMX or Nokia SR OS \u2013 they\u2019re running as a virtual machine within a container . Software Installation Based on the choices you made, you\u2019ll find the installation instructions in one of these documents: Using GitHub Codespaces Ubuntu VM Installation on Windows or MacOS Ubuntu Server Installation Running netlab on any other Linux Server Running netlab in a Public Cloud Running netlab on Apple silicon Discouraged: Virtualbox-Based Lab on Windows or MacOS Once you have completed the software installation you have to deal with the stupidities of downloading and installing network device images ( Virtualbox , libvirt , containers ) unless you decided to use FRR, Nokia SR Linux, or Vyos. I would love to simplify the process, but the networking vendors refuse to play along. Even worse, their licenses prohibit me from downloading the images and creating a packaged VM with preinstalled network devices for you 3 . Fortunately, you only have to go through this colossal waste of time once. Setting Up the Labs We finally got to the fun part \u2013 setting up the labs. If you\u2019re not using GitHub Codespaces: Select a directory where you want to have the IS-IS labs Clone the isis GitHub repository with git clone https://github.com/bgplab/isis.git . GitHub UI gives you other options in the green Code button, including Download ZIP After you get a local copy of the repository: If needed, edit the defaults.yml file in the top directory to set your preferred network device and virtualization environment. For example, I\u2019m using the following settings to run the labs with Arista EOS containers while using FRRouting as the external IS-IS routers: device: eos # Change to your preferred network device provider: clab # Change to virtualbox or libvirt if needed groups: external: device: frr # Change to your preferred external router In a terminal window, change the current directory to one of the lab directories (for example, basic/1-simple-ipv4 ), and execute netlab up . Wait for the lab to start and use netlab connect to connect to individual lab devices Have fun. When you\u2019re done, collect the device configurations with netlab collect (if you want to save them) and shut down the lab with netlab down Change the current directory to another lab directory and repeat. Once you run out of lab exercises, create a new one and contribute it with a pull request ;) Most network devices require an x86 CPU. You must run the labs on a device with an x86 CPU (Intel or AMD) to use them. \u21a9 There is no official FRR virtual machine image \u2013 netlab has to download and install FRR on a Ubuntu VM whenever you start an frr node as a virtual machine. Using FRR containers is faster and consumes way less bandwidth or memory. \u21a9 I\u2019m not going to pay a lawyer to read their boilerplate stuff, and I\u2019m definitely not going to rely on my amateur understanding of US copyright law. \u21a9","title":"Installation and Setup"},{"location":"1-setup/#software-installation-and-lab-setup","text":"It\u2019s easiest to use the IS-IS labs with netlab . Still, you can use most of them (potentially with slightly reduced functionality) with any other virtual lab environment or on physical gear. For the rest of this document, we\u2019ll assume you decided to use netlab ; if you want to set up your lab in some other way, read the Manual Setup section of the BGP Labs documentation. Warning IS-IS labs work best with netlab release 1.8.4 or later. If you\u2019re using an earlier netlab release, please upgrade with pip3 install --upgrade networklab .","title":"Software Installation and Lab Setup"},{"location":"1-setup/#select-the-network-devices-you-will-work-with","text":"You can run FRRouting in all netlab -supported virtualization environments (VirtualBox, libvirt, or Docker) 2 , and if you want to start practicing IS-IS with minimum hassle, consider using FRRouting for all lab devices. You can even run FRRouting containers on Macbooks with Apple silicon . If you\u2019d like to use a more traditional networking device, use any other netlab -supported device for which we implemented basic IS-IS configuration as the device to practice with 1 . I recommend Arista cEOS or Nokia SR Linux containers; they are the easiest ones to install and use. Tip If you plan to run the labs in free GitHub Codespaces , you MUST use container-based network devices like Arista cEOS, FRR, Nokia SR Linux, or Vyos.","title":"Select the Network Devices You Will Work With"},{"location":"1-setup/#select-the-additional-devices-in-your-lab","text":"Some labs use additional routers \u2013 preconfigured devices with which your routers exchange routing information. You won\u2019t configure those devices, but you might have to log into them and execute show commands. The default setup uses FRRouting for additional routers; we also generated all the show printouts with FRRouting. Alternatively, you can use any other device for which we implemented basic IS-IS configuration as additional routers. Additional limitations (should they exist) are listed under the Device Requirements section of individual lab exercises.","title":"Select the Additional Devices in Your Lab"},{"location":"1-setup/#select-the-virtualization-environment","text":"Now that you know which network device to use, check which virtualization environment you can use. Running IS-IS labs in a free GitHub Codespace is an excellent starting point, but if you decide to build your own infrastructure, containerlab is easier to set up than libvirt , with virtualbox being a distant third. Now for a few gotchas: You can use virtualbox if you want to run the lab devices as virtual machines on your Windows- or MacOS laptop with Intel CPU, but even then, I\u2019d prefer running them in a Ubuntu VM . Your hardware and virtualization software (for example, VirtualBox or VMware Fusion) must support nested virtualization if you want to use libvirt on that Ubuntu VM. You don\u2019t need nested virtualization to run Docker containers unless you\u2019re using the crazy trick we\u2019re forced to use for Juniper vMX or Nokia SR OS \u2013 they\u2019re running as a virtual machine within a container .","title":"Select the Virtualization Environment"},{"location":"1-setup/#software-installation","text":"Based on the choices you made, you\u2019ll find the installation instructions in one of these documents: Using GitHub Codespaces Ubuntu VM Installation on Windows or MacOS Ubuntu Server Installation Running netlab on any other Linux Server Running netlab in a Public Cloud Running netlab on Apple silicon Discouraged: Virtualbox-Based Lab on Windows or MacOS Once you have completed the software installation you have to deal with the stupidities of downloading and installing network device images ( Virtualbox , libvirt , containers ) unless you decided to use FRR, Nokia SR Linux, or Vyos. I would love to simplify the process, but the networking vendors refuse to play along. Even worse, their licenses prohibit me from downloading the images and creating a packaged VM with preinstalled network devices for you 3 . Fortunately, you only have to go through this colossal waste of time once.","title":"Software Installation"},{"location":"1-setup/#defaults","text":"We finally got to the fun part \u2013 setting up the labs. If you\u2019re not using GitHub Codespaces: Select a directory where you want to have the IS-IS labs Clone the isis GitHub repository with git clone https://github.com/bgplab/isis.git . GitHub UI gives you other options in the green Code button, including Download ZIP After you get a local copy of the repository: If needed, edit the defaults.yml file in the top directory to set your preferred network device and virtualization environment. For example, I\u2019m using the following settings to run the labs with Arista EOS containers while using FRRouting as the external IS-IS routers: device: eos # Change to your preferred network device provider: clab # Change to virtualbox or libvirt if needed groups: external: device: frr # Change to your preferred external router In a terminal window, change the current directory to one of the lab directories (for example, basic/1-simple-ipv4 ), and execute netlab up . Wait for the lab to start and use netlab connect to connect to individual lab devices Have fun. When you\u2019re done, collect the device configurations with netlab collect (if you want to save them) and shut down the lab with netlab down Change the current directory to another lab directory and repeat. Once you run out of lab exercises, create a new one and contribute it with a pull request ;) Most network devices require an x86 CPU. You must run the labs on a device with an x86 CPU (Intel or AMD) to use them. \u21a9 There is no official FRR virtual machine image \u2013 netlab has to download and install FRR on a Ubuntu VM whenever you start an frr node as a virtual machine. Using FRR containers is faster and consumes way less bandwidth or memory. \u21a9 I\u2019m not going to pay a lawyer to read their boilerplate stuff, and I\u2019m definitely not going to rely on my amateur understanding of US copyright law. \u21a9","title":"Setting Up the Labs"},{"location":"3-upcoming/","text":"Upcoming Labs A large number of IS-IS labs are already online , but we keep getting interesting ideas. Here are some of them: Configure IS-IS Features Route Redistribution into IS-IS Configure static route and connected interface redistribution into IS-IS Fast IS-IS Failure Detection and Convergence Use BFD Advanced Labs Multi-Level IS-IS Networks Explain intra-area and inter-area routing Configure a network with multiple areas and L1/L2 routers Build an SR-MPLS Network with IS-IS Build a BGP-free MPLS core using SR-MPLS with IS-IS Configure IS-IS Fast Reroute Using TI-LFA In a triangle network, configure the longer path as a backup path Using IS-IS with SRv6 Build a BGP-free IPv6 core using SRv6 for end-to-end transport Troubleshooting Troubleshoot IS-IS Adjacencies This lab will include the most common mistakes that prevent an IS-IS adjacency from forming, including: MTU mismatch L1/L2 mismatch Area mismatch on L1 adjacency 3-way handshake on point-to-point links","title":"Overview"},{"location":"3-upcoming/#upcoming-labs","text":"A large number of IS-IS labs are already online , but we keep getting interesting ideas. Here are some of them:","title":"Upcoming Labs"},{"location":"3-upcoming/#configure-is-is-features","text":"Route Redistribution into IS-IS Configure static route and connected interface redistribution into IS-IS Fast IS-IS Failure Detection and Convergence Use BFD","title":"Configure IS-IS Features"},{"location":"3-upcoming/#advanced-labs","text":"Multi-Level IS-IS Networks Explain intra-area and inter-area routing Configure a network with multiple areas and L1/L2 routers Build an SR-MPLS Network with IS-IS Build a BGP-free MPLS core using SR-MPLS with IS-IS Configure IS-IS Fast Reroute Using TI-LFA In a triangle network, configure the longer path as a backup path Using IS-IS with SRv6 Build a BGP-free IPv6 core using SRv6 for end-to-end transport","title":"Advanced Labs"},{"location":"3-upcoming/#troubleshooting","text":"Troubleshoot IS-IS Adjacencies This lab will include the most common mistakes that prevent an IS-IS adjacency from forming, including: MTU mismatch L1/L2 mismatch Area mismatch on L1 adjacency 3-way handshake on point-to-point links","title":"Troubleshooting"},{"location":"4-codespaces/","text":"Use GitHub Codespaces You can run IS-IS labs in (free 1 ) GitHub codespaces ; all you need is a GitHub account: Create a new codespace for your IS-IS labs or connect to an existing codespace . Unless you\u2019re using GitHub codespaces with VScode (in which case you know what to do), your codespace opens in a new browser window with three tabs: Explorer (repository folders), Preview (starting with README), and Terminal. Select Lab Devices The IS-IS labs repository uses FRRouting containers as the default device. To change the device settings, edit the defaults.yml file with vi or nano . It\u2019s best to use network devices with free-to-download container images: Device Device type to use in defaults.yml FRRouting frr Nokia SR Linux srlinux VyOS vyos Tip Start with the Configuring IS-IS on FRRouting exercise if you want to use the default settings but never worked with FRRouting before. Use FRRouting to use the 2 CPU/8 GB codespaces VM with more extensive labs. Codespaces have persistent storage; you can download and install other containers . To use containers that have to be downloaded from the vendors\u2019 website, download them onto your laptop, drag-and-drop them into the Folders , and install them like you would on a local netlab instance . You cannot run virtual machines in codespaces (yet?). This also precludes running VMs in virtual machines (the vrnetlab approach). Start a Lab Once you have the codespaces up and running: Click on the desired lab exercise in the README.md preview window to select the exercise folder. Right-click on the exercise folder and select \u201c Open in Integrated Terminal \u201d to launch a bash session in the desired directory. Execute netlab up to start the lab. Expand the exercise folder in the Explorer tab. Right-click on the README.md file and select \u201c Open Preview \u201d to open the rendered version of the file. Click the link in the README.md file to get the exercise description in the preview pane. Connect to your devices with the netlab connect command executed in the Terminal pane. Cleanup and Shutdown Finally, don\u2019t forget to shut down the lab with netlab down and stop your codespace after you\u2019re done: Click on the blue \u201c Codespaces \u201d button in the bottom-left corner of the browser window. Select \u201c Stop Current Codespace \u201d. You should also adjust idle timeout and default retention period in your codespaces settings . You get 120 free core hours per month or pay for more . \u21a9","title":"Use GitHub Codespaces"},{"location":"4-codespaces/#use-github-codespaces","text":"You can run IS-IS labs in (free 1 ) GitHub codespaces ; all you need is a GitHub account: Create a new codespace for your IS-IS labs or connect to an existing codespace . Unless you\u2019re using GitHub codespaces with VScode (in which case you know what to do), your codespace opens in a new browser window with three tabs: Explorer (repository folders), Preview (starting with README), and Terminal.","title":"Use GitHub Codespaces"},{"location":"4-codespaces/#select-lab-devices","text":"The IS-IS labs repository uses FRRouting containers as the default device. To change the device settings, edit the defaults.yml file with vi or nano . It\u2019s best to use network devices with free-to-download container images: Device Device type to use in defaults.yml FRRouting frr Nokia SR Linux srlinux VyOS vyos Tip Start with the Configuring IS-IS on FRRouting exercise if you want to use the default settings but never worked with FRRouting before. Use FRRouting to use the 2 CPU/8 GB codespaces VM with more extensive labs. Codespaces have persistent storage; you can download and install other containers . To use containers that have to be downloaded from the vendors\u2019 website, download them onto your laptop, drag-and-drop them into the Folders , and install them like you would on a local netlab instance . You cannot run virtual machines in codespaces (yet?). This also precludes running VMs in virtual machines (the vrnetlab approach).","title":"Select Lab Devices"},{"location":"4-codespaces/#start-a-lab","text":"Once you have the codespaces up and running: Click on the desired lab exercise in the README.md preview window to select the exercise folder. Right-click on the exercise folder and select \u201c Open in Integrated Terminal \u201d to launch a bash session in the desired directory. Execute netlab up to start the lab. Expand the exercise folder in the Explorer tab. Right-click on the README.md file and select \u201c Open Preview \u201d to open the rendered version of the file. Click the link in the README.md file to get the exercise description in the preview pane. Connect to your devices with the netlab connect command executed in the Terminal pane.","title":"Start a Lab"},{"location":"4-codespaces/#cleanup-and-shutdown","text":"Finally, don\u2019t forget to shut down the lab with netlab down and stop your codespace after you\u2019re done: Click on the blue \u201c Codespaces \u201d button in the bottom-left corner of the browser window. Select \u201c Stop Current Codespace \u201d. You should also adjust idle timeout and default retention period in your codespaces settings . You get 120 free core hours per month or pay for more . \u21a9","title":"Cleanup and Shutdown"},{"location":"99-about/","text":"About the Project In 2023, I started the Open-Source BGP Labs project to recreate the labs I created in the early 1990s. As I posted a status update a year later , Henk Smit made an excellent suggestion : If you ever want to do something similar for IS-IS, I\u2019d be happy to help. I think it would already be helpful to just cover the basics of IS-IS. There is so little knowledge about IS-IS out there, that any new good resource would be awesome. As I was involved in a similar project in the 1990s, it wasn\u2019t hard to persuade me to start a similar series of \u201c IS-IS from rookie to hero \u201d lab exercises. Welcome to the Open-Source IS-IS Configuration Labs project. The project uses netlab 1 to set up the labs and FRRouting containers or a few other devices as external IS-IS routers. You can use whatever networking devices you wish to work on, and if they happen to be supported by netlab , you\u2019ll get lab topology and basic device configuration for each lab set up in seconds 2 . Most lab exercises using external devices include device configurations for the external routers for people who love wasting time with GUI. You\u2019ll find the lab topology files and initial device configurations in a GitHub repository , but you might explore the lab exercises first . As always, everything starts with a long wish list . I probably missed something important \u2013 please open an issue or a discussion , or (even better) become a contributor and submit a PR. When you happen to have a Hammer of Thor handy, everything looks like a nail waiting to be hit ;) \u21a9 Unless you love using resource hogs like Nexus OS, IOS XR, or some Junos variants. \u21a9","title":"About the Project"},{"location":"99-about/#about-the-project","text":"In 2023, I started the Open-Source BGP Labs project to recreate the labs I created in the early 1990s. As I posted a status update a year later , Henk Smit made an excellent suggestion : If you ever want to do something similar for IS-IS, I\u2019d be happy to help. I think it would already be helpful to just cover the basics of IS-IS. There is so little knowledge about IS-IS out there, that any new good resource would be awesome. As I was involved in a similar project in the 1990s, it wasn\u2019t hard to persuade me to start a similar series of \u201c IS-IS from rookie to hero \u201d lab exercises. Welcome to the Open-Source IS-IS Configuration Labs project. The project uses netlab 1 to set up the labs and FRRouting containers or a few other devices as external IS-IS routers. You can use whatever networking devices you wish to work on, and if they happen to be supported by netlab , you\u2019ll get lab topology and basic device configuration for each lab set up in seconds 2 . Most lab exercises using external devices include device configurations for the external routers for people who love wasting time with GUI. You\u2019ll find the lab topology files and initial device configurations in a GitHub repository , but you might explore the lab exercises first . As always, everything starts with a long wish list . I probably missed something important \u2013 please open an issue or a discussion , or (even better) become a contributor and submit a PR. When you happen to have a Hammer of Thor handy, everything looks like a nail waiting to be hit ;) \u21a9 Unless you love using resource hogs like Nexus OS, IOS XR, or some Junos variants. \u21a9","title":"About the Project"},{"location":"basic/","text":"Deploy IS-IS in Your Network The first set of the IS-IS labs focuses on the configuration, monitoring, and troubleshooting of basic IS-IS features: Work with FRRouting (optional) Start the IS-IS Routing for IPv4 Explore IS-IS Data Structures IS-IS on Point-to-Point Links Using IS-IS Metrics Dual-Stack (IPv4+IPv6) IS-IS Routing Optimize Simple IS-IS Deployments","title":"Overview"},{"location":"basic/#deploy-is-is-in-your-network","text":"The first set of the IS-IS labs focuses on the configuration, monitoring, and troubleshooting of basic IS-IS features: Work with FRRouting (optional) Start the IS-IS Routing for IPv4 Explore IS-IS Data Structures IS-IS on Point-to-Point Links Using IS-IS Metrics Dual-Stack (IPv4+IPv6) IS-IS Routing Optimize Simple IS-IS Deployments","title":"Deploy IS-IS in Your Network"},{"location":"basic/0-frrouting/","text":"Configuring IS-IS on FRRouting Most networking devices 1 use a configuration command line interface (CLI) to interact with the end-user. The CLI usually provides show commands to inspect the state of the device and a configuration mode that allows the user to configure the device. FRRouting is different. It\u2019s a suite of application-layer daemons running on Linux. Linux shell is used as the initial CLI. To configure a device that uses FRRouting without an extra CLI wrapper (like VyOS), you usually have to: Use standard Linux tools like ifupdown to configure the interfaces; Edit FRRouting configuration files to start routing protocol daemons Start FRRouting configuration shell from the Linux CLI. The Linux interfaces and IP addresses will be configured automatically if you start the IS-IS labs with the netlab up command. You will have to start the routing protocol daemons in the initial lab exercises if you plan to use FRRouting within virtual machines as the user routers, and you might have to execute show commands on Cumulus Linux or FRRouting acting as the external routers. You\u2019ll practice both in this lab exercise. Start the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/0-frrouting Execute netlab up to start a lab with two FRRouting virtual machines or containers (depending on your lab setup). R2 is preconfigured to run IS-IS; if you\u2019re using virtual machines, you might have to enable the IS-IS daemon on R1. Log into the devices ( r1 and r2 ) with the netlab connect command. Start the IS-IS Daemon Most network devices start routing daemons when you configure them through the configuration CLI or API. FRRouting is different. To start a routing daemon, you must enable the desired routing daemons in a configuration file and restart the top-level FRRouting process. You can check the FRR daemon processes running on your virtual machines with the sudo systemctl status frr.service command. It displays the running FRR daemons and the recent FRR logging messages, for example 2 : r2(bash)#sudo systemctl status frr.service \u25cf frr.service - FRRouting Loaded: loaded (/lib/systemd/system/frr.service; enabled; vendor preset: enabled) Active: active (running) since Wed 2024-07-17 17:09:27 UTC; 37s ago Docs: https://frrouting.readthedocs.io/en/latest/setup.html Process: 4051 ExecStart=/usr/lib/frr/frrinit.sh start (code=exited, status=0/SUCCESS) Main PID: 4071 (watchfrr) Status: \"FRR Operational\" Tasks: 1 (limit: 1049) Memory: 1.8M CGroup: /system.slice/frr.service \u2514\u25004071 /usr/lib/frr/watchfrr -d -F traditional zebra mgmtd isisd staticd Jul 17 17:09:27 r2 systemd[1]: Starting FRRouting... Jul 17 17:09:27 r2 frrinit.sh[4051]: * Starting watchfrr with command: ' /usr/lib/frr/watchfrr -d -F traditional zebra mgmtd > Jul 17 17:09:27 r2 watchfrr[4071]: [T83RR-8SM5G] watchfrr 10.0.1 starting: vty@0 Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] zebra state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] mgmtd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] isisd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] staticd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [KWE5Q-QNGFC] all daemons up, doing startup-complete notify Jul 17 17:09:27 r2 frrinit.sh[4051]: * Started watchfrr Jul 17 17:09:27 r2 systemd[1]: Started FRRouting. You cannot use the same command in FRRouting containers as they don\u2019t use systemd . The easiest way to find daemons in FRRouting containers is to use the ps -ef|grep frr command 3 . This is the printout you could get when the IS-IS daemon is already running: 1 root 0:00 /sbin/tini -- /usr/lib/frr/docker-start 7 root 0:00 {docker-start} /bin/bash /usr/lib/frr/docker-start 15 root 0:00 /usr/lib/frr/watchfrr zebra mgmtd isisd staticd 25 frr 0:00 /usr/lib/frr/zebra -d -F datacenter -A 127.0.0.1 -s 90000000 30 frr 0:00 /usr/lib/frr/mgmtd -d -F datacenter 32 frr 0:00 /usr/lib/frr/isisd -d -F datacenter -A 127.0.0.1 35 frr 0:00 /usr/lib/frr/staticd -d -F datacenter -A 127.0.0.1 366 root 0:00 grep frr The list of FRRouting daemons you want to enable is stored in the /etc/frr/daemons file. To enable the FRRouting IS-IS daemon, you have to: Add the isisd=yes line to the /etc/frr/daemons file 4 . Restart FRRouting with the sudo systemctl restart frr.service command (see also: using sudo ) Warning You cannot change the FRR daemons in FRR containers. Restarting FRR would kill the container. netlab takes care of that and enables all the daemons necessary to complete the lab exercises. Restarting FRR daemons wipes out the current (running) configuration. If you want to retain it, save it to the startup configuration with the vtysh write command. The write command saves the running configuration (that you can inspect with show running-config ) into the /etc/frr/frr.conf file. However, the show startup-config 5 does not display the content of that file. Exit vtysh and use the more /etc/frr/frr.conf command 6 to inspect it. You could add the required line to the FRRouting daemons file with any text editor 7 or use the following trick: Use sudo bash to start another Linux shell as the root user Use the echo command with output redirection to add a line to the /etc/frr/daemons file. rtr(bash)#sudo bash root@rtr:/# echo 'isis=yes' >>/etc/frr/daemons root@rtr:/# exit After enabling the IS-IS daemon and restarting FRR, you should see the isisd process in the ps -ef printout or the IS-IS daemon mentioned in the sudo systemctl status frr.service printout. Work with the FRRouting CLI FRRouting suite includes a virtual shell ( vtysh ) closely resembling industry-standard CLI 8 . It has to be started from the Linux command line with the vtysh command. The vtysh CLI has to run as the root user unless you change the FRR-related permissions to allow a regular user to use it. The usual command to start the vtysh is thus sudo vtysh (but see also To Sudo Or Not to Sudo ). r2(bash)#sudo vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# Once you started vtysh , you can execute show commands to inspect the device state, for example: r2(bash)#sudo vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# show ip route Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 10.0.0.2/32 is directly connected, lo, 00:02:26 C>* 10.1.0.0/30 is directly connected, eth1, 00:02:26 You can also use the --show option of the netlab connect command to execute a single command on a FRR/Cumulus Linux device[^UQ]. For example, to inspect the IS-IS topology database, use netlab connect --show isis database : $ netlab connect r2 --show isis database Connecting to container clab-frrouting-r2, executing vtysh -c \"show isis database\" Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 * 81 0x00000001 0xec86 1489 0/0/0 1 LSPs To configure FRRouting daemons, use the configure vtysh command and enter configuration commands similar to those you\u2019d use on Cisco IOS or Arista EOS: r2(bash)#vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# configure r2(config)# router isis Gandalf r2(config-router)# To Sudo Or Not to Sudo The vtysh usually has to run as the root user, so you should start it with the sudo vtysh command. Unfortunately, things are never as simple as they look in the Linux world: When using SSH, you log into Cumulus Linux or FRRouting virtual machines as a regular user (user vagrant in netlab -created labs) and have to use the sudo command to start vtysh . Cumulus Linux and FRR containers run as the root user, and you connect to them as the root user with the docker exec or netlab connect commands 9 . When working with containers, you can start vtysh without using the sudo command. You can execute sudo vtysh as a root user on Cumulus Linux containers but not within an FRR container. The FRR container does not include the sudo command. Long story short: Use sudo vtysh whenever possible to burn it into your muscle memory. Use vtysh if you use FRRouting containers as the lab devices. Using Output Filters Unlike many other network operating systems, FRRouting vtysh does not have output filters. You probably don\u2019t need them as you\u2019ll be running FRR on top of a Unix-like operating system that supports pipes, but it might be a bit convoluted to use vtysh in a pipe. To use the vtysh output in a pipe, you have to execute vtysh and get the results of a show command in a single command: You could use sudo vtysh -c 'show command' when you\u2019re in the bash shell of a lab device, for example: r2(bash)#vtysh -c 'show isis database'|grep r2 r2.00-00 * 81 0x00000001 0xec86 1302 0/0/0 Alternatively, you could use the netlab connect --show command to execute a vtysh show command on a lab device: $ netlab connect r2 -q --show isis database|grep r2 r2.00-00 * 81 0x00000001 0xec86 1286 0/0/0 Tip Use netlab connect --quiet --show to omit the Connecting to... message. The following table contains a mapping between common network operating system filters and Linux CLI commands: NOS filter Linux CLI command include grep exclude grep -v begin grep -A 10000 10 end grep -B 10000 section no equivalent Including devices based on Linux like Arista EOS, Cisco Nexus OS, or Nokia SR Linux \u21a9 The printout details depend on the Linux and FRR versions, but you\u2019ll always be able to determine whether the IS-IS process is running. \u21a9 You can use the same command with FRRouting running in a virtual machine. \u21a9 See Configuring FRRouting Cumulus Linux documentation for more details. \u21a9 At least on FRRouting version 9.1 and earlier \u21a9 You might have to prefix it with sudo \u21a9 vi is available in Cumulus Linux containers. vi and nano are available in Cumulus Linux and FRR virtual machines. \u21a9 An euphemism for Cisco IOS CLI that is used when you try to avoid nasty encounters with Cisco\u2019s legal team. \u21a9 When in doubt, use the whoami command. \u21a9 The \u201810000\u2019 parameter specifies the number of lines after the match. Increase it for very long printouts ;) \u21a9","title":"Configuring IS-IS on FRRouting"},{"location":"basic/0-frrouting/#configuring-is-is-on-frrouting","text":"Most networking devices 1 use a configuration command line interface (CLI) to interact with the end-user. The CLI usually provides show commands to inspect the state of the device and a configuration mode that allows the user to configure the device. FRRouting is different. It\u2019s a suite of application-layer daemons running on Linux. Linux shell is used as the initial CLI. To configure a device that uses FRRouting without an extra CLI wrapper (like VyOS), you usually have to: Use standard Linux tools like ifupdown to configure the interfaces; Edit FRRouting configuration files to start routing protocol daemons Start FRRouting configuration shell from the Linux CLI. The Linux interfaces and IP addresses will be configured automatically if you start the IS-IS labs with the netlab up command. You will have to start the routing protocol daemons in the initial lab exercises if you plan to use FRRouting within virtual machines as the user routers, and you might have to execute show commands on Cumulus Linux or FRRouting acting as the external routers. You\u2019ll practice both in this lab exercise.","title":"Configuring IS-IS on FRRouting"},{"location":"basic/0-frrouting/#start-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/0-frrouting Execute netlab up to start a lab with two FRRouting virtual machines or containers (depending on your lab setup). R2 is preconfigured to run IS-IS; if you\u2019re using virtual machines, you might have to enable the IS-IS daemon on R1. Log into the devices ( r1 and r2 ) with the netlab connect command.","title":"Start the Lab"},{"location":"basic/0-frrouting/#daemon","text":"Most network devices start routing daemons when you configure them through the configuration CLI or API. FRRouting is different. To start a routing daemon, you must enable the desired routing daemons in a configuration file and restart the top-level FRRouting process. You can check the FRR daemon processes running on your virtual machines with the sudo systemctl status frr.service command. It displays the running FRR daemons and the recent FRR logging messages, for example 2 : r2(bash)#sudo systemctl status frr.service \u25cf frr.service - FRRouting Loaded: loaded (/lib/systemd/system/frr.service; enabled; vendor preset: enabled) Active: active (running) since Wed 2024-07-17 17:09:27 UTC; 37s ago Docs: https://frrouting.readthedocs.io/en/latest/setup.html Process: 4051 ExecStart=/usr/lib/frr/frrinit.sh start (code=exited, status=0/SUCCESS) Main PID: 4071 (watchfrr) Status: \"FRR Operational\" Tasks: 1 (limit: 1049) Memory: 1.8M CGroup: /system.slice/frr.service \u2514\u25004071 /usr/lib/frr/watchfrr -d -F traditional zebra mgmtd isisd staticd Jul 17 17:09:27 r2 systemd[1]: Starting FRRouting... Jul 17 17:09:27 r2 frrinit.sh[4051]: * Starting watchfrr with command: ' /usr/lib/frr/watchfrr -d -F traditional zebra mgmtd > Jul 17 17:09:27 r2 watchfrr[4071]: [T83RR-8SM5G] watchfrr 10.0.1 starting: vty@0 Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] zebra state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] mgmtd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] isisd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [QDG3Y-BY5TN] staticd state -> up : connect succeeded Jul 17 17:09:27 r2 watchfrr[4071]: [KWE5Q-QNGFC] all daemons up, doing startup-complete notify Jul 17 17:09:27 r2 frrinit.sh[4051]: * Started watchfrr Jul 17 17:09:27 r2 systemd[1]: Started FRRouting. You cannot use the same command in FRRouting containers as they don\u2019t use systemd . The easiest way to find daemons in FRRouting containers is to use the ps -ef|grep frr command 3 . This is the printout you could get when the IS-IS daemon is already running: 1 root 0:00 /sbin/tini -- /usr/lib/frr/docker-start 7 root 0:00 {docker-start} /bin/bash /usr/lib/frr/docker-start 15 root 0:00 /usr/lib/frr/watchfrr zebra mgmtd isisd staticd 25 frr 0:00 /usr/lib/frr/zebra -d -F datacenter -A 127.0.0.1 -s 90000000 30 frr 0:00 /usr/lib/frr/mgmtd -d -F datacenter 32 frr 0:00 /usr/lib/frr/isisd -d -F datacenter -A 127.0.0.1 35 frr 0:00 /usr/lib/frr/staticd -d -F datacenter -A 127.0.0.1 366 root 0:00 grep frr The list of FRRouting daemons you want to enable is stored in the /etc/frr/daemons file. To enable the FRRouting IS-IS daemon, you have to: Add the isisd=yes line to the /etc/frr/daemons file 4 . Restart FRRouting with the sudo systemctl restart frr.service command (see also: using sudo ) Warning You cannot change the FRR daemons in FRR containers. Restarting FRR would kill the container. netlab takes care of that and enables all the daemons necessary to complete the lab exercises. Restarting FRR daemons wipes out the current (running) configuration. If you want to retain it, save it to the startup configuration with the vtysh write command. The write command saves the running configuration (that you can inspect with show running-config ) into the /etc/frr/frr.conf file. However, the show startup-config 5 does not display the content of that file. Exit vtysh and use the more /etc/frr/frr.conf command 6 to inspect it. You could add the required line to the FRRouting daemons file with any text editor 7 or use the following trick: Use sudo bash to start another Linux shell as the root user Use the echo command with output redirection to add a line to the /etc/frr/daemons file. rtr(bash)#sudo bash root@rtr:/# echo 'isis=yes' >>/etc/frr/daemons root@rtr:/# exit After enabling the IS-IS daemon and restarting FRR, you should see the isisd process in the ps -ef printout or the IS-IS daemon mentioned in the sudo systemctl status frr.service printout.","title":"Start the IS-IS Daemon"},{"location":"basic/0-frrouting/#vtysh","text":"FRRouting suite includes a virtual shell ( vtysh ) closely resembling industry-standard CLI 8 . It has to be started from the Linux command line with the vtysh command. The vtysh CLI has to run as the root user unless you change the FRR-related permissions to allow a regular user to use it. The usual command to start the vtysh is thus sudo vtysh (but see also To Sudo Or Not to Sudo ). r2(bash)#sudo vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# Once you started vtysh , you can execute show commands to inspect the device state, for example: r2(bash)#sudo vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# show ip route Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 10.0.0.2/32 is directly connected, lo, 00:02:26 C>* 10.1.0.0/30 is directly connected, eth1, 00:02:26 You can also use the --show option of the netlab connect command to execute a single command on a FRR/Cumulus Linux device[^UQ]. For example, to inspect the IS-IS topology database, use netlab connect --show isis database : $ netlab connect r2 --show isis database Connecting to container clab-frrouting-r2, executing vtysh -c \"show isis database\" Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 * 81 0x00000001 0xec86 1489 0/0/0 1 LSPs To configure FRRouting daemons, use the configure vtysh command and enter configuration commands similar to those you\u2019d use on Cisco IOS or Arista EOS: r2(bash)#vtysh Hello, this is FRRouting (version 9.1_git). Copyright 1996-2005 Kunihiro Ishiguro, et al. r2# configure r2(config)# router isis Gandalf r2(config-router)#","title":"Work with the FRRouting CLI"},{"location":"basic/0-frrouting/#sudo","text":"The vtysh usually has to run as the root user, so you should start it with the sudo vtysh command. Unfortunately, things are never as simple as they look in the Linux world: When using SSH, you log into Cumulus Linux or FRRouting virtual machines as a regular user (user vagrant in netlab -created labs) and have to use the sudo command to start vtysh . Cumulus Linux and FRR containers run as the root user, and you connect to them as the root user with the docker exec or netlab connect commands 9 . When working with containers, you can start vtysh without using the sudo command. You can execute sudo vtysh as a root user on Cumulus Linux containers but not within an FRR container. The FRR container does not include the sudo command. Long story short: Use sudo vtysh whenever possible to burn it into your muscle memory. Use vtysh if you use FRRouting containers as the lab devices.","title":"To Sudo Or Not to Sudo"},{"location":"basic/0-frrouting/#using-output-filters","text":"Unlike many other network operating systems, FRRouting vtysh does not have output filters. You probably don\u2019t need them as you\u2019ll be running FRR on top of a Unix-like operating system that supports pipes, but it might be a bit convoluted to use vtysh in a pipe. To use the vtysh output in a pipe, you have to execute vtysh and get the results of a show command in a single command: You could use sudo vtysh -c 'show command' when you\u2019re in the bash shell of a lab device, for example: r2(bash)#vtysh -c 'show isis database'|grep r2 r2.00-00 * 81 0x00000001 0xec86 1302 0/0/0 Alternatively, you could use the netlab connect --show command to execute a vtysh show command on a lab device: $ netlab connect r2 -q --show isis database|grep r2 r2.00-00 * 81 0x00000001 0xec86 1286 0/0/0 Tip Use netlab connect --quiet --show to omit the Connecting to... message. The following table contains a mapping between common network operating system filters and Linux CLI commands: NOS filter Linux CLI command include grep exclude grep -v begin grep -A 10000 10 end grep -B 10000 section no equivalent Including devices based on Linux like Arista EOS, Cisco Nexus OS, or Nokia SR Linux \u21a9 The printout details depend on the Linux and FRR versions, but you\u2019ll always be able to determine whether the IS-IS process is running. \u21a9 You can use the same command with FRRouting running in a virtual machine. \u21a9 See Configuring FRRouting Cumulus Linux documentation for more details. \u21a9 At least on FRRouting version 9.1 and earlier \u21a9 You might have to prefix it with sudo \u21a9 vi is available in Cumulus Linux containers. vi and nano are available in Cumulus Linux and FRR virtual machines. \u21a9 An euphemism for Cisco IOS CLI that is used when you try to avoid nasty encounters with Cisco\u2019s legal team. \u21a9 When in doubt, use the whoami command. \u21a9 The \u201810000\u2019 parameter specifies the number of lines after the match. Increase it for very long printouts ;) \u21a9","title":"Using Output Filters"},{"location":"basic/1-simple-ipv4/","text":"Configure IS-IS Routing for IPv4 We\u2019ll start with the simplest possible scenario: we\u2019re adding a new router to an existing IS-IS network and have to configure IS-IS routing on it. Device Requirements Use any netlab -supported device for the router you\u2019ll be configuring. Use a device supported by the netlab IS-IS configuration module for X1 and X2 (default: FRRouting virtual machines or containers). You can do automated lab validation when using FRRouting on the external routers. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/1-simple-ipv4 Execute netlab up Log into your device (RTR) with netlab connect rtr and verify that the IP addresses are configured on all its interfaces. You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on X1 and X2 but not RTR. Configuration Tasks The minimal IS-IS configuration process has three or four steps: Start an IS-IS routing process with a global configuration command similar to router isis . You might have to specify a routing process tag \u2013 a string that identifies the IS-IS instance in other configuration commands. Assign a CLNS address (NET \u2013 Network Entity Title) to the IS-IS routing process with a routing configuration command similar to net address ( more details ). The NET assigned to your router is 49.0001.0000.0000.0042.00 Enable IS-IS routing for IPv4 on individual interfaces with an interface configuration command similar to ip router isis tag or isis enable tag . Some devices also want you to configure which address families (IPv4 or IPv6) you want to route with IS-IS. The router configuration command to do that is often address-family ipv4 . Tip If you\u2019re using FRRouting on RTR, you might have to enable the IS-IS daemon first. You\u2019ll find more details in the Configuring IS-IS on FRRouting lab. Unfortunately, most IS-IS implementations are ancient and use defaults that might have made sense decades ago. You should also configure the following parameters 1 : Configure the links with two nodes attached to them as point-to-point links with an interface configuration command similar to isis network point-to-point (more details in IS-IS on Point-to-Point Links ) Configure your router to be a Level-2-Only router with the router configuration command similar to is-type level-2-only 2 (more details in Optimize Simple IS-IS Deployments ). On some devices, you\u2019ll have to configure wide metrics with a router configuration command similar to metric-style wide 4 (more details in Using IS-IS Metrics ). Finally, you might have to configure the standard point-to-point three-way handshake on Cisco IOSv 3 . The interface configuration command to do that is \u200cisis three-way-handshake ietf . Finally, make sure your configuration includes these settings: Logging of adjacency changes (typically configured with a router configuration command like log-adjacency-changes ) Dynamic mapping of NETs to hostnames (usually enabled; sometimes you can\u2019t turn it off) Validation You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on the external routers. This is the printout you should get after completing the lab exercise: You should also do basic manual validation on your device: Inspect IS-IS adjacencies with a command similar to show isis neighbors or show isis adjacency . Your router should have level-2 adjacencies with X1 and X2; this is the printout you should get on FRRouting: IS-IS neighbors (FRRouting) rtr# show isis neighbor Area SomeTag: System Id Interface L State Holdtime SNPA x1 eth1 2 Up 29 2020.2020.2020 x2 eth2 2 Up 30 2020.2020.2020 If your device has commands similar to show isis topology , show isis network topology , or show isis route , use them to display the shortest paths to other routers and the best IS-IS paths. IS-IS network topology (first part of the printout) and IPv4 routing table on FRRouting rtr# show isis route Area SomeTag: IS-IS paths to level-2 routers that speak IP Vertex Type Metric Next-Hop Interface Parent rtr 10.1.0.0/30 IP internal 0 rtr(4) 10.1.0.4/30 IP internal 0 rtr(4) x1 TE-IS 10 x1 eth1 rtr(4) x2 TE-IS 10 x2 eth2 rtr(4) 10.0.0.2/32 IP TE 20 x1 eth1 x1(4) 10.1.0.0/30 IP TE 20 x1 eth1 x1(4) 10.0.0.3/32 IP TE 20 x2 eth2 x2(4) 10.1.0.4/30 IP TE 20 x2 eth2 x2(4) IS-IS L2 IPv4 routing table: Prefix Metric Interface Nexthop Label(s) ---------------------------------------------------- 10.0.0.2/32 20 eth1 10.1.0.2 - 10.0.0.3/32 20 eth2 10.1.0.6 - 10.1.0.0/30 20 eth1 10.1.0.2 - 10.1.0.4/30 20 eth2 10.1.0.6 - IS-IS network topology on Arista EOS rtr>show isis network topology IS-IS Instance: SomeTag VRF: default IS-IS paths to level-2 routers System Id Metric IA Metric Next-Hop Interface SNPA x1 10 0 x1 Ethernet1 P2P x2 10 0 x2 Ethernet2 P2P Finally, inspect the IP routing table and verify that you can see three loopback prefixes (10.0.0.1/32 through 10.0.0.3/32). This is the printout you should get on FRRouting IS-IS routes in the IPv4 routing table (FRRouting) rtr# show ip route isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:47 I>* 10.0.0.3/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:00:18 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth1 inactive, weight 1, 00:00:47 I 10.1.0.4/30 [115/20] via 10.1.0.6, eth2 inactive, weight 1, 00:00:18 FRRouting uses the IP routing table as the repository of all routes , not just the best routes , so it displays the inactive IS-IS routes. Other network devices, for example Arista EOS 5 , display just the active IS-IS routes: IS-IS routes in IPv4 routing table on Arista EOS rtr#show ip route isis detail|begin Priority Priority Codes: PL - Priority low, PM - Priority medium, PH - Priority high I L2 10.0.0.2/32 [115/20] via 10.1.0.2, Ethernet1 rtr -> x1 I L2 10.0.0.3/32 [115/20] via 10.1.0.6, Ethernet2 rtr -> x2 Next: Explore IS-IS Data Structures . That lab uses the same topology and device configurations, so you can keep going without restarting the lab. Background Information IS-IS was designed to be the routing protocol for the ISO/OSI protocol stack. Its name is derived from ISO terminology: IS stands for Intermediate System (the device also known as router , gateway or layer-3 switch ). Thus, IS-IS is the protocol that runs between Intermediate Systems (in other words, the router-to-router protocol). While ISO designed IS-IS to be used with CLNP, its data structures (everything is CLV 6 -based) made it easy to extend, and so IETF quickly specified how to use IS-IS for IPv4 and (later) IPv6 routing. IS-IS does not run on top of another layer-3 protocol like OSPF or BGP run on top of IP; it is an independent protocol at layer-3 and uses a dedicated 802.1 SAP ( more details ). You cannot use the standard IP access control mechanisms with IS-IS; on the other hand, it\u2019s impossible to spoof IS-IS messages if the intruder does not have access to the underlying layer-2 infrastructure. IS-IS addressing follows the OSI addressing principles. Network addresses (Network Service Access Points \u2013 NSAPs) are assigned to nodes , not interfaces . OSI protocol suite used variable-length addresses, and according to the ( poorly formatted copy of ) IS-IS specifications, the NET is split into three parts (you\u2019ll find more details in RFC 1237 ): +--------+-----------+----+ | Area | System-ID | NS | +--------+-----------+----+ The NSAP Selector (the last byte) specifies the software entity on the node that should receive the packet (similar to the TCP/UDP/OSPF protocol type within the IPv4 header). IS-IS uses NSAP selector value zero and calls the resulting address Network Entity Title (NET). Thus, the last byte of NET always has to be zero. The System ID (node address within an area, similar to the subnet part of an IP address) is one to eight bytes long. Subsequent parts of IS-IS specification assume a 6-byte System ID (12 hexadecimal characters), and that\u2019s what all implementations use. The Area is whatever is left on the left-hand side of the NET after you take away the rightmost seven bytes. The NET is usually formatted as a hexadecimal string (two hexadecimal digits per byte) with two-byte portions (four hexadecimal digits) separated by a dot. The placement of dots is a bit counterintuitive: The rightmost dot has to be between the System ID and NSAP Selector. Subsequent dots have to be four characters left of the previous dot, resulting in two dots within the System ID and a dot between the node System ID and the IS-IS area. For example, the NET we used in this lab ( 49000100000000004200 )has to be written as 49.0001.0000.0000.0042.00 . The area address could have any length 7 as long as it\u2019s specified as a whole number of bytes (an even number of digits). IS-IS doesn\u2019t care about the contents of the area address. If two routers have the value in that part of the NET, they belong to the same area; if not, they don\u2019t. Finally, other ISO standards define the meaning of the leftmost part of a network address (NSAP). The first (leftmost) byte is the Authority and Format Identifier (AFI), and the value 49 indicates private address space (similar to RFC 1918 IPv4 address space) (see RFC 1629 for more details). Using two bytes as the area ID usually makes sense, and that\u2019s why most NETs you find in online examples start with 49.0001 ;) 8 Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port rtr Ethernet1 x1 eth1 rtr Ethernet2 x2 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description rtr 10.0.0.1/32 Loopback Ethernet1 10.1.0.1/30 rtr -> x1 Ethernet2 10.1.0.5/30 rtr -> x2 x1 10.0.0.2/32 Loopback eth1 10.1.0.2/30 x1 -> rtr x2 10.0.0.3/32 Loopback eth1 10.1.0.6/30 x2 -> rtr Trust me for the moment; we\u2019ll discuss them in great detail in subsequent lab exercises. \u21a9 You don\u2019t have to configure the interface circuit-type once you configured the device to be a level-2-only router. A level-2-only router will never send level-1 hellos. \u21a9 The IOSv image on which I had to do that was obviously ancient but still 13 years younger than the RFC 3373 that standardized the three-way handshake. \u21a9 As crazy as it sounds, some devices still use the ancient narrow metrics as the default setting 20 years after the wide metrics were defined in RFC 3784 . \u21a9 The detail option of the show ip route command includes the interface description, and the |begin Priority output filter removes the legend. \u21a9 Code/Length/Value: every bit of information starts with a code (one byte), followed by length (one byte) and the actual value. This encoding approach is more commonly called TLV (Type/Length/Value). \u21a9 There must be some upper limit. \u21a9 In the early days of IS-IS, when people still believed that the OSI protocol stack (with CLNS at layer-3) might win the protocol wars, service providers used official NSAP prefixes allocated by government agencies (see RFC 1237 for details ). CLNS is long gone, and we only need NETs to address IS-IS routers. Area 49.0001 is good enough for that. You can also use Area 51 if you\u2019re so inclined (yes, it works; IS-IS does not care about the contents of the area field). \u21a9","title":"Configure IS-IS Routing for IPv4"},{"location":"basic/1-simple-ipv4/#configure-is-is-routing-for-ipv4","text":"We\u2019ll start with the simplest possible scenario: we\u2019re adding a new router to an existing IS-IS network and have to configure IS-IS routing on it.","title":"Configure IS-IS Routing for IPv4"},{"location":"basic/1-simple-ipv4/#device-requirements","text":"Use any netlab -supported device for the router you\u2019ll be configuring. Use a device supported by the netlab IS-IS configuration module for X1 and X2 (default: FRRouting virtual machines or containers). You can do automated lab validation when using FRRouting on the external routers.","title":"Device Requirements"},{"location":"basic/1-simple-ipv4/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/1-simple-ipv4 Execute netlab up Log into your device (RTR) with netlab connect rtr and verify that the IP addresses are configured on all its interfaces. You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on X1 and X2 but not RTR.","title":"Starting the Lab"},{"location":"basic/1-simple-ipv4/#configuration-tasks","text":"The minimal IS-IS configuration process has three or four steps: Start an IS-IS routing process with a global configuration command similar to router isis . You might have to specify a routing process tag \u2013 a string that identifies the IS-IS instance in other configuration commands. Assign a CLNS address (NET \u2013 Network Entity Title) to the IS-IS routing process with a routing configuration command similar to net address ( more details ). The NET assigned to your router is 49.0001.0000.0000.0042.00 Enable IS-IS routing for IPv4 on individual interfaces with an interface configuration command similar to ip router isis tag or isis enable tag . Some devices also want you to configure which address families (IPv4 or IPv6) you want to route with IS-IS. The router configuration command to do that is often address-family ipv4 . Tip If you\u2019re using FRRouting on RTR, you might have to enable the IS-IS daemon first. You\u2019ll find more details in the Configuring IS-IS on FRRouting lab. Unfortunately, most IS-IS implementations are ancient and use defaults that might have made sense decades ago. You should also configure the following parameters 1 : Configure the links with two nodes attached to them as point-to-point links with an interface configuration command similar to isis network point-to-point (more details in IS-IS on Point-to-Point Links ) Configure your router to be a Level-2-Only router with the router configuration command similar to is-type level-2-only 2 (more details in Optimize Simple IS-IS Deployments ). On some devices, you\u2019ll have to configure wide metrics with a router configuration command similar to metric-style wide 4 (more details in Using IS-IS Metrics ). Finally, you might have to configure the standard point-to-point three-way handshake on Cisco IOSv 3 . The interface configuration command to do that is \u200cisis three-way-handshake ietf . Finally, make sure your configuration includes these settings: Logging of adjacency changes (typically configured with a router configuration command like log-adjacency-changes ) Dynamic mapping of NETs to hostnames (usually enabled; sometimes you can\u2019t turn it off)","title":"Configuration Tasks"},{"location":"basic/1-simple-ipv4/#validation","text":"You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on the external routers. This is the printout you should get after completing the lab exercise: You should also do basic manual validation on your device: Inspect IS-IS adjacencies with a command similar to show isis neighbors or show isis adjacency . Your router should have level-2 adjacencies with X1 and X2; this is the printout you should get on FRRouting: IS-IS neighbors (FRRouting) rtr# show isis neighbor Area SomeTag: System Id Interface L State Holdtime SNPA x1 eth1 2 Up 29 2020.2020.2020 x2 eth2 2 Up 30 2020.2020.2020 If your device has commands similar to show isis topology , show isis network topology , or show isis route , use them to display the shortest paths to other routers and the best IS-IS paths. IS-IS network topology (first part of the printout) and IPv4 routing table on FRRouting rtr# show isis route Area SomeTag: IS-IS paths to level-2 routers that speak IP Vertex Type Metric Next-Hop Interface Parent rtr 10.1.0.0/30 IP internal 0 rtr(4) 10.1.0.4/30 IP internal 0 rtr(4) x1 TE-IS 10 x1 eth1 rtr(4) x2 TE-IS 10 x2 eth2 rtr(4) 10.0.0.2/32 IP TE 20 x1 eth1 x1(4) 10.1.0.0/30 IP TE 20 x1 eth1 x1(4) 10.0.0.3/32 IP TE 20 x2 eth2 x2(4) 10.1.0.4/30 IP TE 20 x2 eth2 x2(4) IS-IS L2 IPv4 routing table: Prefix Metric Interface Nexthop Label(s) ---------------------------------------------------- 10.0.0.2/32 20 eth1 10.1.0.2 - 10.0.0.3/32 20 eth2 10.1.0.6 - 10.1.0.0/30 20 eth1 10.1.0.2 - 10.1.0.4/30 20 eth2 10.1.0.6 - IS-IS network topology on Arista EOS rtr>show isis network topology IS-IS Instance: SomeTag VRF: default IS-IS paths to level-2 routers System Id Metric IA Metric Next-Hop Interface SNPA x1 10 0 x1 Ethernet1 P2P x2 10 0 x2 Ethernet2 P2P Finally, inspect the IP routing table and verify that you can see three loopback prefixes (10.0.0.1/32 through 10.0.0.3/32). This is the printout you should get on FRRouting IS-IS routes in the IPv4 routing table (FRRouting) rtr# show ip route isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:47 I>* 10.0.0.3/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:00:18 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth1 inactive, weight 1, 00:00:47 I 10.1.0.4/30 [115/20] via 10.1.0.6, eth2 inactive, weight 1, 00:00:18 FRRouting uses the IP routing table as the repository of all routes , not just the best routes , so it displays the inactive IS-IS routes. Other network devices, for example Arista EOS 5 , display just the active IS-IS routes: IS-IS routes in IPv4 routing table on Arista EOS rtr#show ip route isis detail|begin Priority Priority Codes: PL - Priority low, PM - Priority medium, PH - Priority high I L2 10.0.0.2/32 [115/20] via 10.1.0.2, Ethernet1 rtr -> x1 I L2 10.0.0.3/32 [115/20] via 10.1.0.6, Ethernet2 rtr -> x2 Next: Explore IS-IS Data Structures . That lab uses the same topology and device configurations, so you can keep going without restarting the lab.","title":"Validation"},{"location":"basic/1-simple-ipv4/#bg","text":"IS-IS was designed to be the routing protocol for the ISO/OSI protocol stack. Its name is derived from ISO terminology: IS stands for Intermediate System (the device also known as router , gateway or layer-3 switch ). Thus, IS-IS is the protocol that runs between Intermediate Systems (in other words, the router-to-router protocol). While ISO designed IS-IS to be used with CLNP, its data structures (everything is CLV 6 -based) made it easy to extend, and so IETF quickly specified how to use IS-IS for IPv4 and (later) IPv6 routing. IS-IS does not run on top of another layer-3 protocol like OSPF or BGP run on top of IP; it is an independent protocol at layer-3 and uses a dedicated 802.1 SAP ( more details ). You cannot use the standard IP access control mechanisms with IS-IS; on the other hand, it\u2019s impossible to spoof IS-IS messages if the intruder does not have access to the underlying layer-2 infrastructure. IS-IS addressing follows the OSI addressing principles. Network addresses (Network Service Access Points \u2013 NSAPs) are assigned to nodes , not interfaces . OSI protocol suite used variable-length addresses, and according to the ( poorly formatted copy of ) IS-IS specifications, the NET is split into three parts (you\u2019ll find more details in RFC 1237 ): +--------+-----------+----+ | Area | System-ID | NS | +--------+-----------+----+ The NSAP Selector (the last byte) specifies the software entity on the node that should receive the packet (similar to the TCP/UDP/OSPF protocol type within the IPv4 header). IS-IS uses NSAP selector value zero and calls the resulting address Network Entity Title (NET). Thus, the last byte of NET always has to be zero. The System ID (node address within an area, similar to the subnet part of an IP address) is one to eight bytes long. Subsequent parts of IS-IS specification assume a 6-byte System ID (12 hexadecimal characters), and that\u2019s what all implementations use. The Area is whatever is left on the left-hand side of the NET after you take away the rightmost seven bytes. The NET is usually formatted as a hexadecimal string (two hexadecimal digits per byte) with two-byte portions (four hexadecimal digits) separated by a dot. The placement of dots is a bit counterintuitive: The rightmost dot has to be between the System ID and NSAP Selector. Subsequent dots have to be four characters left of the previous dot, resulting in two dots within the System ID and a dot between the node System ID and the IS-IS area. For example, the NET we used in this lab ( 49000100000000004200 )has to be written as 49.0001.0000.0000.0042.00 . The area address could have any length 7 as long as it\u2019s specified as a whole number of bytes (an even number of digits). IS-IS doesn\u2019t care about the contents of the area address. If two routers have the value in that part of the NET, they belong to the same area; if not, they don\u2019t. Finally, other ISO standards define the meaning of the leftmost part of a network address (NSAP). The first (leftmost) byte is the Authority and Format Identifier (AFI), and the value 49 indicates private address space (similar to RFC 1918 IPv4 address space) (see RFC 1629 for more details). Using two bytes as the area ID usually makes sense, and that\u2019s why most NETs you find in online examples start with 49.0001 ;) 8","title":"Background Information"},{"location":"basic/1-simple-ipv4/#reference-information","text":"","title":"Reference Information"},{"location":"basic/1-simple-ipv4/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port rtr Ethernet1 x1 eth1 rtr Ethernet2 x2 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2.","title":"Lab Wiring"},{"location":"basic/1-simple-ipv4/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description rtr 10.0.0.1/32 Loopback Ethernet1 10.1.0.1/30 rtr -> x1 Ethernet2 10.1.0.5/30 rtr -> x2 x1 10.0.0.2/32 Loopback eth1 10.1.0.2/30 x1 -> rtr x2 10.0.0.3/32 Loopback eth1 10.1.0.6/30 x2 -> rtr Trust me for the moment; we\u2019ll discuss them in great detail in subsequent lab exercises. \u21a9 You don\u2019t have to configure the interface circuit-type once you configured the device to be a level-2-only router. A level-2-only router will never send level-1 hellos. \u21a9 The IOSv image on which I had to do that was obviously ancient but still 13 years younger than the RFC 3373 that standardized the three-way handshake. \u21a9 As crazy as it sounds, some devices still use the ancient narrow metrics as the default setting 20 years after the wide metrics were defined in RFC 3784 . \u21a9 The detail option of the show ip route command includes the interface description, and the |begin Priority output filter removes the legend. \u21a9 Code/Length/Value: every bit of information starts with a code (one byte), followed by length (one byte) and the actual value. This encoding approach is more commonly called TLV (Type/Length/Value). \u21a9 There must be some upper limit. \u21a9 In the early days of IS-IS, when people still believed that the OSI protocol stack (with CLNS at layer-3) might win the protocol wars, service providers used official NSAP prefixes allocated by government agencies (see RFC 1237 for details ). CLNS is long gone, and we only need NETs to address IS-IS routers. Area 49.0001 is good enough for that. You can also use Area 51 if you\u2019re so inclined (yes, it works; IS-IS does not care about the contents of the area field). \u21a9","title":"Lab Addressing"},{"location":"basic/2-explore/","text":"Explore IS-IS Data Structures You\u2019ll explore IS-IS adjacencies and the IS-IS LSP database (LSPDB) 1 in this lab. We\u2019ll use the topology from the Configure IS-IS Routing for IPv4 lab exercise: Device Requirements Use any device supported by the netlab IS-IS configuration module . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/2-explore Execute netlab up . You\u2019ll get a lab with IPv4 addresses and IS-IS routing configured on all lab devices. Log into your device (RTR) with netlab connect rtr Explore Router Configuration Unless you\u2019re absolutely sure how your router is configured, always start with a high-level overview of IS-IS settings, usually displayed with a command like show isis summary (or maybe it\u2019s called show isis or show isis protocol on your platform). The most significant bits of information include: NET , which can be split into area and system ID . Some devices display NET; others display the IS-IS area and the system ID as independent components. The address families (CLNP/NSAPs, IPv4, IPv6, IP multicast) Router type: intra-area router (level-1), inter-area router (level-2) or multi-level router 2 (level-1-2, sometimes shown as level-3 because 1+2=3). Try to find the above information in the printout produced by FRRouting and Arista cEOS: Basic IS-IS information displayed by FRRouting $ netlab connect rtr --show isis summary vrf : default Process Id : 32 System Id : 0000.0000.0001 Up time : 00:00:15 ago Number of areas : 1 Area Gandalf: Net: 49.0001.0000.0000.0001.00 TX counters per PDU type: L2 IIH: 2 P2P IIH: 14 L2 LSP: 8 L2 CSNP: 4 L2 PSNP: 4 LSP RXMT: 0 RX counters per PDU type: P2P IIH: 14 L2 LSP: 4 L2 CSNP: 4 L2 PSNP: 4 Drop counters per PDU type: Advertise high metrics: Disabled Level-2: LSP0 regenerated: 2 LSPs purged: 0 SPF: minimum interval : 1 IPv4 route computation: last run elapsed : 00:00:13 ago last run duration : 152 usec run count : 2 Basic IS-IS information displayed by Arista cEOS rtr>show isis summary IS-IS Instance: Gandalf VRF: default Instance ID: 0 System ID: 0000.0000.0001, administratively enabled Router ID: IPv4: 10.0.0.1 Hostname: rtr Multi Topology disabled, not attached IPv4 Preference: Level 1: 115, Level 2: 115 IPv6 Preference: Level 1: 115, Level 2: 115 IS-Type: Level 2, Number active interfaces: 3 Routes IPv4 only LSP size maximum: Level 1: 1492, Level 2: 1492 Interval Type Max Wait Initial Wait Hold Interval ----------------------- -------- ------------ ------------- LSP generation interval 5 s 50 ms 50 ms SPF interval 2000 ms 1000 ms 1000 ms Current SPF hold interval(ms): Level 1: 0, Level 2: 2000 Last Level 2 SPF run 7 seconds ago CSNP generation interval: 10 seconds Dynamic Flooding: Disabled Authentication mode: Level 1: None, Level 2: None Graceful Restart: Disabled, Graceful Restart Helper: Enabled Area addresses: 49.0001 level 2: number DIS interfaces: 0, LSDB size: 3 Area Leader: None Overload Bit is not set. Redistributed Level 1 routes: 0 limit: Not Configured Redistributed Level 2 routes: 0 limit: Not Configured Explore IS-IS Adjacencies IS-IS high-level principles are similar to OSPF ones: A hello protocol is used to discover neighbors. Unlike OSPF, which uses IP as a layer-3 protocol, IS-IS uses its own layer-3 protocol (IS-IS hello packets are encapsulated directly into layer-2 frames; more details ). Once the neighbors are discovered, an adjacency is established with them. Neighbors exchange the description (table-of-contents) of their LSP database 3 and, based on the results of that exchange, any missing LSPs. Examining IS-IS neighbors is thus the next logical step after examining the local IS-IS parameters; the command to use is often show isis neighbor (or show isis adjacency ). You should be looking for the following information: The local interface Neighbor name or system ID. Most modern IS-IS implementations display neighbor names 4 . The state of adjacency (it should be Up , but could also be Down or Init ) The type of adjacency: intra-area adjacency (level-1), inter-area adjacency (level-2) or multi-level adjacency (level-1-2) 5 . Remote MAC address (SNPA 6 ). The remote MAC address is sometimes displayed as 2020.2020.2020 on point-to-point links. Tip All routers in your lab are configured as level-2 routers and should have only level-2 adjacencies. Another useful command when checking IS-IS adjacencies is show isis interface Try to extract the above information from the printouts generated by FRRouting and Arista cEOS: IS-IS neighbors displayed by FRRouting $ netlab connect rtr --show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA x1 eth1 2 Up 29 2020.2020.2020 x2 eth2 2 Up 29 2020.2020.2020 IS-IS neighbors displayed by Arista cEOS rtr>show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default x1 L2 Ethernet1 P2P UP 29 00 Gandalf default x2 L2 Ethernet2 P2P UP 29 00 Sometimes, you have to dig deeper and display neighbor details; a typical command to display those details is show isis neighbor detail . The details include: The address families supported by the neighbor (IPv4, IPv6) Neighbor\u2019s area address and interface IPv4/IPv6 address. Neighbor health statistics, including the number of flaps 7 and the remaining hold timer. Extract the above information from the printouts generated by FRRouting and Arista cEOS. The IS-IS neighbor details displayed by FRRouting $ netlab connect rtr --show isis neighbor detail Area Gandalf: x1 Interface: eth1, Level: 2, State: Up, Expires in 28s Adjacency flaps: 1, Last: 1m22s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.2 x2 Interface: eth2, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 1m22s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 The IS-IS neighbor details displayed by Arista cEOS rtr>show isis neighbors detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default x1 L2 Ethernet1 P2P UP 29 00 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:02:19 ago at 2024-08-08 10:46:49 IPv4 Interface Address: 10.1.0.2 IPv6 Interface Address: none Interface name: Ethernet1 Graceful Restart: Not Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4 Explore IS-IS LSP Database Like OSPF (with its topology database), IS-IS uses an LSP database 8 (LSPDB). LSPDB is not a true database; it\u2019s a distributed eventually-consistent 9 key-value store 10 shared among all routers in an area or among all inter-area routers. Unlike OSPF, where an ABR could have topology information for multiple areas, IS-IS uses a simpler two-level approach: Routers participating in intra-area routing (level-1 and level-1-2 routers) share a level-1 link-state database containing intra-area topology and prefixes. Level-1-2 and level-2 routers (inter-area routers) share a level-2 link-state database containing inter-area topology and prefixes from all IS-IS areas. Tip All routers in your lab are configured as level-2 routers and thus share only the level-2 LSPDB 11 . OSPF stores various bits of topology information in multiple types of Link State Advertisements (LSA). IS-IS stores all information generated by a single router in a single Link State PDU 12 (LSP) unless it has too much information for a single LSP, in which case it generates multiple LSP fragments ( more details ). Tip IS-IS cannot fragment LSPs in transit; the maximum LSP size must never exceed the lowest MTU of any link in the IS-IS network. IS-IS contains no mechanism to detect the minimum network-wide MTU dynamically; you have to set the maximum LSP size with a router configuration command similar to lsp-mtu . The identifier of an IS-IS LSP (LSP ID) is always in the format systemid.nodeid-fragmentid : The systemid is the 6-octet System ID part of NET . While IS-IS internally uses the 6-octet value, most implementations display hostnames in the show commands. You can often use a command like show isis hostname to display the name-to-system-ID mappings. The nodeid is zero for an LSP describing the router\u2019s information and non-zero for LAN pseudonodes 13 . The fragmentid is the sequence number of the LSP fragment . You can inspect the IS-IS topology database with a command similar to show isis database . The short printout usually lists the LSPs (their LSP ID), the LSP length, their sequence number, and their remaining lifetime. Tip A quickly increasing LSP sequence number might indicate routing instabilities. The LSP database overview displayed by FRRouting $ netlab connect rtr --show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 113 0x00000002 0x902e 1626 0/0/0 x1.00-00 92 0x00000002 0x23a0 1659 0/0/0 x2.00-00 92 0x00000002 0xc8f0 1633 0/0/0 3 LSPs The IS-IS LSP database overview displayed by Arista cEOS rtr>show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags rtr.00-00 2 26795 1042 119 L2 0000.0000.0001.00-00 <> x1.00-00 2 9120 1610 92 L2 0000.0000.0002.00-00 <> x2.00-00 2 51440 1610 92 L2 0000.0000.0003.00-00 <> You can inspect the contents of an IS-IS LSP with a command similar to show isis database detail 14 . Each IS-IS LSP contains numerous data items encoded as Type-Length-Value (TLV) triplets. The TLV values are usually displayed in a human-friendly format; you\u2019d have to use a packet capture tool like tcpdump or wireshark to see the dirty details. The recognized IS-IS data types are collected in the IANA IS-IS TLV Codepoints registry; you\u2019d usually see the following TLVs in a modern IPv4 network: TLV Description 1 Area address 137 Hostname 242 Router capabilities 129 Supported protocols (IPv4/IPv6) 22 Extended IS Reachability 15 The information about an adjacent router and the cost to reach it 132 IPv4 Interface Address 135 IPv4 Extended Reachability The cost of a connected prefix This is how FRRouting and Arista cEOS display the LSP information: LSP content displayed by FRRouting $ netlab connect rtr --show isis database detail rtr.00-00 Connecting to container clab-explore-rtr, executing vtysh -c \"show isis database detail rtr.00-00\" Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 113 0x00000002 0x902e 1589 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: rtr TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) LSP content displayed by Arista EOS rtr>show isis database rtr.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags rtr.00-00 2 26795 1001 119 L2 0000.0000.0001.00-00 <> LSP generation remaining wait time: 0 ms Time remaining until refresh: 701 s NLPID: 0xCC(IPv4) Hostname: rtr Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.1 Interface address: 10.0.0.1 IS Neighbor : x1.00 Metric: 10 IS Neighbor : x2.00 Metric: 10 Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.1/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.1 Flags: [] Area leader priority: 250 algorithm: 0 The Shortest Path First (SPF) algorithm uses the information from the LSPDB to build a shortest-path (lowest-cost) tree spanning the network topology: The LSPs are nodes in the topology graph The \u200cExtended IS Reachability TLVs describe the unidirectional connectivity between nodes. The SPF algorithm has to do a two-way connectivity check (TWCC) 16 to verify two nodes can communicate. Links that don\u2019t pass the TWCC are not considered when building the shortest-path tree. After the SPF algorithm generates the spanning tree, it uses the minimum cost toward each node together with the Extended IP Reachability TLVs advertised by those nodes to find the minimum cost (and the optimum node/path/next hop) toward every prefix advertised by other routers. LSP Fragments You rarely see LSP fragments in small networks, but it\u2019s pretty easy to generate them by lowering the maximum LSP size. For example, if we reduce the LSP size on rtr to 256 17 , we\u2019ll get two fragments: LSP fragments describing the rtr state rtr# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 67 0x00000024 0xe3a6 1648 0/0/0 rtr.00-01 * 75 0x00000006 0xa54b 1648 0/0/0 x1.00-00 92 0x00000017 0xf8b5 1288 0/0/0 x2.00-00 92 0x00000018 0x9c07 1043 0/0/0 The LSP fragments contain the same information as the original LSP, only split across multiple smaller database objects: The detailed view of the LSP fragments rtr# show isis database detail rtr.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 67 0x00000024 0xe3a6 1590 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: rtr TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) rtr# show isis database detail rtr.00-01 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-01 * 75 0x00000006 0xa54b 1589 0/0/0 Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) Next: IS-IS on Point-to-Point Links Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port rtr Ethernet1 x1 eth1 rtr Ethernet2 x2 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description rtr 10.0.0.1/32 Loopback Ethernet1 10.1.0.1/30 rtr -> x1 Ethernet2 10.1.0.5/30 rtr -> x2 x1 10.0.0.2/32 Loopback eth1 10.1.0.2/30 x1 -> rtr x2 10.0.0.3/32 Loopback eth1 10.1.0.6/30 x2 -> rtr IS-IS equivalent of OSPF link-state database \u21a9 Similar, but not exactly equivalent to OSPF ABR \u21a9 Using the Complete Sequence Number Packets (CSNP) \u2013 a list of LSP descriptors (objects containing LSP-ID, LSP sequence number, remaining lifetime, and checksum). \u21a9 Router names are advertised using the Dynamic Hostname TLV defined in RFC 5301 . \u21a9 We\u2019re using level-2-only routers in the initial lab exercises. We\u2019ll explore multi-level routing in one of the more advanced exercises. \u21a9 Subnetwork point of attachment \u2013 a fancy OSI name for a MAC address. \u21a9 Not available on all platforms \u21a9 LSP (Link-State Protocol Data Unit) is the object a router uses to report information about the adjacent routers and known prefixes. \u21a9 The changes a router makes to an LSP are flooded across the network and are not visible to all other routers at the same time. All routers will eventually receive the changes though. \u21a9 The keys are LSP IDs, the values are the contents of the LSPs \u21a9 We\u2019ll cover multi-level IS-IS routing in another lab exercise. \u21a9 Protocol Data Unit, a fancy name for a packet. \u21a9 LAN pseudonodes are equivalent to OSPF type-2 LSA2. They are used on multi-access subnets; you should never encounter them if you\u2019re using IS-IS point-to-point links. \u21a9 Explore the commands available on your platform. For example, the Cisco IOS XR show command has verbose and internal options that display even more details. \u21a9 Also known as Wide Metrics (covered in another lab exercise). \u21a9 Node A must have an extended IS reachability TLV for node B, while at the same time, node B has an extended IS reachability TLV for node A. That\u2019s the best IS-IS can do, but even that is not enough if there are multiple point-to-point links between A and B. The proof is left as an exercise for the reader; you might find hints in RFC 5303 . \u21a9 In a real-life network, the maximum LSP size should match across all routers. \u21a9","title":"Explore IS-IS Data Structures"},{"location":"basic/2-explore/#explore-is-is-data-structures","text":"You\u2019ll explore IS-IS adjacencies and the IS-IS LSP database (LSPDB) 1 in this lab. We\u2019ll use the topology from the Configure IS-IS Routing for IPv4 lab exercise:","title":"Explore IS-IS Data Structures"},{"location":"basic/2-explore/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module .","title":"Device Requirements"},{"location":"basic/2-explore/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/2-explore Execute netlab up . You\u2019ll get a lab with IPv4 addresses and IS-IS routing configured on all lab devices. Log into your device (RTR) with netlab connect rtr","title":"Starting the Lab"},{"location":"basic/2-explore/#explore-router-configuration","text":"Unless you\u2019re absolutely sure how your router is configured, always start with a high-level overview of IS-IS settings, usually displayed with a command like show isis summary (or maybe it\u2019s called show isis or show isis protocol on your platform). The most significant bits of information include: NET , which can be split into area and system ID . Some devices display NET; others display the IS-IS area and the system ID as independent components. The address families (CLNP/NSAPs, IPv4, IPv6, IP multicast) Router type: intra-area router (level-1), inter-area router (level-2) or multi-level router 2 (level-1-2, sometimes shown as level-3 because 1+2=3). Try to find the above information in the printout produced by FRRouting and Arista cEOS: Basic IS-IS information displayed by FRRouting $ netlab connect rtr --show isis summary vrf : default Process Id : 32 System Id : 0000.0000.0001 Up time : 00:00:15 ago Number of areas : 1 Area Gandalf: Net: 49.0001.0000.0000.0001.00 TX counters per PDU type: L2 IIH: 2 P2P IIH: 14 L2 LSP: 8 L2 CSNP: 4 L2 PSNP: 4 LSP RXMT: 0 RX counters per PDU type: P2P IIH: 14 L2 LSP: 4 L2 CSNP: 4 L2 PSNP: 4 Drop counters per PDU type: Advertise high metrics: Disabled Level-2: LSP0 regenerated: 2 LSPs purged: 0 SPF: minimum interval : 1 IPv4 route computation: last run elapsed : 00:00:13 ago last run duration : 152 usec run count : 2 Basic IS-IS information displayed by Arista cEOS rtr>show isis summary IS-IS Instance: Gandalf VRF: default Instance ID: 0 System ID: 0000.0000.0001, administratively enabled Router ID: IPv4: 10.0.0.1 Hostname: rtr Multi Topology disabled, not attached IPv4 Preference: Level 1: 115, Level 2: 115 IPv6 Preference: Level 1: 115, Level 2: 115 IS-Type: Level 2, Number active interfaces: 3 Routes IPv4 only LSP size maximum: Level 1: 1492, Level 2: 1492 Interval Type Max Wait Initial Wait Hold Interval ----------------------- -------- ------------ ------------- LSP generation interval 5 s 50 ms 50 ms SPF interval 2000 ms 1000 ms 1000 ms Current SPF hold interval(ms): Level 1: 0, Level 2: 2000 Last Level 2 SPF run 7 seconds ago CSNP generation interval: 10 seconds Dynamic Flooding: Disabled Authentication mode: Level 1: None, Level 2: None Graceful Restart: Disabled, Graceful Restart Helper: Enabled Area addresses: 49.0001 level 2: number DIS interfaces: 0, LSDB size: 3 Area Leader: None Overload Bit is not set. Redistributed Level 1 routes: 0 limit: Not Configured Redistributed Level 2 routes: 0 limit: Not Configured","title":"Explore Router Configuration"},{"location":"basic/2-explore/#explore-is-is-adjacencies","text":"IS-IS high-level principles are similar to OSPF ones: A hello protocol is used to discover neighbors. Unlike OSPF, which uses IP as a layer-3 protocol, IS-IS uses its own layer-3 protocol (IS-IS hello packets are encapsulated directly into layer-2 frames; more details ). Once the neighbors are discovered, an adjacency is established with them. Neighbors exchange the description (table-of-contents) of their LSP database 3 and, based on the results of that exchange, any missing LSPs. Examining IS-IS neighbors is thus the next logical step after examining the local IS-IS parameters; the command to use is often show isis neighbor (or show isis adjacency ). You should be looking for the following information: The local interface Neighbor name or system ID. Most modern IS-IS implementations display neighbor names 4 . The state of adjacency (it should be Up , but could also be Down or Init ) The type of adjacency: intra-area adjacency (level-1), inter-area adjacency (level-2) or multi-level adjacency (level-1-2) 5 . Remote MAC address (SNPA 6 ). The remote MAC address is sometimes displayed as 2020.2020.2020 on point-to-point links. Tip All routers in your lab are configured as level-2 routers and should have only level-2 adjacencies. Another useful command when checking IS-IS adjacencies is show isis interface Try to extract the above information from the printouts generated by FRRouting and Arista cEOS: IS-IS neighbors displayed by FRRouting $ netlab connect rtr --show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA x1 eth1 2 Up 29 2020.2020.2020 x2 eth2 2 Up 29 2020.2020.2020 IS-IS neighbors displayed by Arista cEOS rtr>show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default x1 L2 Ethernet1 P2P UP 29 00 Gandalf default x2 L2 Ethernet2 P2P UP 29 00 Sometimes, you have to dig deeper and display neighbor details; a typical command to display those details is show isis neighbor detail . The details include: The address families supported by the neighbor (IPv4, IPv6) Neighbor\u2019s area address and interface IPv4/IPv6 address. Neighbor health statistics, including the number of flaps 7 and the remaining hold timer. Extract the above information from the printouts generated by FRRouting and Arista cEOS. The IS-IS neighbor details displayed by FRRouting $ netlab connect rtr --show isis neighbor detail Area Gandalf: x1 Interface: eth1, Level: 2, State: Up, Expires in 28s Adjacency flaps: 1, Last: 1m22s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.2 x2 Interface: eth2, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 1m22s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 The IS-IS neighbor details displayed by Arista cEOS rtr>show isis neighbors detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default x1 L2 Ethernet1 P2P UP 29 00 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:02:19 ago at 2024-08-08 10:46:49 IPv4 Interface Address: 10.1.0.2 IPv6 Interface Address: none Interface name: Ethernet1 Graceful Restart: Not Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4","title":"Explore IS-IS Adjacencies"},{"location":"basic/2-explore/#lspdb","text":"Like OSPF (with its topology database), IS-IS uses an LSP database 8 (LSPDB). LSPDB is not a true database; it\u2019s a distributed eventually-consistent 9 key-value store 10 shared among all routers in an area or among all inter-area routers. Unlike OSPF, where an ABR could have topology information for multiple areas, IS-IS uses a simpler two-level approach: Routers participating in intra-area routing (level-1 and level-1-2 routers) share a level-1 link-state database containing intra-area topology and prefixes. Level-1-2 and level-2 routers (inter-area routers) share a level-2 link-state database containing inter-area topology and prefixes from all IS-IS areas. Tip All routers in your lab are configured as level-2 routers and thus share only the level-2 LSPDB 11 . OSPF stores various bits of topology information in multiple types of Link State Advertisements (LSA). IS-IS stores all information generated by a single router in a single Link State PDU 12 (LSP) unless it has too much information for a single LSP, in which case it generates multiple LSP fragments ( more details ). Tip IS-IS cannot fragment LSPs in transit; the maximum LSP size must never exceed the lowest MTU of any link in the IS-IS network. IS-IS contains no mechanism to detect the minimum network-wide MTU dynamically; you have to set the maximum LSP size with a router configuration command similar to lsp-mtu . The identifier of an IS-IS LSP (LSP ID) is always in the format systemid.nodeid-fragmentid : The systemid is the 6-octet System ID part of NET . While IS-IS internally uses the 6-octet value, most implementations display hostnames in the show commands. You can often use a command like show isis hostname to display the name-to-system-ID mappings. The nodeid is zero for an LSP describing the router\u2019s information and non-zero for LAN pseudonodes 13 . The fragmentid is the sequence number of the LSP fragment . You can inspect the IS-IS topology database with a command similar to show isis database . The short printout usually lists the LSPs (their LSP ID), the LSP length, their sequence number, and their remaining lifetime. Tip A quickly increasing LSP sequence number might indicate routing instabilities. The LSP database overview displayed by FRRouting $ netlab connect rtr --show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 113 0x00000002 0x902e 1626 0/0/0 x1.00-00 92 0x00000002 0x23a0 1659 0/0/0 x2.00-00 92 0x00000002 0xc8f0 1633 0/0/0 3 LSPs The IS-IS LSP database overview displayed by Arista cEOS rtr>show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags rtr.00-00 2 26795 1042 119 L2 0000.0000.0001.00-00 <> x1.00-00 2 9120 1610 92 L2 0000.0000.0002.00-00 <> x2.00-00 2 51440 1610 92 L2 0000.0000.0003.00-00 <> You can inspect the contents of an IS-IS LSP with a command similar to show isis database detail 14 . Each IS-IS LSP contains numerous data items encoded as Type-Length-Value (TLV) triplets. The TLV values are usually displayed in a human-friendly format; you\u2019d have to use a packet capture tool like tcpdump or wireshark to see the dirty details. The recognized IS-IS data types are collected in the IANA IS-IS TLV Codepoints registry; you\u2019d usually see the following TLVs in a modern IPv4 network: TLV Description 1 Area address 137 Hostname 242 Router capabilities 129 Supported protocols (IPv4/IPv6) 22 Extended IS Reachability 15 The information about an adjacent router and the cost to reach it 132 IPv4 Interface Address 135 IPv4 Extended Reachability The cost of a connected prefix This is how FRRouting and Arista cEOS display the LSP information: LSP content displayed by FRRouting $ netlab connect rtr --show isis database detail rtr.00-00 Connecting to container clab-explore-rtr, executing vtysh -c \"show isis database detail rtr.00-00\" Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 113 0x00000002 0x902e 1589 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: rtr TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) LSP content displayed by Arista EOS rtr>show isis database rtr.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags rtr.00-00 2 26795 1001 119 L2 0000.0000.0001.00-00 <> LSP generation remaining wait time: 0 ms Time remaining until refresh: 701 s NLPID: 0xCC(IPv4) Hostname: rtr Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.1 Interface address: 10.0.0.1 IS Neighbor : x1.00 Metric: 10 IS Neighbor : x2.00 Metric: 10 Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.1/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.1 Flags: [] Area leader priority: 250 algorithm: 0 The Shortest Path First (SPF) algorithm uses the information from the LSPDB to build a shortest-path (lowest-cost) tree spanning the network topology: The LSPs are nodes in the topology graph The \u200cExtended IS Reachability TLVs describe the unidirectional connectivity between nodes. The SPF algorithm has to do a two-way connectivity check (TWCC) 16 to verify two nodes can communicate. Links that don\u2019t pass the TWCC are not considered when building the shortest-path tree. After the SPF algorithm generates the spanning tree, it uses the minimum cost toward each node together with the Extended IP Reachability TLVs advertised by those nodes to find the minimum cost (and the optimum node/path/next hop) toward every prefix advertised by other routers.","title":"Explore IS-IS LSP Database"},{"location":"basic/2-explore/#frag","text":"You rarely see LSP fragments in small networks, but it\u2019s pretty easy to generate them by lowering the maximum LSP size. For example, if we reduce the LSP size on rtr to 256 17 , we\u2019ll get two fragments: LSP fragments describing the rtr state rtr# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 67 0x00000024 0xe3a6 1648 0/0/0 rtr.00-01 * 75 0x00000006 0xa54b 1648 0/0/0 x1.00-00 92 0x00000017 0xf8b5 1288 0/0/0 x2.00-00 92 0x00000018 0x9c07 1043 0/0/0 The LSP fragments contain the same information as the original LSP, only split across multiple smaller database objects: The detailed view of the LSP fragments rtr# show isis database detail rtr.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-00 * 67 0x00000024 0xe3a6 1590 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: rtr TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) rtr# show isis database detail rtr.00-01 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL rtr.00-01 * 75 0x00000006 0xa54b 1589 0/0/0 Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) Next: IS-IS on Point-to-Point Links","title":"LSP Fragments"},{"location":"basic/2-explore/#reference-information","text":"","title":"Reference Information"},{"location":"basic/2-explore/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port rtr Ethernet1 x1 eth1 rtr Ethernet2 x2 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2.","title":"Lab Wiring"},{"location":"basic/2-explore/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description rtr 10.0.0.1/32 Loopback Ethernet1 10.1.0.1/30 rtr -> x1 Ethernet2 10.1.0.5/30 rtr -> x2 x1 10.0.0.2/32 Loopback eth1 10.1.0.2/30 x1 -> rtr x2 10.0.0.3/32 Loopback eth1 10.1.0.6/30 x2 -> rtr IS-IS equivalent of OSPF link-state database \u21a9 Similar, but not exactly equivalent to OSPF ABR \u21a9 Using the Complete Sequence Number Packets (CSNP) \u2013 a list of LSP descriptors (objects containing LSP-ID, LSP sequence number, remaining lifetime, and checksum). \u21a9 Router names are advertised using the Dynamic Hostname TLV defined in RFC 5301 . \u21a9 We\u2019re using level-2-only routers in the initial lab exercises. We\u2019ll explore multi-level routing in one of the more advanced exercises. \u21a9 Subnetwork point of attachment \u2013 a fancy OSI name for a MAC address. \u21a9 Not available on all platforms \u21a9 LSP (Link-State Protocol Data Unit) is the object a router uses to report information about the adjacent routers and known prefixes. \u21a9 The changes a router makes to an LSP are flooded across the network and are not visible to all other routers at the same time. All routers will eventually receive the changes though. \u21a9 The keys are LSP IDs, the values are the contents of the LSPs \u21a9 We\u2019ll cover multi-level IS-IS routing in another lab exercise. \u21a9 Protocol Data Unit, a fancy name for a packet. \u21a9 LAN pseudonodes are equivalent to OSPF type-2 LSA2. They are used on multi-access subnets; you should never encounter them if you\u2019re using IS-IS point-to-point links. \u21a9 Explore the commands available on your platform. For example, the Cisco IOS XR show command has verbose and internal options that display even more details. \u21a9 Also known as Wide Metrics (covered in another lab exercise). \u21a9 Node A must have an extended IS reachability TLV for node B, while at the same time, node B has an extended IS reachability TLV for node A. That\u2019s the best IS-IS can do, but even that is not enough if there are multiple point-to-point links between A and B. The proof is left as an exercise for the reader; you might find hints in RFC 5303 . \u21a9 In a real-life network, the maximum LSP size should match across all routers. \u21a9","title":"Lab Addressing"},{"location":"basic/3-p2p/","text":"IS-IS on Point-to-Point Links In the Configure IS-IS Routing for IPv4 lab exercise, I told you to configure the links as point-to-point links and promised a detailed explanation in a follow-up lab exercise. We got that far; let\u2019s see why using point-to-point links on Ethernet interfaces is strongly preferred. To keep things simple, we\u2019ll use the simplest possible lab topology: two routers connected with a single link. Device Requirements Use any device supported by the netlab IS-IS configuration module . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/3-p2p Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and minimal IS-IS configurations on all devices. Point-to-Point and Multi-Access Links Like OSPF, IS-IS supports point-to-point (P2P) and multi-access links. Point-to-point links were traditionally used on P2P WAN links; all other media types (LAN, but also multi-access WAN like Frame Relay) used multi-access links. That\u2019s still the default behavior you get on most platforms. Multi-access links have several drawbacks when compared to point-to-point links: The routers on a multi-access link must elect 1 a Designated Intermediate System 2 , prolonging the adjacency establishment process 3 . Unlike OSPF, there is no Backup DIS in IS-IS; routers connected to a multi-access link elect a new DIS when the current one is gone 4 . The IS-IS LSP database contains extra objects. Instead of point-to-point links between the routers, the LSPDB contains pseudonode LSPs (originated by DIS 5 ) describing LAN links 6 . For example, our simple topology would result in the following LSPDB objects 7 : The LSP database with a pseudonode LSP \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502r1.00-00\u251c\u2500\u2500\u2500\u2524r2.8e-00\u251c\u2500\u2500\u2500\u2524r2.00-00\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Recovery from transmission errors takes longer on LAN links. There are no retransmissions in IS-IS; routers realize there\u2019s a problem when the DIS sends a list of its LSPDB contents (CSNP packets), usually every 10 seconds. On the other hand, using pseudonode LSPs on true multi-access links makes perfect sense. They reduce the number of links in the topology graph 8 , resulting in faster SPF runs. Exploring Multi-Access Database Structures It\u2019s time to get our hands dirty. Log into one of the lab devices and examine its IS-IS database. You should get a printout similar to this one. Please note an extra LSP (the description of the LAN subnet generated by R2): The LSP database with a pseudonode LSP r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000005 0xc392 1164 0/0/0 r2.00-00 92 0x00000005 0x60ef 1167 0/0/0 r2.74-00 51 0x00000003 0x5202 1239 0/0/0 Let\u2019s inspect the extra LSP. It looks very similar to an OSPF type-2 LSA: It describes links from the LAN segment to individual routers. Unlike OSPF type-2 LSA, it does not contain the LAN prefix. The pseudonode LSP details r1# show isis database detail r2.74-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.74-00 51 0x00000003 0x5202 1130 0/0/0 Extended Reachability: 0000.0000.0002.00 (Metric: 0) Extended Reachability: 0000.0000.0001.00 (Metric: 0) Tip The core IS-IS data structures are protocol-agnostic. Protocol-specific prefixes are advertised as part of the router LSP. Not surprisingly, the routers connected to the LAN segment advertise their links to the LAN segment and the LAN IPv4 prefix. This is what R1 has to say: The router LSP details r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000006 0xc193 1780 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.74 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Tip It\u2019s worth noting that the router LSP does not specify the interface on which a particular IP prefix is; it just claims that the router knows how to reach the prefix with the specified cost. That\u2019s enough to find the optimum paths to all prefixes in the network 9 Using Point-to-Point Links Core Ethernet links in modern networks are usually point-to-point links 10 between routers 11 . Modeling those links as multi-access networks makes no sense, yet most IS-IS implementations use that approach on all LAN interfaces. Use an interface configuration command similar to isis network point-to-point to tell IS-IS to treat an interface like a point-to-point link. Do that on both routers in your network. Tip While changing the interface type, you might observe logging/error messages similar to p2p hello on non p2p circuit or lan hello on non broadcast circuit 12 . Warning If you use Cisco IOSv on one of the routers and some other network operating system on the other router, you SHOULD configure \u200cisis three-way-handshake ietf on Cisco IOSv interfaces ( more details ) because someone thought it prudent to keep the pre-standard protocol as the default setting for at least a decade after the RFC was published. Cisco IOS XE uses the IETF 3-way handshake as the default protocol. Let\u2019s inspect the IS-IS topology database after the change. As expected, it contains two LSPs (one per router). The LSP database with a point-to-point link r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000008 0x5d6a 1598 0/0/0 r2.00-00 92 0x00000009 0xd4ec 1558 0/0/0 The LSPs describe the direct connection between the routers. For example, R1 claims it\u2019s directly connected to R2 13 : The router LSP with a point-to-point link to another router r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000008 0x5d6a 1533 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Next: Using IS-IS Metrics Optimize Simple IS-IS Deployments Three-Way Handshake The original IS-IS specifications used a simple HELLO protocol on point-to-point links 14 : whenever a router received an IS-IS Hello (IIH) from an adjacent router, it assumed the adjacent router could be reached, resulting in miserable failures on unidirectional links 15 . That hurdle was removed with the three-way handshake defined in RFC 5303 . That RFC specifies a new IS-IS option (Point-to-Point Three-Way Adjacency) that contains the System ID of the adjacent device, allowing IS-IS routers to verify they have a two-way communication. Modern IS-IS implementations use the three-way handshake by default. Still, you might have to turn it off to interoperate with an older device (or a device with ancient defaults) with an interface command similar to no isis three-way-handshake 16 . Warning A mismatch in the three-way handshake setting could have bizarre results. For example, turning it off on a FRRouting device results in one of the neighbors having a fully operational IS-IS adjacency while, at the same time, the other neighbor claims it can see no neighbors. To make matters worse, that often happens only after the IS-IS adjacency has been lost and would have to be re-established. As the last task in this lab, try out how your devices react to a three-way-handshake mismatch (assuming you can configure it): Turn it off on one of the routers. Clear the IS-IS adjacency with a command similar to clear isis neighbor Enjoy the confusing logging messages. Next: Using IS-IS Metrics Optimize Simple IS-IS Deployments Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 Like OSPF, the election process considers router priority and its System ID. \u21a9 Intermediate System is an OSI-compliant word for a router. OSPF would call DIS a DR. \u21a9 And consequently, the overall convergence time after a link recovery. \u21a9 DIS does not have the critical role that OSPF DR has. DIS is not responsible for the flooding of LSP changes; its only role is to help detect transmission errors by periodically sending table-of-contents (CSNP) of its LSPDB. \u21a9 Remember the nodeid octet in the LSP ID? That octet uniquely identifies a pseudonode originated by a DIS. The systemid in a pseudonode LSP is identical to the DIS systemid , making it very simple to identify the DIS. \u21a9 The pseudonode LSP is very similar to OSPF type-2 LSA. \u21a9 The LSP ID of the LAN pseudonode depends on the implementation \u21a9 A star topology with the pseudonode LSP in the middle as opposed to a full mesh topology \u21a9 The proof is left as an exercise for the reader. \u21a9 A major exception: routers connected to a Carrier Ethernet E-LAN service. \u21a9 The devices also known as layer-3 switches in marketing collaterals. \u21a9 On many network devices, you must enable message logging on terminal sessions with a command similar to terminal monitor . \u21a9 FRR printouts are a bit inconsistent. Router names are displayed in high-level printouts, while the detailed printouts contain system IDs. Use the show isis hostname command to display the mapping between system IDs and hostnames. \u21a9 IS-IS hello packets on multi-access media (as well as OSPF) always had a field specifying IS-IS neighbors a router can see. For whatever reason, that field was not present in the original specification of IS-IS hello packets used on point-to-point links. \u21a9 See the introduction section of RFC 5303 for more details. \u21a9 RFC 5303 was published in 2008, and recent IS-IS implementations, for example, Arista EOS, no longer have that nerd knob. \u21a9","title":"IS-IS on Point-to-Point Links"},{"location":"basic/3-p2p/#is-is-on-point-to-point-links","text":"In the Configure IS-IS Routing for IPv4 lab exercise, I told you to configure the links as point-to-point links and promised a detailed explanation in a follow-up lab exercise. We got that far; let\u2019s see why using point-to-point links on Ethernet interfaces is strongly preferred. To keep things simple, we\u2019ll use the simplest possible lab topology: two routers connected with a single link.","title":"IS-IS on Point-to-Point Links"},{"location":"basic/3-p2p/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module .","title":"Device Requirements"},{"location":"basic/3-p2p/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/3-p2p Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and minimal IS-IS configurations on all devices.","title":"Starting the Lab"},{"location":"basic/3-p2p/#ma","text":"Like OSPF, IS-IS supports point-to-point (P2P) and multi-access links. Point-to-point links were traditionally used on P2P WAN links; all other media types (LAN, but also multi-access WAN like Frame Relay) used multi-access links. That\u2019s still the default behavior you get on most platforms. Multi-access links have several drawbacks when compared to point-to-point links: The routers on a multi-access link must elect 1 a Designated Intermediate System 2 , prolonging the adjacency establishment process 3 . Unlike OSPF, there is no Backup DIS in IS-IS; routers connected to a multi-access link elect a new DIS when the current one is gone 4 . The IS-IS LSP database contains extra objects. Instead of point-to-point links between the routers, the LSPDB contains pseudonode LSPs (originated by DIS 5 ) describing LAN links 6 . For example, our simple topology would result in the following LSPDB objects 7 : The LSP database with a pseudonode LSP \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502r1.00-00\u251c\u2500\u2500\u2500\u2524r2.8e-00\u251c\u2500\u2500\u2500\u2524r2.00-00\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Recovery from transmission errors takes longer on LAN links. There are no retransmissions in IS-IS; routers realize there\u2019s a problem when the DIS sends a list of its LSPDB contents (CSNP packets), usually every 10 seconds. On the other hand, using pseudonode LSPs on true multi-access links makes perfect sense. They reduce the number of links in the topology graph 8 , resulting in faster SPF runs.","title":"Point-to-Point and Multi-Access Links"},{"location":"basic/3-p2p/#db","text":"It\u2019s time to get our hands dirty. Log into one of the lab devices and examine its IS-IS database. You should get a printout similar to this one. Please note an extra LSP (the description of the LAN subnet generated by R2): The LSP database with a pseudonode LSP r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000005 0xc392 1164 0/0/0 r2.00-00 92 0x00000005 0x60ef 1167 0/0/0 r2.74-00 51 0x00000003 0x5202 1239 0/0/0 Let\u2019s inspect the extra LSP. It looks very similar to an OSPF type-2 LSA: It describes links from the LAN segment to individual routers. Unlike OSPF type-2 LSA, it does not contain the LAN prefix. The pseudonode LSP details r1# show isis database detail r2.74-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.74-00 51 0x00000003 0x5202 1130 0/0/0 Extended Reachability: 0000.0000.0002.00 (Metric: 0) Extended Reachability: 0000.0000.0001.00 (Metric: 0) Tip The core IS-IS data structures are protocol-agnostic. Protocol-specific prefixes are advertised as part of the router LSP. Not surprisingly, the routers connected to the LAN segment advertise their links to the LAN segment and the LAN IPv4 prefix. This is what R1 has to say: The router LSP details r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000006 0xc193 1780 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.74 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Tip It\u2019s worth noting that the router LSP does not specify the interface on which a particular IP prefix is; it just claims that the router knows how to reach the prefix with the specified cost. That\u2019s enough to find the optimum paths to all prefixes in the network 9","title":"Exploring Multi-Access Database Structures"},{"location":"basic/3-p2p/#using-point-to-point-links","text":"Core Ethernet links in modern networks are usually point-to-point links 10 between routers 11 . Modeling those links as multi-access networks makes no sense, yet most IS-IS implementations use that approach on all LAN interfaces. Use an interface configuration command similar to isis network point-to-point to tell IS-IS to treat an interface like a point-to-point link. Do that on both routers in your network. Tip While changing the interface type, you might observe logging/error messages similar to p2p hello on non p2p circuit or lan hello on non broadcast circuit 12 . Warning If you use Cisco IOSv on one of the routers and some other network operating system on the other router, you SHOULD configure \u200cisis three-way-handshake ietf on Cisco IOSv interfaces ( more details ) because someone thought it prudent to keep the pre-standard protocol as the default setting for at least a decade after the RFC was published. Cisco IOS XE uses the IETF 3-way handshake as the default protocol. Let\u2019s inspect the IS-IS topology database after the change. As expected, it contains two LSPs (one per router). The LSP database with a point-to-point link r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000008 0x5d6a 1598 0/0/0 r2.00-00 92 0x00000009 0xd4ec 1558 0/0/0 The LSPs describe the direct connection between the routers. For example, R1 claims it\u2019s directly connected to R2 13 : The router LSP with a point-to-point link to another router r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 92 0x00000008 0x5d6a 1533 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Next: Using IS-IS Metrics Optimize Simple IS-IS Deployments","title":"Using Point-to-Point Links"},{"location":"basic/3-p2p/#three-way-handshake","text":"The original IS-IS specifications used a simple HELLO protocol on point-to-point links 14 : whenever a router received an IS-IS Hello (IIH) from an adjacent router, it assumed the adjacent router could be reached, resulting in miserable failures on unidirectional links 15 . That hurdle was removed with the three-way handshake defined in RFC 5303 . That RFC specifies a new IS-IS option (Point-to-Point Three-Way Adjacency) that contains the System ID of the adjacent device, allowing IS-IS routers to verify they have a two-way communication. Modern IS-IS implementations use the three-way handshake by default. Still, you might have to turn it off to interoperate with an older device (or a device with ancient defaults) with an interface command similar to no isis three-way-handshake 16 . Warning A mismatch in the three-way handshake setting could have bizarre results. For example, turning it off on a FRRouting device results in one of the neighbors having a fully operational IS-IS adjacency while, at the same time, the other neighbor claims it can see no neighbors. To make matters worse, that often happens only after the IS-IS adjacency has been lost and would have to be re-established. As the last task in this lab, try out how your devices react to a three-way-handshake mismatch (assuming you can configure it): Turn it off on one of the routers. Clear the IS-IS adjacency with a command similar to clear isis neighbor Enjoy the confusing logging messages. Next: Using IS-IS Metrics Optimize Simple IS-IS Deployments","title":"Three-Way Handshake"},{"location":"basic/3-p2p/#reference-information","text":"","title":"Reference Information"},{"location":"basic/3-p2p/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1","title":"Lab Wiring"},{"location":"basic/3-p2p/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 Like OSPF, the election process considers router priority and its System ID. \u21a9 Intermediate System is an OSI-compliant word for a router. OSPF would call DIS a DR. \u21a9 And consequently, the overall convergence time after a link recovery. \u21a9 DIS does not have the critical role that OSPF DR has. DIS is not responsible for the flooding of LSP changes; its only role is to help detect transmission errors by periodically sending table-of-contents (CSNP) of its LSPDB. \u21a9 Remember the nodeid octet in the LSP ID? That octet uniquely identifies a pseudonode originated by a DIS. The systemid in a pseudonode LSP is identical to the DIS systemid , making it very simple to identify the DIS. \u21a9 The pseudonode LSP is very similar to OSPF type-2 LSA. \u21a9 The LSP ID of the LAN pseudonode depends on the implementation \u21a9 A star topology with the pseudonode LSP in the middle as opposed to a full mesh topology \u21a9 The proof is left as an exercise for the reader. \u21a9 A major exception: routers connected to a Carrier Ethernet E-LAN service. \u21a9 The devices also known as layer-3 switches in marketing collaterals. \u21a9 On many network devices, you must enable message logging on terminal sessions with a command similar to terminal monitor . \u21a9 FRR printouts are a bit inconsistent. Router names are displayed in high-level printouts, while the detailed printouts contain system IDs. Use the show isis hostname command to display the mapping between system IDs and hostnames. \u21a9 IS-IS hello packets on multi-access media (as well as OSPF) always had a field specifying IS-IS neighbors a router can see. For whatever reason, that field was not present in the original specification of IS-IS hello packets used on point-to-point links. \u21a9 See the introduction section of RFC 5303 for more details. \u21a9 RFC 5303 was published in 2008, and recent IS-IS implementations, for example, Arista EOS, no longer have that nerd knob. \u21a9","title":"Lab Addressing"},{"location":"basic/4-metric/","text":"Using IS-IS Metrics Like OSPF, IS-IS uses interface costs (called link metrics ) to calculate the best path toward destination IP prefixes. Unlike OSPF, the default metrics are fixed (usually set to 10) and do not reflect the interface bandwidth. For example, in the following topology, using the default IS-IS settings, the traffic between R1 and R3 would use the direct low-speed link. We\u2019ll fix that in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/4-metric Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and basic IS-IS configurations on all devices. According to the recommendations from the Configure IS-IS Routing for IPv4 lab exercise, the routers are level-2-only routers, and the links are configured as point-to-point links. Initial Routing Tables Check the routing tables on R1 and R3 and verify that they use the direct (low-bandwidth) link. R1 should use the first Ethernet interface to reach R2 and the second Ethernet interface to reach R3. This is the printout you should get on FRRouting 1 : r1# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:00:58 C>* 10.0.0.1/32 is directly connected, lo, 00:00:58 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:55 I>* 10.0.0.3/32 [115/20] via 10.1.0.10, eth2, weight 1, 00:00:55 The cost to reach 10.0.0.2/32 and 10.0.0.3/32 is 20 (when using FRRouting): The cost of the connection between R1 and R2 (or R1 and R3) is 10. R2 and R3 advertise the loopback prefixes with a cost of 10 (this detail may vary across different implementations). You can check these details in the IS-IS topology database: R1 LSP \u2013 note the Extended Reachability metric toward R2 and R3 r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000003 0xc5aa 1093 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 10) R2 LSP \u2013 note the Extended IP Reachability metric for 10.0.0.2/32 r1# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000003 0xfb73 1049 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) Changing the IS-IS Interface Metric You can change the IS-IS interface metric with an interface configuration command similar to isis metric 2 . Change the metric on the R1-R3 link to 50 (you must make the change on both ends). Verifying the Change After the change, R1 should use the first Ethernet interface to reach R3\u2019s loopback address. This is the printout you should get on FRRouting: Updated IP routing table on R1 r1# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:32:08 C>* 10.0.0.1/32 is directly connected, lo, 00:32:08 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:32:05 I>* 10.0.0.3/32 [115/30] via 10.1.0.2, eth1, weight 1, 00:02:53 Narrow, Wide, and Transitional Metrics Did you notice the Extended Reachability and Extended IP Reachability headings in the LSP printouts? Here\u2019s the full story: Original IS-IS specifications had 6-bit interface metrics (0-63) 3 , and the end-to-end path cost could not exceed 1023 4 . Today, we call those metrics narrow metrics. When large ISPs started using IS-IS, they quickly discovered that those limits were ridiculous. RFC 3784 defined 24-bit metrics (we call them wide metrics), which is what most deployments use today. All existing IS-IS networks that wanted to use the wide metrics had to transition from narrow to wide metrics, usually while keeping the network operational. The solution was to advertise both sets of metrics (that have to match) until all network devices advertise wide metrics. Some vendors call that approach transition metrics. Transitioning from narrow to wide metrics is somewhat convoluted: You must configure all devices to advertise narrow and wide metrics (change the metric style from narrow to transitional ). Once all devices advertise wide metrics, you can configure them to use them (this step might be optional in the IS-IS implementation you\u2019re using). Finally, you can stop advertising the narrow metrics (change the metric style from transitional to wide ). You can start using large metric values only after your devices use only wide metrics. As you can see, starting your IS-IS deployment with wide metrics is much better, especially if you want to use modern IS-IS features like SR-MPLS that work only with wide metrics. Warning You\u2019ll get weird results if some devices in your network support only narrow metrics while others advertise only wide metrics. If you have devices that do not understand the wide metrics, keep using the narrow metrics; otherwise, ensure all devices use only wide metrics. I haven\u2019t seen an IS-IS implementation that doesn\u2019t understand the narrow metrics, and all recent implementations support wide metrics (they\u2019ve been around for 20 years) 5 . Sadly, many devices still use narrow metrics as the default, so let\u2019s reproduce that ancient world in a modern implementation (FRRouting). We\u2019ll use the metric-style router configuration command, set it to narrow on R1, and see what happens to the R1 LSP. R1 LSP using narrow metrics r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 116 0x00000005 0x4857 1781 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 IS Reachability: 0000.0000.0002.00 (Metric: 10) IS Reachability: 0000.0000.0003.00 (Metric: 50) Hostname: r1 Router Capability: 10.0.0.1 , D:0, S:0 IP Reachability: 10.0.0.1/32 (Metric: 10) IP Reachability: 10.1.0.0/30 (Metric: 10) IP Reachability: 10.1.0.8/30 (Metric: 50) IPv4 Interface Address: 10.0.0.1 As you can see, R1 replaced the Extended Reachability metric with the IS Reachability metric and the Extended IP Reachability metric with the IP Reachability metric . It also wouldn\u2019t allow you to increase the metric on the R1-R3 link above 63. Finally, let\u2019s set the metric style to transition and observe the changes in R1 LSP. As expected, the LSP contains two sets of metrics for every link and IP prefix. R1 LSP with transition metrics (narrow and wide) r1# sh isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 175 0x0000000a 0x7dab 1785 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 IS Reachability: 0000.0000.0002.00 (Metric: 10) IS Reachability: 0000.0000.0003.00 (Metric: 50) Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 50) IP Reachability: 10.0.0.1/32 (Metric: 10) IP Reachability: 10.1.0.0/30 (Metric: 10) IP Reachability: 10.1.0.8/30 (Metric: 50) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 50) And now you know the whole story behind the IS-IS metric types. I hope you\u2019ll never see narrow or transition metric styles in a live network, and if you do (for example, due to ancient vendor defaults), consider changing that to wide . Next: Dual-Stack (IPv4+IPv6) IS-IS Routing Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1 r1 eth2 r3 eth2 Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.9/30 r1 -> r3 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r2 eth2 10.1.0.10/30 r3 -> r1 I\u2019m using the show ip route longer-prefixes command to display just the loopbacks that happen to be in the 10.0.0.0/24 address space. \u21a9 IS-IS can use different metrics for L1 and L2 adjacencies. Don\u2019t waste your time on that detail, and I hope you\u2019ll never see a network using it outside of a CCIE lab. \u21a9 While you can set the metric to zero on the loopback interface, the metric has to be a positive number on a transit link, or the SPF algorithm could end in an infinite loop. \u21a9 The DEC engineers working on IS-IS had a great idea that you could optimize the SPF algorithm if the metric is small enough to be used as an index of a reasonably sized table. \u21a9 SDH equipment using CLNP for network management might be an exception. \u21a9","title":"Using IS-IS Metrics"},{"location":"basic/4-metric/#using-is-is-metrics","text":"Like OSPF, IS-IS uses interface costs (called link metrics ) to calculate the best path toward destination IP prefixes. Unlike OSPF, the default metrics are fixed (usually set to 10) and do not reflect the interface bandwidth. For example, in the following topology, using the default IS-IS settings, the traffic between R1 and R3 would use the direct low-speed link. We\u2019ll fix that in this lab exercise.","title":"Using IS-IS Metrics"},{"location":"basic/4-metric/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module .","title":"Device Requirements"},{"location":"basic/4-metric/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/4-metric Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and basic IS-IS configurations on all devices. According to the recommendations from the Configure IS-IS Routing for IPv4 lab exercise, the routers are level-2-only routers, and the links are configured as point-to-point links.","title":"Starting the Lab"},{"location":"basic/4-metric/#initial-routing-tables","text":"Check the routing tables on R1 and R3 and verify that they use the direct (low-bandwidth) link. R1 should use the first Ethernet interface to reach R2 and the second Ethernet interface to reach R3. This is the printout you should get on FRRouting 1 : r1# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:00:58 C>* 10.0.0.1/32 is directly connected, lo, 00:00:58 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:55 I>* 10.0.0.3/32 [115/20] via 10.1.0.10, eth2, weight 1, 00:00:55 The cost to reach 10.0.0.2/32 and 10.0.0.3/32 is 20 (when using FRRouting): The cost of the connection between R1 and R2 (or R1 and R3) is 10. R2 and R3 advertise the loopback prefixes with a cost of 10 (this detail may vary across different implementations). You can check these details in the IS-IS topology database: R1 LSP \u2013 note the Extended Reachability metric toward R2 and R3 r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000003 0xc5aa 1093 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 10) R2 LSP \u2013 note the Extended IP Reachability metric for 10.0.0.2/32 r1# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000003 0xfb73 1049 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10)","title":"Initial Routing Tables"},{"location":"basic/4-metric/#changing-the-is-is-interface-metric","text":"You can change the IS-IS interface metric with an interface configuration command similar to isis metric 2 . Change the metric on the R1-R3 link to 50 (you must make the change on both ends).","title":"Changing the IS-IS Interface Metric"},{"location":"basic/4-metric/#verifying-the-change","text":"After the change, R1 should use the first Ethernet interface to reach R3\u2019s loopback address. This is the printout you should get on FRRouting: Updated IP routing table on R1 r1# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:32:08 C>* 10.0.0.1/32 is directly connected, lo, 00:32:08 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:32:05 I>* 10.0.0.3/32 [115/30] via 10.1.0.2, eth1, weight 1, 00:02:53","title":"Verifying the Change"},{"location":"basic/4-metric/#narrow-wide-and-transitional-metrics","text":"Did you notice the Extended Reachability and Extended IP Reachability headings in the LSP printouts? Here\u2019s the full story: Original IS-IS specifications had 6-bit interface metrics (0-63) 3 , and the end-to-end path cost could not exceed 1023 4 . Today, we call those metrics narrow metrics. When large ISPs started using IS-IS, they quickly discovered that those limits were ridiculous. RFC 3784 defined 24-bit metrics (we call them wide metrics), which is what most deployments use today. All existing IS-IS networks that wanted to use the wide metrics had to transition from narrow to wide metrics, usually while keeping the network operational. The solution was to advertise both sets of metrics (that have to match) until all network devices advertise wide metrics. Some vendors call that approach transition metrics. Transitioning from narrow to wide metrics is somewhat convoluted: You must configure all devices to advertise narrow and wide metrics (change the metric style from narrow to transitional ). Once all devices advertise wide metrics, you can configure them to use them (this step might be optional in the IS-IS implementation you\u2019re using). Finally, you can stop advertising the narrow metrics (change the metric style from transitional to wide ). You can start using large metric values only after your devices use only wide metrics. As you can see, starting your IS-IS deployment with wide metrics is much better, especially if you want to use modern IS-IS features like SR-MPLS that work only with wide metrics. Warning You\u2019ll get weird results if some devices in your network support only narrow metrics while others advertise only wide metrics. If you have devices that do not understand the wide metrics, keep using the narrow metrics; otherwise, ensure all devices use only wide metrics. I haven\u2019t seen an IS-IS implementation that doesn\u2019t understand the narrow metrics, and all recent implementations support wide metrics (they\u2019ve been around for 20 years) 5 . Sadly, many devices still use narrow metrics as the default, so let\u2019s reproduce that ancient world in a modern implementation (FRRouting). We\u2019ll use the metric-style router configuration command, set it to narrow on R1, and see what happens to the R1 LSP. R1 LSP using narrow metrics r1# show isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 116 0x00000005 0x4857 1781 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 IS Reachability: 0000.0000.0002.00 (Metric: 10) IS Reachability: 0000.0000.0003.00 (Metric: 50) Hostname: r1 Router Capability: 10.0.0.1 , D:0, S:0 IP Reachability: 10.0.0.1/32 (Metric: 10) IP Reachability: 10.1.0.0/30 (Metric: 10) IP Reachability: 10.1.0.8/30 (Metric: 50) IPv4 Interface Address: 10.0.0.1 As you can see, R1 replaced the Extended Reachability metric with the IS Reachability metric and the Extended IP Reachability metric with the IP Reachability metric . It also wouldn\u2019t allow you to increase the metric on the R1-R3 link above 63. Finally, let\u2019s set the metric style to transition and observe the changes in R1 LSP. As expected, the LSP contains two sets of metrics for every link and IP prefix. R1 LSP with transition metrics (narrow and wide) r1# sh isis database detail r1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 175 0x0000000a 0x7dab 1785 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 IS Reachability: 0000.0000.0002.00 (Metric: 10) IS Reachability: 0000.0000.0003.00 (Metric: 50) Hostname: r1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 50) IP Reachability: 10.0.0.1/32 (Metric: 10) IP Reachability: 10.1.0.0/30 (Metric: 10) IP Reachability: 10.1.0.8/30 (Metric: 50) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 50) And now you know the whole story behind the IS-IS metric types. I hope you\u2019ll never see narrow or transition metric styles in a live network, and if you do (for example, due to ancient vendor defaults), consider changing that to wide . Next: Dual-Stack (IPv4+IPv6) IS-IS Routing","title":"Narrow, Wide, and Transitional Metrics"},{"location":"basic/4-metric/#reference-information","text":"","title":"Reference Information"},{"location":"basic/4-metric/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1 r1 eth2 r3 eth2","title":"Lab Wiring"},{"location":"basic/4-metric/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.9/30 r1 -> r3 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r2 eth2 10.1.0.10/30 r3 -> r1 I\u2019m using the show ip route longer-prefixes command to display just the loopbacks that happen to be in the 10.0.0.0/24 address space. \u21a9 IS-IS can use different metrics for L1 and L2 adjacencies. Don\u2019t waste your time on that detail, and I hope you\u2019ll never see a network using it outside of a CCIE lab. \u21a9 While you can set the metric to zero on the loopback interface, the metric has to be a positive number on a transit link, or the SPF algorithm could end in an infinite loop. \u21a9 The DEC engineers working on IS-IS had a great idea that you could optimize the SPF algorithm if the metric is small enough to be used as an index of a reasonably sized table. \u21a9 SDH equipment using CLNP for network management might be an exception. \u21a9","title":"Lab Addressing"},{"location":"basic/5-ipv6/","text":"Dual-Stack (IPv4+IPv6) IS-IS Routing Adding IPv6 support to IS-IS seems like a no-brainer. The data structures describing the network topology are extensible, and we already have TLVs for links and IPv4 prefixes. Let\u2019s add IPv6 prefixes and call it a day. That\u2019s the approach taken by RFC 5308 . Unfortunately, the devil usually hides in the seemingly irrelevant details, and we\u2019ll explore those in this lab exercise. We\u2019ll use a very simple topology with three routers. The only quirk is the addressing on the R2-R3 link; while all three routers have an IPv6 address configured on their loopback interface, the R2-R3 link does not run IPv6. Device Requirements Use any device supported by the netlab IS-IS configuration module . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/5-ipv6 Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with: IPv4 and IPv6 addresses on loopback interfaces IS-IS configured for IPv4 routing IPv6 LLA configured on the R1-R2 link but not on the R2-R3 link. Initial Routing Tables Check the routing tables on R1 and verify that it can reach the loopback interfaces of R2 and R3. You should get these printouts on FRRouting and Arista EOS: The IPv4 routing table on R1 running FRRouting r1# show ip route Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:00:21 C>* 10.0.0.1/32 is directly connected, lo, 00:00:21 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:17 I>* 10.0.0.3/32 [115/30] via 10.1.0.2, eth1, weight 1, 00:00:17 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth1 inactive, weight 1, 00:00:17 C>* 10.1.0.0/30 is directly connected, eth1, 00:00:21 L>* 10.1.0.1/32 is directly connected, eth1, 00:00:21 I>* 10.1.0.4/30 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:17 The IPv4 routing table on R1 running Arista EOS r1>show ip route | begin Gateway Gateway of last resort is not set C 10.0.0.1/32 directly connected, Loopback0 I L2 10.0.0.2/32 [115/20] via 10.1.0.2, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.2, Ethernet1 C 10.1.0.0/30 directly connected, Ethernet1 I L2 10.1.0.4/30 [115/20] via 10.1.0.2, Ethernet1 Check also the IPv6 routing tables. Each router should have only its loopback IPv6 prefix in the IPv6 routing table: The IPv6 routing table on R1 running FRRouting r1# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 2001:db8:cafe:1::/64 is directly connected, lo, 00:00:31 L>* 2001:db8:cafe:1::1/128 is directly connected, lo, 00:00:31 C>* fe80::/64 is directly connected, eth1, 00:00:30 The IPv6 routing table on R1 running Arista EOS r1>show ipv6 route VRF: default Displaying 1 of 5 IPv6 routing table entries Source Codes: C - connected, S - static, K - kernel, O3 - OSPFv3, B - Other BGP Routes, A B - BGP Aggregate, R - RIP, I L1 - IS-IS level 1, I L2 - IS-IS level 2, DH - DHCP, NG - Nexthop Group Static Route, M - Martian, DP - Dynamic Policy Route, L - VRF Leaked, G - gRIBI, RC - Route Cache Route, CL - CBF Leaked Route C 2001:db8:cafe:1::/64 [0/0] via Loopback0, directly connected Configure IS-IS for IPv6 Routing Enabling IPv6 routing on an existing IS-IS instance is trivial. Some devices (for example, FRRouting) expect you to do it on individual interfaces (including the loopback interfaces) with a command similar to ipv6 router isis ; other devices (for example, Arista EOS) require you to configure the IPv6 address family within the IS-IS routing process without changing the interface configuration ( address-family ipv6 is a typical command to use) 1 . Depending on which devices you use in your lab, configure IPv6 IS-IS routing on all links with IPv6 addresses or IPv6 address family in the IS-IS routing process on all routers. The Confusing Results If you\u2019re using Arista EOS in your lab, you\u2019ll notice that R2 no longer wants to have R3 as its IS-IS neighbor. Arista EOS is very strict and forms IS-IS adjacencies only over interfaces with addresses from all address families configured in the IS-IS routing process. IS-IS neighbors on R2 running Arista EOS r2#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 P2P UP 25 60 If you find that too strict, let\u2019s see what happens on devices that use a more relaxed approach. Start the lab with FRRouting devices and enable IS-IS for IPv6 (hint: ipv6 router isis ) on all interfaces with IPv6 addresses. After doing that, R2 should still have adjacencies with R3 and R1: IS-IS neighbors on R2 running FRRouting r2# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r1 eth1 2 Up 28 2020.2020.2020 r3 eth2 2 Up 28 2020.2020.2020 However, even though R3 advertises its loopback IPv6 prefix in its LSP, R2 does not have the IPv6 prefix of R3\u2019s loopback in its IPv6 routing table: The LSP advertised by R3 r2# show isis database detail r3.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r3.00-00 109 0x00000004 0xa092 1713 0/0/0 Protocols Supported: IPv4, IPv6 Area Address: 49.0001 Hostname: r3 TE Router ID: 10.0.0.3 Router Capability: 10.0.0.3 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) IPv4 Interface Address: 10.0.0.3 Extended IP Reachability: 10.0.0.3/32 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) IPv6 Reachability: 2001:db8:cafe:3::/64 (Metric: 10) The IPv6 routing table on R2 (FRRouting) r2# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 2001:db8:cafe:1::/64 [115/20] via fe80::a8c1:abff:fed7:a0ce, eth1, weight 1, 00:00:47 C>* 2001:db8:cafe:2::/64 is directly connected, lo, 00:24:45 L>* 2001:db8:cafe:2::1/128 is directly connected, lo, 00:24:45 C>* fe80::/64 is directly connected, eth1, 00:24:44 How does R2 know that it can use the link to R3 for IPv4 traffic but not for IPv6 traffic? The lack of an IPv6 interface address is the first hint, as are the IS-IS hello messages. Every IS-IS router advertises the address families configured on an interface in the IS-IS hello messages sent over that interface. You can use a command similar to show isis neighbor detail to check that: The IS-IS neighbors visible to R2 (FRRouting) r2# show isis neighbor detail Area Gandalf: r1 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 27m13s ago Circuit type: L2, Speaks: IPv4, IPv6 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.1 IPv6 Address(es): fe80::a8c1:abff:fed7:a0ce r3 Interface: eth2, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 27m13s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 Unfortunately, there is no way to propagate the information from the IS-IS hello packets to other routers in the network. R1 thinks it can safely use R2 to reach the IPv6 loopback address of R3 even though the R2-R3 link carries only IPv4 traffic: The IPv6 routing table on R1 (FRRouting) r1# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 2001:db8:cafe:1::/64 is directly connected, lo, 00:29:09 L>* 2001:db8:cafe:1::1/128 is directly connected, lo, 00:29:09 I>* 2001:db8:cafe:2::/64 [115/20] via fe80::a8c1:abff:fe04:e9f6, eth1, weight 1, 00:05:11 I>* 2001:db8:cafe:3::/64 [115/30] via fe80::a8c1:abff:fe04:e9f6, eth1, weight 1, 00:05:11 C>* fe80::/64 is directly connected, eth1, 00:29:08 Takeaway: You can get black holes in your network as soon as a single link in an IS-IS domain does not forward the traffic for all address families configured in IS-IS. Multi-Topology Routing The solution to the above conundrum is to use multiple network topologies within a single IS-IS process (multi-topology IS-IS routing, defined in RFC 5120 ), effectively turning IS-IS into a combination of OSPFv2 and OSPFv3. Tip Multi-topology IS-IS is still better than a combination of OSPFv2 and OSPFv3. You\u2019re using a single routing protocol with a single adjacency/flooding mechanism and a unified data structure, whereas OSPFv2 and OSPFv3 have significant differences. Most IS-IS implementations do not use multi-topology routing by default. You have to enable it with a router configuration command similar to multi-topology (usually within the IPv6 address family) or with a topology ipv6-unicast router configuration command. Do that on all three lab devices. Validation After configuring multi-topology IS-IS routing on all routers in your lab, you should have: IS-IS adjacencies between R2 and R1/R3 Routes for all three IPv4 loopback addresses in the IPv4 routing tables of all routes Routes for IPv6 loopback prefixes on R1 and R2, but not on R3. R3 cannot participate in the IPv6 topology as it has no IPv6-enabled links with other routers. IS-IS neighbors on R2 r2# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r1 eth1 2 Up 28 2020.2020.2020 r3 eth2 2 Up 27 2020.2020.2020 The routes for IPv4 loopbacks on R2 r2# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.1, eth1, weight 1, 00:43:00 L * 10.0.0.2/32 is directly connected, lo, 00:43:04 C>* 10.0.0.2/32 is directly connected, lo, 00:43:04 I>* 10.0.0.3/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:43:00 The IPv6 routing table on R2 r2# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 2001:db8:cafe:1::/64 [115/20] via fe80::a8c1:abff:fed7:a0ce, eth1, weight 1, 00:02:11 C>* 2001:db8:cafe:2::/64 is directly connected, lo, 00:43:33 L>* 2001:db8:cafe:2::1/128 is directly connected, lo, 00:43:33 C>* fe80::/64 is directly connected, eth1, 00:43:32 Next: Optimize Simple IS-IS Deployments Behind the Scenes Multi-topology IS-IS routing modifies two aspects of IS-IS. The IS-IS hello packets carry additional TLVs describing the topologies enabled on the sending router. You can see them if you inspect the IS-IS neighbor details: Multi-topology IS-IS neighbors (FRRouting) r2# show isis neighbor detail Area Gandalf: r1 Interface: eth1, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 45m9s ago Circuit type: L2, Speaks: IPv4, IPv6 Topologies: standard ipv6-unicast SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.1 IPv6 Address(es): fe80::a8c1:abff:fed7:a0ce r3 Interface: eth2, Level: 2, State: Up, Expires in 29s Adjacency flaps: 1, Last: 45m9s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 Tip Even though we configured the IPv6 topology on R3, it does not advertise that topology over an IPv4-only interface. Multi-topology IS-IS neighbors (Arista EOS) r2#show isis nei detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 P2P UP 27 60 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:00:31 ago at 2024-08-19 13:30:06 IPv4 Interface Address: 10.1.0.1 IPv6 Interface Address: fe80::50dc:caff:fefe:101 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 Gandalf default r3 L2 Ethernet2 P2P UP 22 62 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:00:08 ago at 2024-08-19 13:30:29 IPv4 Interface Address: 10.1.0.6 IPv6 Interface Address: none Interface name: Ethernet2 Graceful Restart: Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4 Warning Arista EOS is very strict in its checking of IS-IS hellos. The adjacency between R2 and R3 is not established until you configure multi-topology IS-IS on R3, even though the link between R2 and R3 supports only IPv4. The change to the LSPs is even more important. Every router is advertising the topologies it has in its LSP, as well as per-topology links using Extended Reachability (wide metrics) for IPv4-enabled links and Multi-Topology Reachability for IPv6-enabled links. The LSP advertised by R2 using IPv6 topology (FRRouting) r2# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 * 152 0x00000008 0xed0b 1415 0/0/0 Protocols Supported: IPv4, IPv6 Area Address: 49.0001 MT Router Info: ipv4-unicast MT Router Info: ipv6-unicast Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) MT Reachability: 0000.0000.0001.00 (Metric: 10) ipv6-unicast IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) MT IPv6 Reachability: 2001:db8:cafe:2::/64 (Metric: 10) ipv6-unicast The per-protocol neighbor reachability information allows routers to run the SPF algorithm for individual address families. The algorithm can then discard useless links (for an address family) while building the shortest path tree. Takeaway: Use multi-topology IS-IS routing in multiprotocol networks unless you can guarantee that all links use the same address families (or love late-night troubleshooting sessions). Next: Optimize Simple IS-IS Deployments Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1 Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback eth1 10.1.0.1/30 LLA r1 -> r2 r2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback eth1 10.1.0.2/30 LLA r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback eth1 10.1.0.6/30 r3 -> r2 I\u2019m positive you have to do both on some devices ;) \u21a9","title":"Dual-Stack (IPv4+IPv6) IS-IS Routing"},{"location":"basic/5-ipv6/#dual-stack-ipv4ipv6-is-is-routing","text":"Adding IPv6 support to IS-IS seems like a no-brainer. The data structures describing the network topology are extensible, and we already have TLVs for links and IPv4 prefixes. Let\u2019s add IPv6 prefixes and call it a day. That\u2019s the approach taken by RFC 5308 . Unfortunately, the devil usually hides in the seemingly irrelevant details, and we\u2019ll explore those in this lab exercise. We\u2019ll use a very simple topology with three routers. The only quirk is the addressing on the R2-R3 link; while all three routers have an IPv6 address configured on their loopback interface, the R2-R3 link does not run IPv6.","title":"Dual-Stack (IPv4+IPv6) IS-IS Routing"},{"location":"basic/5-ipv6/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module .","title":"Device Requirements"},{"location":"basic/5-ipv6/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/5-ipv6 Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with: IPv4 and IPv6 addresses on loopback interfaces IS-IS configured for IPv4 routing IPv6 LLA configured on the R1-R2 link but not on the R2-R3 link.","title":"Starting the Lab"},{"location":"basic/5-ipv6/#initial-routing-tables","text":"Check the routing tables on R1 and verify that it can reach the loopback interfaces of R2 and R3. You should get these printouts on FRRouting and Arista EOS: The IPv4 routing table on R1 running FRRouting r1# show ip route Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:00:21 C>* 10.0.0.1/32 is directly connected, lo, 00:00:21 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:17 I>* 10.0.0.3/32 [115/30] via 10.1.0.2, eth1, weight 1, 00:00:17 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth1 inactive, weight 1, 00:00:17 C>* 10.1.0.0/30 is directly connected, eth1, 00:00:21 L>* 10.1.0.1/32 is directly connected, eth1, 00:00:21 I>* 10.1.0.4/30 [115/20] via 10.1.0.2, eth1, weight 1, 00:00:17 The IPv4 routing table on R1 running Arista EOS r1>show ip route | begin Gateway Gateway of last resort is not set C 10.0.0.1/32 directly connected, Loopback0 I L2 10.0.0.2/32 [115/20] via 10.1.0.2, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.2, Ethernet1 C 10.1.0.0/30 directly connected, Ethernet1 I L2 10.1.0.4/30 [115/20] via 10.1.0.2, Ethernet1 Check also the IPv6 routing tables. Each router should have only its loopback IPv6 prefix in the IPv6 routing table: The IPv6 routing table on R1 running FRRouting r1# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 2001:db8:cafe:1::/64 is directly connected, lo, 00:00:31 L>* 2001:db8:cafe:1::1/128 is directly connected, lo, 00:00:31 C>* fe80::/64 is directly connected, eth1, 00:00:30 The IPv6 routing table on R1 running Arista EOS r1>show ipv6 route VRF: default Displaying 1 of 5 IPv6 routing table entries Source Codes: C - connected, S - static, K - kernel, O3 - OSPFv3, B - Other BGP Routes, A B - BGP Aggregate, R - RIP, I L1 - IS-IS level 1, I L2 - IS-IS level 2, DH - DHCP, NG - Nexthop Group Static Route, M - Martian, DP - Dynamic Policy Route, L - VRF Leaked, G - gRIBI, RC - Route Cache Route, CL - CBF Leaked Route C 2001:db8:cafe:1::/64 [0/0] via Loopback0, directly connected","title":"Initial Routing Tables"},{"location":"basic/5-ipv6/#configure-is-is-for-ipv6-routing","text":"Enabling IPv6 routing on an existing IS-IS instance is trivial. Some devices (for example, FRRouting) expect you to do it on individual interfaces (including the loopback interfaces) with a command similar to ipv6 router isis ; other devices (for example, Arista EOS) require you to configure the IPv6 address family within the IS-IS routing process without changing the interface configuration ( address-family ipv6 is a typical command to use) 1 . Depending on which devices you use in your lab, configure IPv6 IS-IS routing on all links with IPv6 addresses or IPv6 address family in the IS-IS routing process on all routers.","title":"Configure IS-IS for IPv6 Routing"},{"location":"basic/5-ipv6/#the-confusing-results","text":"If you\u2019re using Arista EOS in your lab, you\u2019ll notice that R2 no longer wants to have R3 as its IS-IS neighbor. Arista EOS is very strict and forms IS-IS adjacencies only over interfaces with addresses from all address families configured in the IS-IS routing process. IS-IS neighbors on R2 running Arista EOS r2#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 P2P UP 25 60 If you find that too strict, let\u2019s see what happens on devices that use a more relaxed approach. Start the lab with FRRouting devices and enable IS-IS for IPv6 (hint: ipv6 router isis ) on all interfaces with IPv6 addresses. After doing that, R2 should still have adjacencies with R3 and R1: IS-IS neighbors on R2 running FRRouting r2# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r1 eth1 2 Up 28 2020.2020.2020 r3 eth2 2 Up 28 2020.2020.2020 However, even though R3 advertises its loopback IPv6 prefix in its LSP, R2 does not have the IPv6 prefix of R3\u2019s loopback in its IPv6 routing table: The LSP advertised by R3 r2# show isis database detail r3.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r3.00-00 109 0x00000004 0xa092 1713 0/0/0 Protocols Supported: IPv4, IPv6 Area Address: 49.0001 Hostname: r3 TE Router ID: 10.0.0.3 Router Capability: 10.0.0.3 , D:0, S:0 Extended Reachability: 0000.0000.0002.00 (Metric: 10) IPv4 Interface Address: 10.0.0.3 Extended IP Reachability: 10.0.0.3/32 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) IPv6 Reachability: 2001:db8:cafe:3::/64 (Metric: 10) The IPv6 routing table on R2 (FRRouting) r2# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 2001:db8:cafe:1::/64 [115/20] via fe80::a8c1:abff:fed7:a0ce, eth1, weight 1, 00:00:47 C>* 2001:db8:cafe:2::/64 is directly connected, lo, 00:24:45 L>* 2001:db8:cafe:2::1/128 is directly connected, lo, 00:24:45 C>* fe80::/64 is directly connected, eth1, 00:24:44 How does R2 know that it can use the link to R3 for IPv4 traffic but not for IPv6 traffic? The lack of an IPv6 interface address is the first hint, as are the IS-IS hello messages. Every IS-IS router advertises the address families configured on an interface in the IS-IS hello messages sent over that interface. You can use a command similar to show isis neighbor detail to check that: The IS-IS neighbors visible to R2 (FRRouting) r2# show isis neighbor detail Area Gandalf: r1 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 27m13s ago Circuit type: L2, Speaks: IPv4, IPv6 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.1 IPv6 Address(es): fe80::a8c1:abff:fed7:a0ce r3 Interface: eth2, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 27m13s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 Unfortunately, there is no way to propagate the information from the IS-IS hello packets to other routers in the network. R1 thinks it can safely use R2 to reach the IPv6 loopback address of R3 even though the R2-R3 link carries only IPv4 traffic: The IPv6 routing table on R1 (FRRouting) r1# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure C>* 2001:db8:cafe:1::/64 is directly connected, lo, 00:29:09 L>* 2001:db8:cafe:1::1/128 is directly connected, lo, 00:29:09 I>* 2001:db8:cafe:2::/64 [115/20] via fe80::a8c1:abff:fe04:e9f6, eth1, weight 1, 00:05:11 I>* 2001:db8:cafe:3::/64 [115/30] via fe80::a8c1:abff:fe04:e9f6, eth1, weight 1, 00:05:11 C>* fe80::/64 is directly connected, eth1, 00:29:08 Takeaway: You can get black holes in your network as soon as a single link in an IS-IS domain does not forward the traffic for all address families configured in IS-IS.","title":"The Confusing Results"},{"location":"basic/5-ipv6/#multi-topology-routing","text":"The solution to the above conundrum is to use multiple network topologies within a single IS-IS process (multi-topology IS-IS routing, defined in RFC 5120 ), effectively turning IS-IS into a combination of OSPFv2 and OSPFv3. Tip Multi-topology IS-IS is still better than a combination of OSPFv2 and OSPFv3. You\u2019re using a single routing protocol with a single adjacency/flooding mechanism and a unified data structure, whereas OSPFv2 and OSPFv3 have significant differences. Most IS-IS implementations do not use multi-topology routing by default. You have to enable it with a router configuration command similar to multi-topology (usually within the IPv6 address family) or with a topology ipv6-unicast router configuration command. Do that on all three lab devices.","title":"Multi-Topology Routing"},{"location":"basic/5-ipv6/#validation","text":"After configuring multi-topology IS-IS routing on all routers in your lab, you should have: IS-IS adjacencies between R2 and R1/R3 Routes for all three IPv4 loopback addresses in the IPv4 routing tables of all routes Routes for IPv6 loopback prefixes on R1 and R2, but not on R3. R3 cannot participate in the IPv6 topology as it has no IPv6-enabled links with other routers. IS-IS neighbors on R2 r2# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r1 eth1 2 Up 28 2020.2020.2020 r3 eth2 2 Up 27 2020.2020.2020 The routes for IPv4 loopbacks on R2 r2# show ip route 10.0.0.0/24 longer-prefixes Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.1, eth1, weight 1, 00:43:00 L * 10.0.0.2/32 is directly connected, lo, 00:43:04 C>* 10.0.0.2/32 is directly connected, lo, 00:43:04 I>* 10.0.0.3/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:43:00 The IPv6 routing table on R2 r2# show ipv6 route Codes: K - kernel route, C - connected, L - local, S - static, R - RIPng, O - OSPFv3, I - IS-IS, B - BGP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 2001:db8:cafe:1::/64 [115/20] via fe80::a8c1:abff:fed7:a0ce, eth1, weight 1, 00:02:11 C>* 2001:db8:cafe:2::/64 is directly connected, lo, 00:43:33 L>* 2001:db8:cafe:2::1/128 is directly connected, lo, 00:43:33 C>* fe80::/64 is directly connected, eth1, 00:43:32 Next: Optimize Simple IS-IS Deployments","title":"Validation"},{"location":"basic/5-ipv6/#behind-the-scenes","text":"Multi-topology IS-IS routing modifies two aspects of IS-IS. The IS-IS hello packets carry additional TLVs describing the topologies enabled on the sending router. You can see them if you inspect the IS-IS neighbor details: Multi-topology IS-IS neighbors (FRRouting) r2# show isis neighbor detail Area Gandalf: r1 Interface: eth1, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 45m9s ago Circuit type: L2, Speaks: IPv4, IPv6 Topologies: standard ipv6-unicast SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.1 IPv6 Address(es): fe80::a8c1:abff:fed7:a0ce r3 Interface: eth2, Level: 2, State: Up, Expires in 29s Adjacency flaps: 1, Last: 45m9s ago Circuit type: L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.6 Tip Even though we configured the IPv6 topology on R3, it does not advertise that topology over an IPv4-only interface. Multi-topology IS-IS neighbors (Arista EOS) r2#show isis nei detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 P2P UP 27 60 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:00:31 ago at 2024-08-19 13:30:06 IPv4 Interface Address: 10.1.0.1 IPv6 Interface Address: fe80::50dc:caff:fefe:101 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 Gandalf default r3 L2 Ethernet2 P2P UP 22 62 Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:00:08 ago at 2024-08-19 13:30:29 IPv4 Interface Address: 10.1.0.6 IPv6 Interface Address: none Interface name: Ethernet2 Graceful Restart: Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4 Warning Arista EOS is very strict in its checking of IS-IS hellos. The adjacency between R2 and R3 is not established until you configure multi-topology IS-IS on R3, even though the link between R2 and R3 supports only IPv4. The change to the LSPs is even more important. Every router is advertising the topologies it has in its LSP, as well as per-topology links using Extended Reachability (wide metrics) for IPv4-enabled links and Multi-Topology Reachability for IPv6-enabled links. The LSP advertised by R2 using IPv6 topology (FRRouting) r2# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 * 152 0x00000008 0xed0b 1415 0/0/0 Protocols Supported: IPv4, IPv6 Area Address: 49.0001 MT Router Info: ipv4-unicast MT Router Info: ipv6-unicast Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) MT Reachability: 0000.0000.0001.00 (Metric: 10) ipv6-unicast IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) MT IPv6 Reachability: 2001:db8:cafe:2::/64 (Metric: 10) ipv6-unicast The per-protocol neighbor reachability information allows routers to run the SPF algorithm for individual address families. The algorithm can then discard useless links (for an address family) while building the shortest path tree. Takeaway: Use multi-topology IS-IS routing in multiprotocol networks unless you can guarantee that all links use the same address families (or love late-night troubleshooting sessions). Next: Optimize Simple IS-IS Deployments","title":"Behind the Scenes"},{"location":"basic/5-ipv6/#reference-information","text":"","title":"Reference Information"},{"location":"basic/5-ipv6/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1","title":"Lab Wiring"},{"location":"basic/5-ipv6/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback eth1 10.1.0.1/30 LLA r1 -> r2 r2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback eth1 10.1.0.2/30 LLA r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback eth1 10.1.0.6/30 r3 -> r2 I\u2019m positive you have to do both on some devices ;) \u21a9","title":"Lab Addressing"},{"location":"basic/6-level-2/","text":"Optimize Simple IS-IS Deployments In the Configure IS-IS Routing for IPv4 lab exercise, I told you to configure the routers as level-2 intermediate systems and promised a detailed explanation in a follow-up lab exercise. It\u2019s time to open that can of worms. To keep things simple, we\u2019ll use a simple lab topology: three routers connected into a triangle. Device Requirements Use any device supported by the netlab IS-IS configuration module . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/6-level-2 Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and minimal IS-IS configurations on all devices. Level-1 and Level-2 Routing in IS-IS The link-state routing protocols (IS-IS and OSPF) were designed to run on devices that were two orders of magnitude 1 slower than what we have today 2 and had three orders of magnitude less memory 3 . The routing protocol designers were rightfully worried about scalability challenges and implemented features that would allow them to build large networks: OSPF uses areas connected via a backbone area. IS-IS uses areas (level-1 routing) connected via an overlay inter-area routing topology (level-2 routing). Tip In a follow-up lab exercise, we\u2019ll discuss the details of multi-level routing. Today, we\u2019ll focus on the implications of using single-area level-1 and level-2 routing on the same devices. The IS-IS multi-level routing rules are simple: An area is a contiguous set of routers with NETs that differ only in system IDs (everything left of the system ID is the same) 4 . Level-1 (intra-area) routers know the topology of their area but not what\u2019s in other areas. Level-2 (inter-area) routers know the inter-area topology but not the details of individual areas. Level-1-2 routers are like OSPF Area Border Routers. They know the topology of their area 5 and the inter-area topology. They also summarize intra-area reachability information (prefixes and costs) and advertise them into the inter-area topology (similar to what OSPF ABRs do). Contrary to OSPF (where an interface belongs to a single area), IS-IS routers could establish level-1 and level-2 adjacencies over the same interface. Level-1 routing and level-2 routing are entirely separate. While they use a shared adjacency 6 , they use different topology databases. Every router in an IS-IS network can be a level-1 router , a level-2 router , or a level-1-2 router . Furthermore, you could limit the adjacencies a router forms over individual interfaces (we\u2019ll leave this topic for another day). Now for the sad part: the default router type in most implementations is a level-1-2 router. Let\u2019s assume we have a reasonably small network 7 and don\u2019t use areas (all routers are in the same area). Could the default setting hurt us? Best Scenario: Duplicate Information FRRouting is one of those implementations where running level-1 and level-2 routing in parallel causes only minor damage because it\u2019s IS-IS implementation is incomplete (as of October 2024) and cannot distribute intra-area (level-1) information into inter-area (level-2) LSPs or vice versa 8 as required by the IS-IS standards. Regardless, it\u2019s worth exploring this behavior, as other devices might have similar defaults 9 . If you start our lab with FRRouting nodes, you can observe level 3 adjacencies (that\u2019s how FRRouting says \u201clevel-1-2\u201d). The neighbor details confirm that the circuit type is L1L2; we\u2019re running level-1 and level-2 routing with IS-IS neighbors. IS-IS neighbor details on R1 running FRRouting r1# show isis neighbor detail Area Gandalf: r2 Interface: eth1, Level: 3, State: Up, Expires in 28s Adjacency flaps: 2, Last: 25s ago Circuit type: L1L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.2 r3 Interface: eth2, Level: 3, State: Up, Expires in 27s Adjacency flaps: 2, Last: 25s ago Circuit type: L1L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.10 As expected, the routers have two IS-IS LSP databases with duplicate information (the LSPs might have the exact same size): IS-IS LSP database on R1 running FRRouting r1# show isis data Area Gandalf: IS-IS Level-1 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000002 0xcf99 1630 1/0/0 r2.00-00 112 0x00000002 0x0662 1638 1/0/0 r3.00-00 112 0x00000002 0x0e4d 1622 1/0/0 3 LSPs IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000002 0xc7a9 1642 0/0/0 r2.00-00 112 0x00000002 0xfd72 1622 0/0/0 r3.00-00 112 0x00000002 0x065d 1630 0/0/0 3 LSPs Inspecting a level-1 LSP and a corresponding level-2 LSP confirms the duplication of information: L1 and L2 LSP originated by R2 running FRRouting r1# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-1 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000002 0x0662 1544 1/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000002 0xfd72 1528 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) End result: Even without information propagation between level-1 and level-2 routing, the routers consume twice as much memory for the IS-IS topology database. More importantly 11 , every change in the network triggers two SPF 10 runs (one for level-1 topology, one for level-2 topology) with identical results (because every router advertises every prefix in level-1 and level-2 topologies). One of those results is thrown away; within an area, level-1 information takes precedence over level-2 information 12 . Worst Case: Exploding Information Most IS-IS implementations follow the rules from RFC 1195 : Level 2 routers include in their level 2 LSPs a complete list of [IP address, subnet mask, metric] specifying all IP addresses reachable in their area 13 . Now, imagine you\u2019re using an implementation that follows the RFC1195 rules in a single-area network where every router runs level-1 and level-2 routing. Every router advertises every reachable intra-area IP prefix in its level-2 LSP, resulting in humongous level-2 LSPs 14 . All those level-2 prefixes would needlessly increase the overhead of level-2 SPFs (and the results of the level-2 SPF would be ignored anyway). Even worse, every change in the network topology that would change the cost of at least one prefix would result in changed level-2 LSPs that would be flooded across the whole network, triggering even more level-2 SPF runs. Takeaway: In a single-area IS-IS network, never configure your routers as level-1-2 routers. Use level-1 routing or level-2 routing, but not both. You can reproduce that behavior with most IS-IS implementations. Start the lab and explore the contents of a level-1 LSP and corresponding level-2 LSP. This is what you would get on Arista cEOS: The L1 and L2 LSP advertised by R2 running Arista cEOS r1>show isis database r2.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 3 60631 1044 118 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: r2 Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.2 Interface address: 10.0.0.2 IS Neighbor : r1.00 Metric: 10 IS Neighbor : r3.00 Metric: 10 Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0 IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 4 53131 1044 147 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: r2 Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.2 Interface address: 10.0.0.2 IS Neighbor : r1.00 Metric: 10 IS Neighbor : r3.00 Metric: 10 Reachability : 10.0.0.1/32 Metric: 20 Type: 1 Up Reachability : 10.1.0.8/30 Metric: 20 Type: 1 Up Reachability : 10.0.0.3/32 Metric: 20 Type: 1 Up Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0 Configure IS-IS Router Type By now, you probably agree that running level-1 routing and level-2 routing in parallel on all links of a single-area network 15 does not make sense. Is it better to run just level-1 routing or just level-2 routing? I would go with level-2 routing; things will keep working even if you decide to split your network into smaller areas sometime in the future. It\u2019s time to get our hands dirty. After exploring the IS-IS database structures, configure all routers in your network to be level-2 routers with a router configuration command similar to is-type level-2 . Validation Examine the IS-IS adjacencies on all links in your network. All IS-IS neighbors should have level-2 adjacency: r1# sh isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth1 2 Up 30 2020.2020.2020 r3 eth2 2 Up 29 2020.2020.2020 The IS-IS database should not have any level-1 information: r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000005 0xc1ac 1644 0/0/0 r2.00-00 112 0x00000006 0xf576 1713 0/0/0 r3.00-00 112 0x00000007 0xfb62 1701 0/0/0 3 LSPs Next : Running IS-IS Over Unnumbered Interfaces Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1 r1 eth2 r3 eth2 Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.9/30 r1 -> r3 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r2 eth2 10.1.0.10/30 r3 -> r1 100 times \u21a9 The Cisco 2500 router had a 20 MHz CPU. Most general-purpose CPUs today use a clock frequency above 2 GHz (ignoring for the moment that they can also do much more in a single clock cycle). \u21a9 The Cisco 2500 router had up to 16 MB of memory. Most modern routers have at least 8 GB of (much faster) RAM. \u21a9 This is an over-simplified definition that ignores the IS-IS area merging functionality, where an IS-IS router with NETs from multiple areas joins those areas into a single L1 domain. \u21a9 Contrary to OSPF, an IS-IS router can belong to a single area (ignoring the overlapping areas exception). \u21a9 That shared adjacency is advertised as two adjacencies (extended reachability TLV), one in level-1 LSP and another in level-2 LSP. \u21a9 ISPs were running networks with hundreds of routers in an IS-IS area in the 1990s. Most everyone agrees that (assuming you\u2019re using a decent implementation) it\u2019s OK to run a few hundred routers (I\u2019ve also heard \u201cless than a thousand routers\u201d) in a relatively stable IS-IS area (TLDR: It Depends\u2122\ufe0f) \u21a9 Let\u2019s be polite: I would not invest my time in figuring out how to use FRRouting as a level-1-2 router in a network that uses multi-level IS-IS routing. \u21a9 Cisco Nexus OS does not distribute level-1 information into level-2 LSPs unless you configure distribute level-1 into level-2 within an IS-IS router address family. \u21a9 Shortest-Path First ; the algorithm used to find the lowest-cost paths in a weighted graph \u21a9 In the world of cheap RAM \u21a9 See section 3.2 of RFC 5302 for more details. \u21a9 RFC 5302 provides a slightly stricter interpretation in section 3.3 : a L1L2 router SHOULD only advertise in their L2 LSP those L1 routes that they use for forwarding themselves. They SHOULD NOT unconditionally advertise into L2 all prefixes from LSPs in the L1 database. \u21a9 OSPF would do the same thing if you configured virtual backbone links across a single-area OSPF network \u21a9 In a network with multiple areas using multi-level IS-IS routing, you might have to run level-1 routing and level-2 routing on some core links (but you wouldn\u2019t do that on each link). \u21a9","title":"Optimize Simple IS-IS Deployments"},{"location":"basic/6-level-2/#optimize-simple-is-is-deployments","text":"In the Configure IS-IS Routing for IPv4 lab exercise, I told you to configure the routers as level-2 intermediate systems and promised a detailed explanation in a follow-up lab exercise. It\u2019s time to open that can of worms. To keep things simple, we\u2019ll use a simple lab topology: three routers connected into a triangle.","title":"Optimize Simple IS-IS Deployments"},{"location":"basic/6-level-2/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module .","title":"Device Requirements"},{"location":"basic/6-level-2/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/6-level-2 Execute netlab up Log into lab devices with netlab connect You\u2019ll get a lab with IPv4 addresses and minimal IS-IS configurations on all devices.","title":"Starting the Lab"},{"location":"basic/6-level-2/#level-1-and-level-2-routing-in-is-is","text":"The link-state routing protocols (IS-IS and OSPF) were designed to run on devices that were two orders of magnitude 1 slower than what we have today 2 and had three orders of magnitude less memory 3 . The routing protocol designers were rightfully worried about scalability challenges and implemented features that would allow them to build large networks: OSPF uses areas connected via a backbone area. IS-IS uses areas (level-1 routing) connected via an overlay inter-area routing topology (level-2 routing). Tip In a follow-up lab exercise, we\u2019ll discuss the details of multi-level routing. Today, we\u2019ll focus on the implications of using single-area level-1 and level-2 routing on the same devices. The IS-IS multi-level routing rules are simple: An area is a contiguous set of routers with NETs that differ only in system IDs (everything left of the system ID is the same) 4 . Level-1 (intra-area) routers know the topology of their area but not what\u2019s in other areas. Level-2 (inter-area) routers know the inter-area topology but not the details of individual areas. Level-1-2 routers are like OSPF Area Border Routers. They know the topology of their area 5 and the inter-area topology. They also summarize intra-area reachability information (prefixes and costs) and advertise them into the inter-area topology (similar to what OSPF ABRs do). Contrary to OSPF (where an interface belongs to a single area), IS-IS routers could establish level-1 and level-2 adjacencies over the same interface. Level-1 routing and level-2 routing are entirely separate. While they use a shared adjacency 6 , they use different topology databases. Every router in an IS-IS network can be a level-1 router , a level-2 router , or a level-1-2 router . Furthermore, you could limit the adjacencies a router forms over individual interfaces (we\u2019ll leave this topic for another day). Now for the sad part: the default router type in most implementations is a level-1-2 router. Let\u2019s assume we have a reasonably small network 7 and don\u2019t use areas (all routers are in the same area). Could the default setting hurt us?","title":"Level-1 and Level-2 Routing in IS-IS"},{"location":"basic/6-level-2/#best-scenario-duplicate-information","text":"FRRouting is one of those implementations where running level-1 and level-2 routing in parallel causes only minor damage because it\u2019s IS-IS implementation is incomplete (as of October 2024) and cannot distribute intra-area (level-1) information into inter-area (level-2) LSPs or vice versa 8 as required by the IS-IS standards. Regardless, it\u2019s worth exploring this behavior, as other devices might have similar defaults 9 . If you start our lab with FRRouting nodes, you can observe level 3 adjacencies (that\u2019s how FRRouting says \u201clevel-1-2\u201d). The neighbor details confirm that the circuit type is L1L2; we\u2019re running level-1 and level-2 routing with IS-IS neighbors. IS-IS neighbor details on R1 running FRRouting r1# show isis neighbor detail Area Gandalf: r2 Interface: eth1, Level: 3, State: Up, Expires in 28s Adjacency flaps: 2, Last: 25s ago Circuit type: L1L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.2 r3 Interface: eth2, Level: 3, State: Up, Expires in 27s Adjacency flaps: 2, Last: 25s ago Circuit type: L1L2, Speaks: IPv4 SNPA: 2020.2020.2020 Area Address(es): 49.0001 IPv4 Address(es): 10.1.0.10 As expected, the routers have two IS-IS LSP databases with duplicate information (the LSPs might have the exact same size): IS-IS LSP database on R1 running FRRouting r1# show isis data Area Gandalf: IS-IS Level-1 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000002 0xcf99 1630 1/0/0 r2.00-00 112 0x00000002 0x0662 1638 1/0/0 r3.00-00 112 0x00000002 0x0e4d 1622 1/0/0 3 LSPs IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000002 0xc7a9 1642 0/0/0 r2.00-00 112 0x00000002 0xfd72 1622 0/0/0 r3.00-00 112 0x00000002 0x065d 1630 0/0/0 3 LSPs Inspecting a level-1 LSP and a corresponding level-2 LSP confirms the duplication of information: L1 and L2 LSP originated by R2 running FRRouting r1# show isis database detail r2.00-00 Area Gandalf: IS-IS Level-1 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000002 0x0662 1544 1/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r2.00-00 112 0x00000002 0xfd72 1528 0/0/0 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: r2 TE Router ID: 10.0.0.2 Router Capability: 10.0.0.2 , D:0, S:0 Extended Reachability: 0000.0000.0001.00 (Metric: 10) Extended Reachability: 0000.0000.0003.00 (Metric: 10) IPv4 Interface Address: 10.0.0.2 Extended IP Reachability: 10.0.0.2/32 (Metric: 10) Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.4/30 (Metric: 10) End result: Even without information propagation between level-1 and level-2 routing, the routers consume twice as much memory for the IS-IS topology database. More importantly 11 , every change in the network triggers two SPF 10 runs (one for level-1 topology, one for level-2 topology) with identical results (because every router advertises every prefix in level-1 and level-2 topologies). One of those results is thrown away; within an area, level-1 information takes precedence over level-2 information 12 .","title":"Best Scenario: Duplicate Information"},{"location":"basic/6-level-2/#worst-case-exploding-information","text":"Most IS-IS implementations follow the rules from RFC 1195 : Level 2 routers include in their level 2 LSPs a complete list of [IP address, subnet mask, metric] specifying all IP addresses reachable in their area 13 . Now, imagine you\u2019re using an implementation that follows the RFC1195 rules in a single-area network where every router runs level-1 and level-2 routing. Every router advertises every reachable intra-area IP prefix in its level-2 LSP, resulting in humongous level-2 LSPs 14 . All those level-2 prefixes would needlessly increase the overhead of level-2 SPFs (and the results of the level-2 SPF would be ignored anyway). Even worse, every change in the network topology that would change the cost of at least one prefix would result in changed level-2 LSPs that would be flooded across the whole network, triggering even more level-2 SPF runs. Takeaway: In a single-area IS-IS network, never configure your routers as level-1-2 routers. Use level-1 routing or level-2 routing, but not both. You can reproduce that behavior with most IS-IS implementations. Start the lab and explore the contents of a level-1 LSP and corresponding level-2 LSP. This is what you would get on Arista cEOS: The L1 and L2 LSP advertised by R2 running Arista cEOS r1>show isis database r2.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 3 60631 1044 118 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: r2 Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.2 Interface address: 10.0.0.2 IS Neighbor : r1.00 Metric: 10 IS Neighbor : r3.00 Metric: 10 Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0 IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 4 53131 1044 147 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: r2 Area addresses: 49.0001 Interface address: 10.1.0.5 Interface address: 10.1.0.2 Interface address: 10.0.0.2 IS Neighbor : r1.00 Metric: 10 IS Neighbor : r3.00 Metric: 10 Reachability : 10.0.0.1/32 Metric: 20 Type: 1 Up Reachability : 10.1.0.8/30 Metric: 20 Type: 1 Up Reachability : 10.0.0.3/32 Metric: 20 Type: 1 Up Reachability : 10.1.0.4/30 Metric: 10 Type: 1 Up Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0","title":"Worst Case: Exploding Information"},{"location":"basic/6-level-2/#configure-is-is-router-type","text":"By now, you probably agree that running level-1 routing and level-2 routing in parallel on all links of a single-area network 15 does not make sense. Is it better to run just level-1 routing or just level-2 routing? I would go with level-2 routing; things will keep working even if you decide to split your network into smaller areas sometime in the future. It\u2019s time to get our hands dirty. After exploring the IS-IS database structures, configure all routers in your network to be level-2 routers with a router configuration command similar to is-type level-2 .","title":"Configure IS-IS Router Type"},{"location":"basic/6-level-2/#validation","text":"Examine the IS-IS adjacencies on all links in your network. All IS-IS neighbors should have level-2 adjacency: r1# sh isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth1 2 Up 30 2020.2020.2020 r3 eth2 2 Up 29 2020.2020.2020 The IS-IS database should not have any level-1 information: r1# show isis database Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL r1.00-00 * 112 0x00000005 0xc1ac 1644 0/0/0 r2.00-00 112 0x00000006 0xf576 1713 0/0/0 r3.00-00 112 0x00000007 0xfb62 1701 0/0/0 3 LSPs Next : Running IS-IS Over Unnumbered Interfaces","title":"Validation"},{"location":"basic/6-level-2/#reference-information","text":"","title":"Reference Information"},{"location":"basic/6-level-2/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r2 eth2 r3 eth1 r1 eth2 r3 eth2","title":"Lab Wiring"},{"location":"basic/6-level-2/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.9/30 r1 -> r3 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 eth2 10.1.0.5/30 r2 -> r3 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r2 eth2 10.1.0.10/30 r3 -> r1 100 times \u21a9 The Cisco 2500 router had a 20 MHz CPU. Most general-purpose CPUs today use a clock frequency above 2 GHz (ignoring for the moment that they can also do much more in a single clock cycle). \u21a9 The Cisco 2500 router had up to 16 MB of memory. Most modern routers have at least 8 GB of (much faster) RAM. \u21a9 This is an over-simplified definition that ignores the IS-IS area merging functionality, where an IS-IS router with NETs from multiple areas joins those areas into a single L1 domain. \u21a9 Contrary to OSPF, an IS-IS router can belong to a single area (ignoring the overlapping areas exception). \u21a9 That shared adjacency is advertised as two adjacencies (extended reachability TLV), one in level-1 LSP and another in level-2 LSP. \u21a9 ISPs were running networks with hundreds of routers in an IS-IS area in the 1990s. Most everyone agrees that (assuming you\u2019re using a decent implementation) it\u2019s OK to run a few hundred routers (I\u2019ve also heard \u201cless than a thousand routers\u201d) in a relatively stable IS-IS area (TLDR: It Depends\u2122\ufe0f) \u21a9 Let\u2019s be polite: I would not invest my time in figuring out how to use FRRouting as a level-1-2 router in a network that uses multi-level IS-IS routing. \u21a9 Cisco Nexus OS does not distribute level-1 information into level-2 LSPs unless you configure distribute level-1 into level-2 within an IS-IS router address family. \u21a9 Shortest-Path First ; the algorithm used to find the lowest-cost paths in a weighted graph \u21a9 In the world of cheap RAM \u21a9 See section 3.2 of RFC 5302 for more details. \u21a9 RFC 5302 provides a slightly stricter interpretation in section 3.3 : a L1L2 router SHOULD only advertise in their L2 LSP those L1 routes that they use for forwarding themselves. They SHOULD NOT unconditionally advertise into L2 all prefixes from LSPs in the L1 database. \u21a9 OSPF would do the same thing if you configured virtual backbone links across a single-area OSPF network \u21a9 In a network with multiple areas using multi-level IS-IS routing, you might have to run level-1 routing and level-2 routing on some core links (but you wouldn\u2019t do that on each link). \u21a9","title":"Lab Addressing"},{"location":"basic/7-unnumbered/","text":"Running IS-IS Over Unnumbered/LLA-only Interfaces IS-IS does not use IPv4 or IPv6 to exchange routing information. It uses a dedicated layer-3 protocol (it has its own 802.1 Service Access Point \u2013 SAP) and transports IPv4/IPv6 information only in various TLVs inside the LSPs. Running IS-IS over point-to-point or multi-access unnumbered interfaces should be a no-brainer, but do all IS-IS implementations support that? You can test that in this lab exercise, which contains a point-to-point link between two routers and a LAN segment. Device Requirements Use any device supported by the netlab IS-IS configuration module . It\u2019s best if the device supports unnumbered IPv4 interfaces. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/7-unnumbered Execute netlab up . You\u2019ll get a lab with IPv4, IPv6, and IS-IS routing configured on all lab devices. Log into your device (RTR) with netlab connect rtr Explore the IS-IS Data Structures Before changing anything, explore the IS-IS data structures routers generate using regular IPv4/IPv6 interface addresses. Their LSPs contain the LAN/P2P prefix; some platforms also add all the interface IPv4/IPv6 addresses: R3 LSP displayed by R1 running Arista EOS r1#show isis database level-2 r3.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r3.00-00 3 35505 1192 246 L2 0000.0000.0003.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) 0x8E(IPv6) Hostname: r3 Area addresses: 49.0001 Topology: 2 (IPv6) Topology: 0 (IPv4) Interface address: 10.1.0.1 Interface address: 172.16.0.3 Interface address: 10.0.0.3 Interface address: 2001:db8:20::1 Interface address: 2001:db8:21::3 Interface address: 2001:db8:cafe:3::1 IS Neighbor : r3.7e Metric: 10 IS Neighbor : 0000.0000.0004.00 Metric: 10 IS Neighbor (MT-IPv6): r3.7e Metric: 10 IS Neighbor (MT-IPv6): 0000.0000.0004.00 Metric: 10 Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 172.16.0.0/24 Metric: 10 Type: 1 Up Reachability : 10.0.0.3/32 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:20::/64 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:21::/64 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:cafe:3::/64 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.3 Flags: [] Area leader priority: 250 algorithm: 0 The IPv4 and IPv6 interface addresses are also advertised in IS-IS hello messages: Details of R3 IS-IS neighbor displayed by R1 running Arista EOS r1#show isis neighbors level-2 detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id ... Gandalf default r3 L2 Ethernet1 52:dc:ca:fe:3:1 UP 7 r3.7e Area addresses: 49.0001 SNPA: 52:dc:ca:fe:3:1 Router ID: 0.0.0.0 Advertised Hold Time: 9 State Changed: 00:02:10 ago at 2025-03-12 13:54:02 LAN Priority: 64 IPv4 Interface Address: 172.16.0.3 IPv6 Interface Address: fe80::50dc:caff:fefe:301 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 Tip The interface addresses advertised in the LSPs are rarely used. Instead, routers use the interface addresses advertised in the IS-IS hello packets to determine the next hops for the IP routing table. Building the IP Routing Table Calculating the prefixes that go into the IP routing tables and the next-hop routers is the primary job of the IS-IS SPF algorithm (we covered a few details in the Explore IS-IS Data Structures lab exercise). In this lab exercise, we\u2019ll focus on the next hops of those prefixes. For example, R1 finds three prefixes that go through R3 (the loopback addresses of R3 and R4 and their point-to-point link). Combining that with the IPv4/IPv6 interface address advertised by R3 in the IS-IS hello messages (see above), it installs the following routes in the IPv4 and IPv6 routing tables: IPv4 routes using R3 as the next hop (displayed by R1 running Arista EOS) r1#show ip route isis next-hop 172.16.0.3 ... I L2 10.0.0.3/32 [115/20] via 172.16.0.3, Ethernet1 I L2 10.0.0.4/32 [115/30] via 172.16.0.3, Ethernet1 I L2 10.1.0.0/30 [115/20] via 172.16.0.3, Ethernet1 IPv6 routes using R3 as the next hop (displayed by R1 running Arista EOS) r1#show ipv6 route isis ... I L2 2001:db8:20::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:3::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:4::/64 [115/30] via fe80::50dc:caff:fefe:301, Ethernet1 Tip The IS-IS IPv6 routes use IPv6 LLA as the next-hop IPv6 address. Migrating to Unnumbered/LLA-only Interfaces Replace IPv4/IPv6 addresses on all Ethernet interfaces of all routers in your lab with unnumbered IPv4 addresses and link-local-only IPv6. The commands to do that might be similar to no ip address followed by ip address unnumbered loopback 0 and no ipv6 address followed by ipv6 enable . Tip FRRouting: Allows you to configure the same IP address on multiple interfaces. After removing the original Ethernet IPv4 address, use the regular ip address command with the loopback IPv4 address. Does not need the ipv6 enable command; IPv6 is enabled with the sysctl commands, and removing an IPv6 address from an interface does not deactivate IPv6 on that interface. Does It Still Work? Connect to R3 and explore its IS-IS neighbors. R3 should still have working adjacencies with all other routers in your lab. IS-IS neighbors observed on R3 running Arista EOS r3#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 52:dc:ca:fe:1:1 UP 24 r3.7e Gandalf default r2 L2 Ethernet1 52:dc:ca:fe:2:1 UP 26 r3.7e Gandalf default r4 L2 Ethernet2 P2P UP 24 80 Warning Some devices can run IS-IS over unnumbered point-to-point IPv4 links but not over unnumbered multi-access IPv4 links. Such a device might refuse to form adjacencies over the LAN or might not install some IPv4 routes in the IP routing table. Next, connect to R1 and explore its IPv4 and IPv6 routing tables. Do they contain the same routes for the loopback interfaces as before? What are the next hops? The IPv4 results might surprise you a bit. For example, Arista EOS claims that the loopback addresses of R2 and R3 are directly connected: The IPv4 routing table on R1 running Arista EOS r1#show ip route isis ... I L2 10.0.0.2/32 directly connected, Ethernet1 I L2 10.0.0.3/32 directly connected, Ethernet1 I L2 10.0.0.4/32 [115/30] via 10.0.0.3, Ethernet1 Technically, that\u2019s not incorrect, as R2 and R3 reuse their loopback IPv4 addresses for the Ethernet interfaces. The IPv6 routing table should contain no such surprises and should be mostly identical to the one you\u2019ve seen before (apart from no longer having the transit subnets): The IPv6 routing table on R1 running Arista EOS r1#show ipv6 route isis ... I L2 2001:db8:cafe:2::/64 [115/20] via fe80::50dc:caff:fefe:201, Ethernet1 I L2 2001:db8:cafe:3::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:4::/64 [115/30] via fe80::50dc:caff:fefe:301, Ethernet1 How Does This Work? The IPv6 results shouldn\u2019t be surprising. The IS-IS hello messages contain the neighbor\u2019s IPv6 LLA, which is used as the next-hop address in the IPv6 routing table. A similar process is going on in the IPv4 world. The IS-IS hello messages sent by R3 advertise its loopback address (10.0.0.3) as its IPv4 address on the LAN: The IPv4 address of R3 observed by R1 running Arista EOS r1#show isis neighbors level-2 detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id ... Gandalf default r3 L2 Ethernet1 52:dc:ca:fe:3:1 UP 9 r3.7e Area addresses: 49.0001 SNPA: 52:dc:ca:fe:3:1 Router ID: 0.0.0.0 Advertised Hold Time: 9 State Changed: 00:10:24 ago at 2025-03-12 14:06:32 LAN Priority: 64 IPv4 Interface Address: 10.0.0.3 IPv6 Interface Address: fe80::50dc:caff:fefe:301 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 The loopback IPv4 address (10.0.0.3) is thus used as the next hop for all routes going through R3. Most routers also add the outgoing interface to the routes in their routing tables. R1 thus knows that it has to (A) send packets to 10.0.0.3 and (B) use the Ethernet1 interface to reach 10.0.0.3 if it wants to send packets to 10.0.0.4: The details of the IPv4 route for 10.0.0.4/32 on R1 running Arista EOS r1#show ip route 10.0.0.4/32 detail ... I L2 10.0.0.4/32 [115/30] PM via 10.0.0.3, Ethernet1 r1 -> [r2,r3] But how does R1 know what MAC address to use to reach R3? It uses ARP, sending an ARP request on Ethernet1 asking who has the IP address 10.0.0.3. Not surprisingly, we can see the results in its ARP table: The ARP table on R1 contains the MAC addresses of all connected routers r1#show arp Address Age (sec) Hardware Addr Interface 10.0.0.2 0:13:44 52dc.cafe.0201 Ethernet1 10.0.0.3 0:13:44 52dc.cafe.0301 Ethernet1 Want to have even more details? Read the blog posts in the Unnumbered IPv4 Interfaces series. Reference Information Lab Wiring Point-to-Point Links Origin Device Origin Port Destination Device Destination Port r3 Ethernet2 r4 Ethernet1 LAN Links Origin Device Origin Port Link Name (NET) Description r1 Ethernet1 LAN r1 -> [r2,r3] r2 Ethernet1 LAN r2 -> [r1,r3] r3 Ethernet1 LAN r3 -> [r1,r2] Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback Ethernet1 172.16.0.1/24 2001:db8:21::1/64 r1 -> [r2,r3] r2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback Ethernet1 172.16.0.2/24 2001:db8:21::2/64 r2 -> [r1,r3] r3 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback Ethernet1 172.16.0.3/24 2001:db8:21::3/64 r3 -> [r1,r2] Ethernet2 10.1.0.1/30 2001:db8:20::1/64 r3 -> r4 r4 10.0.0.4/32 2001:db8:cafe:4::1/64 Loopback Ethernet1 10.1.0.2/30 2001:db8:20::2/64 r4 -> r3","title":"Running IS-IS Over Unnumbered/LLA-only Interfaces"},{"location":"basic/7-unnumbered/#running-is-is-over-unnumberedlla-only-interfaces","text":"IS-IS does not use IPv4 or IPv6 to exchange routing information. It uses a dedicated layer-3 protocol (it has its own 802.1 Service Access Point \u2013 SAP) and transports IPv4/IPv6 information only in various TLVs inside the LSPs. Running IS-IS over point-to-point or multi-access unnumbered interfaces should be a no-brainer, but do all IS-IS implementations support that? You can test that in this lab exercise, which contains a point-to-point link between two routers and a LAN segment.","title":"Running IS-IS Over Unnumbered/LLA-only Interfaces"},{"location":"basic/7-unnumbered/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module . It\u2019s best if the device supports unnumbered IPv4 interfaces.","title":"Device Requirements"},{"location":"basic/7-unnumbered/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to basic/7-unnumbered Execute netlab up . You\u2019ll get a lab with IPv4, IPv6, and IS-IS routing configured on all lab devices. Log into your device (RTR) with netlab connect rtr","title":"Starting the Lab"},{"location":"basic/7-unnumbered/#explore-the-is-is-data-structures","text":"Before changing anything, explore the IS-IS data structures routers generate using regular IPv4/IPv6 interface addresses. Their LSPs contain the LAN/P2P prefix; some platforms also add all the interface IPv4/IPv6 addresses: R3 LSP displayed by R1 running Arista EOS r1#show isis database level-2 r3.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r3.00-00 3 35505 1192 246 L2 0000.0000.0003.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) 0x8E(IPv6) Hostname: r3 Area addresses: 49.0001 Topology: 2 (IPv6) Topology: 0 (IPv4) Interface address: 10.1.0.1 Interface address: 172.16.0.3 Interface address: 10.0.0.3 Interface address: 2001:db8:20::1 Interface address: 2001:db8:21::3 Interface address: 2001:db8:cafe:3::1 IS Neighbor : r3.7e Metric: 10 IS Neighbor : 0000.0000.0004.00 Metric: 10 IS Neighbor (MT-IPv6): r3.7e Metric: 10 IS Neighbor (MT-IPv6): 0000.0000.0004.00 Metric: 10 Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 172.16.0.0/24 Metric: 10 Type: 1 Up Reachability : 10.0.0.3/32 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:20::/64 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:21::/64 Metric: 10 Type: 1 Up Reachability (MT-IPv6): 2001:db8:cafe:3::/64 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.3 Flags: [] Area leader priority: 250 algorithm: 0 The IPv4 and IPv6 interface addresses are also advertised in IS-IS hello messages: Details of R3 IS-IS neighbor displayed by R1 running Arista EOS r1#show isis neighbors level-2 detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id ... Gandalf default r3 L2 Ethernet1 52:dc:ca:fe:3:1 UP 7 r3.7e Area addresses: 49.0001 SNPA: 52:dc:ca:fe:3:1 Router ID: 0.0.0.0 Advertised Hold Time: 9 State Changed: 00:02:10 ago at 2025-03-12 13:54:02 LAN Priority: 64 IPv4 Interface Address: 172.16.0.3 IPv6 Interface Address: fe80::50dc:caff:fefe:301 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 Tip The interface addresses advertised in the LSPs are rarely used. Instead, routers use the interface addresses advertised in the IS-IS hello packets to determine the next hops for the IP routing table.","title":"Explore the IS-IS Data Structures"},{"location":"basic/7-unnumbered/#building-the-ip-routing-table","text":"Calculating the prefixes that go into the IP routing tables and the next-hop routers is the primary job of the IS-IS SPF algorithm (we covered a few details in the Explore IS-IS Data Structures lab exercise). In this lab exercise, we\u2019ll focus on the next hops of those prefixes. For example, R1 finds three prefixes that go through R3 (the loopback addresses of R3 and R4 and their point-to-point link). Combining that with the IPv4/IPv6 interface address advertised by R3 in the IS-IS hello messages (see above), it installs the following routes in the IPv4 and IPv6 routing tables: IPv4 routes using R3 as the next hop (displayed by R1 running Arista EOS) r1#show ip route isis next-hop 172.16.0.3 ... I L2 10.0.0.3/32 [115/20] via 172.16.0.3, Ethernet1 I L2 10.0.0.4/32 [115/30] via 172.16.0.3, Ethernet1 I L2 10.1.0.0/30 [115/20] via 172.16.0.3, Ethernet1 IPv6 routes using R3 as the next hop (displayed by R1 running Arista EOS) r1#show ipv6 route isis ... I L2 2001:db8:20::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:3::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:4::/64 [115/30] via fe80::50dc:caff:fefe:301, Ethernet1 Tip The IS-IS IPv6 routes use IPv6 LLA as the next-hop IPv6 address.","title":"Building the IP Routing Table"},{"location":"basic/7-unnumbered/#migrating-to-unnumberedlla-only-interfaces","text":"Replace IPv4/IPv6 addresses on all Ethernet interfaces of all routers in your lab with unnumbered IPv4 addresses and link-local-only IPv6. The commands to do that might be similar to no ip address followed by ip address unnumbered loopback 0 and no ipv6 address followed by ipv6 enable . Tip FRRouting: Allows you to configure the same IP address on multiple interfaces. After removing the original Ethernet IPv4 address, use the regular ip address command with the loopback IPv4 address. Does not need the ipv6 enable command; IPv6 is enabled with the sysctl commands, and removing an IPv6 address from an interface does not deactivate IPv6 on that interface.","title":"Migrating to Unnumbered/LLA-only Interfaces"},{"location":"basic/7-unnumbered/#does-it-still-work","text":"Connect to R3 and explore its IS-IS neighbors. R3 should still have working adjacencies with all other routers in your lab. IS-IS neighbors observed on R3 running Arista EOS r3#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r1 L2 Ethernet1 52:dc:ca:fe:1:1 UP 24 r3.7e Gandalf default r2 L2 Ethernet1 52:dc:ca:fe:2:1 UP 26 r3.7e Gandalf default r4 L2 Ethernet2 P2P UP 24 80 Warning Some devices can run IS-IS over unnumbered point-to-point IPv4 links but not over unnumbered multi-access IPv4 links. Such a device might refuse to form adjacencies over the LAN or might not install some IPv4 routes in the IP routing table. Next, connect to R1 and explore its IPv4 and IPv6 routing tables. Do they contain the same routes for the loopback interfaces as before? What are the next hops? The IPv4 results might surprise you a bit. For example, Arista EOS claims that the loopback addresses of R2 and R3 are directly connected: The IPv4 routing table on R1 running Arista EOS r1#show ip route isis ... I L2 10.0.0.2/32 directly connected, Ethernet1 I L2 10.0.0.3/32 directly connected, Ethernet1 I L2 10.0.0.4/32 [115/30] via 10.0.0.3, Ethernet1 Technically, that\u2019s not incorrect, as R2 and R3 reuse their loopback IPv4 addresses for the Ethernet interfaces. The IPv6 routing table should contain no such surprises and should be mostly identical to the one you\u2019ve seen before (apart from no longer having the transit subnets): The IPv6 routing table on R1 running Arista EOS r1#show ipv6 route isis ... I L2 2001:db8:cafe:2::/64 [115/20] via fe80::50dc:caff:fefe:201, Ethernet1 I L2 2001:db8:cafe:3::/64 [115/20] via fe80::50dc:caff:fefe:301, Ethernet1 I L2 2001:db8:cafe:4::/64 [115/30] via fe80::50dc:caff:fefe:301, Ethernet1","title":"Does It Still Work?"},{"location":"basic/7-unnumbered/#how-does-this-work","text":"The IPv6 results shouldn\u2019t be surprising. The IS-IS hello messages contain the neighbor\u2019s IPv6 LLA, which is used as the next-hop address in the IPv6 routing table. A similar process is going on in the IPv4 world. The IS-IS hello messages sent by R3 advertise its loopback address (10.0.0.3) as its IPv4 address on the LAN: The IPv4 address of R3 observed by R1 running Arista EOS r1#show isis neighbors level-2 detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id ... Gandalf default r3 L2 Ethernet1 52:dc:ca:fe:3:1 UP 9 r3.7e Area addresses: 49.0001 SNPA: 52:dc:ca:fe:3:1 Router ID: 0.0.0.0 Advertised Hold Time: 9 State Changed: 00:10:24 ago at 2025-03-12 14:06:32 LAN Priority: 64 IPv4 Interface Address: 10.0.0.3 IPv6 Interface Address: fe80::50dc:caff:fefe:301 Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4, IPv6 Neighbor Supported Address Families: IPv4, IPv6 The loopback IPv4 address (10.0.0.3) is thus used as the next hop for all routes going through R3. Most routers also add the outgoing interface to the routes in their routing tables. R1 thus knows that it has to (A) send packets to 10.0.0.3 and (B) use the Ethernet1 interface to reach 10.0.0.3 if it wants to send packets to 10.0.0.4: The details of the IPv4 route for 10.0.0.4/32 on R1 running Arista EOS r1#show ip route 10.0.0.4/32 detail ... I L2 10.0.0.4/32 [115/30] PM via 10.0.0.3, Ethernet1 r1 -> [r2,r3] But how does R1 know what MAC address to use to reach R3? It uses ARP, sending an ARP request on Ethernet1 asking who has the IP address 10.0.0.3. Not surprisingly, we can see the results in its ARP table: The ARP table on R1 contains the MAC addresses of all connected routers r1#show arp Address Age (sec) Hardware Addr Interface 10.0.0.2 0:13:44 52dc.cafe.0201 Ethernet1 10.0.0.3 0:13:44 52dc.cafe.0301 Ethernet1 Want to have even more details? Read the blog posts in the Unnumbered IPv4 Interfaces series.","title":"How Does This Work?"},{"location":"basic/7-unnumbered/#reference-information","text":"","title":"Reference Information"},{"location":"basic/7-unnumbered/#lab-wiring","text":"Point-to-Point Links Origin Device Origin Port Destination Device Destination Port r3 Ethernet2 r4 Ethernet1 LAN Links Origin Device Origin Port Link Name (NET) Description r1 Ethernet1 LAN r1 -> [r2,r3] r2 Ethernet1 LAN r2 -> [r1,r3] r3 Ethernet1 LAN r3 -> [r1,r2] Note: The interface names depend on the devices you use in the lab. The printout was generated with Arista EOS running on RTR and FRRouting running on X1 and X2.","title":"Lab Wiring"},{"location":"basic/7-unnumbered/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback Ethernet1 172.16.0.1/24 2001:db8:21::1/64 r1 -> [r2,r3] r2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback Ethernet1 172.16.0.2/24 2001:db8:21::2/64 r2 -> [r1,r3] r3 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback Ethernet1 172.16.0.3/24 2001:db8:21::3/64 r3 -> [r1,r2] Ethernet2 10.1.0.1/30 2001:db8:20::1/64 r3 -> r4 r4 10.0.0.4/32 2001:db8:cafe:4::1/64 Loopback Ethernet1 10.1.0.2/30 2001:db8:20::2/64 r4 -> r3","title":"Lab Addressing"},{"location":"feature/1-passive/","text":"Passive IS-IS Interfaces Running an IGP on an untrusted network edge 1 is a bad idea. Unless you take extra security measures like MD5 passwords 2 , an intruder can establish an IGP adjacency with your router and insert any prefix they wish into your network 3 . However, you still have to advertise those edge subnets into your IGP, or the hosts attached to your network won\u2019t be able to communicate. There are two ways to get that done: redistribute connected subnets into your IGP or make the customer-facing interfaces on the edge routers passive ( more details ). That\u2019s what we\u2019ll do in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers). You can do automated lab validation if you use FRRouting on R1 and R2. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/1-passive Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on R1, R2, and X. Log into lab routers with netlab connect and verify their configuration. The Problem R1 is running IS-IS on all its interfaces and establishes adjacency with the intruder (X): IS-IS neighbors on R1 running FRRouting r1# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA x eth1 2 Up 30 aac1.abd6.15da r2 eth2 2 Up 27 2020.2020.2020 The intruder is advertising its loopback IP address (10.0.0.3/32) but could advertise any IP prefix it wishes 4 . The IP routing table on R1 running FRRouting r1# show ip route Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:17:00 C>* 10.0.0.1/32 is directly connected, lo, 00:17:00 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth2, weight 1, 00:16:57 I>* 10.0.0.3/32 [115/20] via 172.16.0.3, eth1, weight 1, 00:16:50 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth2 inactive, weight 1, 00:16:57 C>* 10.1.0.0/30 is directly connected, eth2, 00:17:00 L>* 10.1.0.1/32 is directly connected, eth2, 00:17:00 I 172.16.0.0/24 [115/20] via 172.16.0.3, eth1 inactive, weight 1, 00:16:50 C>* 172.16.0.0/24 is directly connected, eth1, 00:17:00 L>* 172.16.0.1/32 is directly connected, eth1, 00:17:00 I>* 172.16.1.0/24 [115/20] via 10.1.0.2, eth2, weight 1, 00:16:57 Configuration Tasks Using an interface command similar to isis passive , configure the LAN interface on R1 as a passive IS-IS interface. For consistency reasons, you should do the same on R2. Tip Some devices configure the interface IGP state within the interface configuration; others do it within the IGP configuration. Validation You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on the external routers. This is the printout you should get after completing the lab exercise: You could also do manual validation on R1 and R2: Inspect IS-IS adjacencies on R1 with a command similar to show isis neighbors or show isis adjacency . Your router should have an adjacency with R2 but not with X. IS-IS neighbors (FRRouting) r1# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth2 2 Up 27 2020.2020.2020 On some devices, you can inspect the details of the IS-IS interface state with a command similar to show isis interface detail . When executed on R1 running FRRouting, that command shows the R1-R2 interface as Active and the LAN and the loopback interfaces as Passive . IS-IS interface details (FRRouting) r1# show isis interface detail Area Gandalf: Interface: eth2, State: Up, Active, Circuit Id: 0x0 Type: p2p, Level: L2 Level-2 Information: Metric: 10, Active neighbors: 1 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 IP Prefix(es): 10.1.0.1/30 Interface: lo, State: Up, Passive, Circuit Id: 0x0 Type: loopback, Level: L2 Level-2 Information: Metric: 10 IP Prefix(es): 10.0.0.1/32 Interface: eth1, State: Up, Passive, Circuit Id: 0x0 Type: lan, Level: L2, SNPA: 0000.0000.0000 Level-2 Information: Metric: 10 IP Prefix(es): 172.16.0.1/24 After verifying adjacencies on R1, inspect the IS-IS entries in the routing table on R2. R2 should have an IS-IS route for 172.16.0.0/24 (the R1 LAN prefix) but not for 10.0.0.3/32 (the intruder\u2019s loopback prefix) The IS-IS routes on R2 running FRRouting r2# show ip route isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.1, eth2, weight 1, 00:31:18 I 10.1.0.0/30 [115/20] via 10.1.0.1, eth2 inactive, weight 1, 00:31:18 I>* 172.16.0.0/24 [115/20] via 10.1.0.1, eth2, weight 1, 00:31:18 Passive Interfaces or Redistribution An IS-IS passive interface is an interface that IS-IS knows about (it includes the interface subnets in its LSP) but on which it does not send or accept hello messages. IS-IS routers cannot establish an adjacency and exchange LSPs without the hello messages, making a passive interface resilient 5 against simple IS-IS spoofing attacks 6 . Considering the potential caveats described in the previous paragraph, a security-focused engineer might prefer route redistribution of connected subnets into IS-IS. Unfortunately, route redistribution brings its own set of caveats: Route redistribution is performed at a single point and has to be controlled by a combination of a route map and prefix lists. IS-IS passive interfaces are granular \u2013 you can decide whether to advertise a subnet into IS-IS on a per-interface basis. Using passive interfaces makes it easier to figure out what subnets are announced into IS-IS. You can set metrics on passive interfaces, for example, when you want to use redundant routers in a primary/backup scenario. While it\u2019s possible to set metrics with redistribution route maps, that requires a more complex route map and several prefix lists 7 . With the IS-IS circuit type, you can easily control whether a subnet on a passive interface is advertised as an L1 or an L2 route (or both). Implementing a similar functionality with a route map is significantly more complex. Finally, IS-IS advertises subnets configured on passive interfaces as internal IS-IS routes and redistributed subnets as external IS-IS routes. While the difference between the two route types is not as extreme as in OSPF (IS-IS routers advertise both route types in the same LSP), there are subtle differences in route preference 8 that could result in amusing 9 troubleshooting scenarios worthy of a CCIE lab. Takeaway: Prefer passive interfaces over the redistribution of connected subnets. Next: Influence the Designated IS Election Reference Information Lab Wiring Point-to-point links: Origin Device Origin Port Destination Device Destination Port r2 eth1 b eth1 r1 eth2 r2 eth2 LAN links: Origin Device Origin Port Link Name (NET) Description a eth1 passive_1 a -> [r1,x] r1 eth1 passive_1 r1 -> [x,a] x eth1 passive_1 x -> [r1,a] Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description a eth1 172.16.0.10/24 a -> [r1,x] b eth1 172.16.1.11/24 b -> r2 r1 10.0.0.1/32 Loopback eth1 172.16.0.1/24 r1 -> [x,a] eth2 10.1.0.1/30 r1 -> r2 r2 10.0.0.2/32 Loopback eth1 172.16.1.2/24 r2 -> b eth2 10.1.0.2/30 r2 -> r1 x 10.0.0.3/32 Loopback eth1 172.16.0.3/24 x -> [r1,a] And when was the network edge ever trustworthy? \u21a9 Because it\u2019s trivial to figure out cleartext passwords in the days of downloadable Wireshark. \u21a9 I know an ISP that managed to get their POP3 server hijacked, exposing all their customers to a password-stealing man-in-the-middle attack. \u21a9 We could make the intruder running FRRouting advertise the IP address of host A (172.16.0.10/32), but the same setup wouldn\u2019t work on most other network devices due to overlapping IP subnets. \u21a9 While the passive interfaces should provide security against all IS-IS-based attacks, some routers might decide to inspect the messages they should not care about anyway. For example, Juniper routers love to open BGP TCP sessions with total strangers and exchange BGP OPEN messages with them, resulting in thousands of routers being open to BGP-based attacks . \u21a9 Configure an Ethernetype access list blocking IS-IS Ethernetype if you want to be absolutely sure IS-IS processing is blocked on an interface that is part of an IS-IS process. \u21a9 The proof is left as an exercise for the reader. \u21a9 See Section 3.2 of RFC 5302 for more details \u21a9 To the uninvolved audience \u21a9","title":"Passive IS-IS Interfaces"},{"location":"feature/1-passive/#passive-is-is-interfaces","text":"Running an IGP on an untrusted network edge 1 is a bad idea. Unless you take extra security measures like MD5 passwords 2 , an intruder can establish an IGP adjacency with your router and insert any prefix they wish into your network 3 . However, you still have to advertise those edge subnets into your IGP, or the hosts attached to your network won\u2019t be able to communicate. There are two ways to get that done: redistribute connected subnets into your IGP or make the customer-facing interfaces on the edge routers passive ( more details ). That\u2019s what we\u2019ll do in this lab exercise.","title":"Passive IS-IS Interfaces"},{"location":"feature/1-passive/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers). You can do automated lab validation if you use FRRouting on R1 and R2.","title":"Device Requirements"},{"location":"feature/1-passive/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/1-passive Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on R1, R2, and X. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/1-passive/#the-problem","text":"R1 is running IS-IS on all its interfaces and establishes adjacency with the intruder (X): IS-IS neighbors on R1 running FRRouting r1# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA x eth1 2 Up 30 aac1.abd6.15da r2 eth2 2 Up 27 2020.2020.2020 The intruder is advertising its loopback IP address (10.0.0.3/32) but could advertise any IP prefix it wishes 4 . The IP routing table on R1 running FRRouting r1# show ip route Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure L * 10.0.0.1/32 is directly connected, lo, 00:17:00 C>* 10.0.0.1/32 is directly connected, lo, 00:17:00 I>* 10.0.0.2/32 [115/20] via 10.1.0.2, eth2, weight 1, 00:16:57 I>* 10.0.0.3/32 [115/20] via 172.16.0.3, eth1, weight 1, 00:16:50 I 10.1.0.0/30 [115/20] via 10.1.0.2, eth2 inactive, weight 1, 00:16:57 C>* 10.1.0.0/30 is directly connected, eth2, 00:17:00 L>* 10.1.0.1/32 is directly connected, eth2, 00:17:00 I 172.16.0.0/24 [115/20] via 172.16.0.3, eth1 inactive, weight 1, 00:16:50 C>* 172.16.0.0/24 is directly connected, eth1, 00:17:00 L>* 172.16.0.1/32 is directly connected, eth1, 00:17:00 I>* 172.16.1.0/24 [115/20] via 10.1.0.2, eth2, weight 1, 00:16:57","title":"The Problem"},{"location":"feature/1-passive/#configuration-tasks","text":"Using an interface command similar to isis passive , configure the LAN interface on R1 as a passive IS-IS interface. For consistency reasons, you should do the same on R2. Tip Some devices configure the interface IGP state within the interface configuration; others do it within the IGP configuration.","title":"Configuration Tasks"},{"location":"feature/1-passive/#validation","text":"You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on the external routers. This is the printout you should get after completing the lab exercise: You could also do manual validation on R1 and R2: Inspect IS-IS adjacencies on R1 with a command similar to show isis neighbors or show isis adjacency . Your router should have an adjacency with R2 but not with X. IS-IS neighbors (FRRouting) r1# show isis neighbor Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth2 2 Up 27 2020.2020.2020 On some devices, you can inspect the details of the IS-IS interface state with a command similar to show isis interface detail . When executed on R1 running FRRouting, that command shows the R1-R2 interface as Active and the LAN and the loopback interfaces as Passive . IS-IS interface details (FRRouting) r1# show isis interface detail Area Gandalf: Interface: eth2, State: Up, Active, Circuit Id: 0x0 Type: p2p, Level: L2 Level-2 Information: Metric: 10, Active neighbors: 1 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 IP Prefix(es): 10.1.0.1/30 Interface: lo, State: Up, Passive, Circuit Id: 0x0 Type: loopback, Level: L2 Level-2 Information: Metric: 10 IP Prefix(es): 10.0.0.1/32 Interface: eth1, State: Up, Passive, Circuit Id: 0x0 Type: lan, Level: L2, SNPA: 0000.0000.0000 Level-2 Information: Metric: 10 IP Prefix(es): 172.16.0.1/24 After verifying adjacencies on R1, inspect the IS-IS entries in the routing table on R2. R2 should have an IS-IS route for 172.16.0.0/24 (the R1 LAN prefix) but not for 10.0.0.3/32 (the intruder\u2019s loopback prefix) The IS-IS routes on R2 running FRRouting r2# show ip route isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.1, eth2, weight 1, 00:31:18 I 10.1.0.0/30 [115/20] via 10.1.0.1, eth2 inactive, weight 1, 00:31:18 I>* 172.16.0.0/24 [115/20] via 10.1.0.1, eth2, weight 1, 00:31:18","title":"Validation"},{"location":"feature/1-passive/#bg","text":"An IS-IS passive interface is an interface that IS-IS knows about (it includes the interface subnets in its LSP) but on which it does not send or accept hello messages. IS-IS routers cannot establish an adjacency and exchange LSPs without the hello messages, making a passive interface resilient 5 against simple IS-IS spoofing attacks 6 . Considering the potential caveats described in the previous paragraph, a security-focused engineer might prefer route redistribution of connected subnets into IS-IS. Unfortunately, route redistribution brings its own set of caveats: Route redistribution is performed at a single point and has to be controlled by a combination of a route map and prefix lists. IS-IS passive interfaces are granular \u2013 you can decide whether to advertise a subnet into IS-IS on a per-interface basis. Using passive interfaces makes it easier to figure out what subnets are announced into IS-IS. You can set metrics on passive interfaces, for example, when you want to use redundant routers in a primary/backup scenario. While it\u2019s possible to set metrics with redistribution route maps, that requires a more complex route map and several prefix lists 7 . With the IS-IS circuit type, you can easily control whether a subnet on a passive interface is advertised as an L1 or an L2 route (or both). Implementing a similar functionality with a route map is significantly more complex. Finally, IS-IS advertises subnets configured on passive interfaces as internal IS-IS routes and redistributed subnets as external IS-IS routes. While the difference between the two route types is not as extreme as in OSPF (IS-IS routers advertise both route types in the same LSP), there are subtle differences in route preference 8 that could result in amusing 9 troubleshooting scenarios worthy of a CCIE lab. Takeaway: Prefer passive interfaces over the redistribution of connected subnets. Next: Influence the Designated IS Election","title":"Passive Interfaces or Redistribution"},{"location":"feature/1-passive/#reference-information","text":"","title":"Reference Information"},{"location":"feature/1-passive/#lab-wiring","text":"Point-to-point links: Origin Device Origin Port Destination Device Destination Port r2 eth1 b eth1 r1 eth2 r2 eth2 LAN links: Origin Device Origin Port Link Name (NET) Description a eth1 passive_1 a -> [r1,x] r1 eth1 passive_1 r1 -> [x,a] x eth1 passive_1 x -> [r1,a] Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting.","title":"Lab Wiring"},{"location":"feature/1-passive/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description a eth1 172.16.0.10/24 a -> [r1,x] b eth1 172.16.1.11/24 b -> r2 r1 10.0.0.1/32 Loopback eth1 172.16.0.1/24 r1 -> [x,a] eth2 10.1.0.1/30 r1 -> r2 r2 10.0.0.2/32 Loopback eth1 172.16.1.2/24 r2 -> b eth2 10.1.0.2/30 r2 -> r1 x 10.0.0.3/32 Loopback eth1 172.16.0.3/24 x -> [r1,a] And when was the network edge ever trustworthy? \u21a9 Because it\u2019s trivial to figure out cleartext passwords in the days of downloadable Wireshark. \u21a9 I know an ISP that managed to get their POP3 server hijacked, exposing all their customers to a password-stealing man-in-the-middle attack. \u21a9 We could make the intruder running FRRouting advertise the IP address of host A (172.16.0.10/32), but the same setup wouldn\u2019t work on most other network devices due to overlapping IP subnets. \u21a9 While the passive interfaces should provide security against all IS-IS-based attacks, some routers might decide to inspect the messages they should not care about anyway. For example, Juniper routers love to open BGP TCP sessions with total strangers and exchange BGP OPEN messages with them, resulting in thousands of routers being open to BGP-based attacks . \u21a9 Configure an Ethernetype access list blocking IS-IS Ethernetype if you want to be absolutely sure IS-IS processing is blocked on an interface that is part of an IS-IS process. \u21a9 The proof is left as an exercise for the reader. \u21a9 See Section 3.2 of RFC 5302 for more details \u21a9 To the uninvolved audience \u21a9","title":"Lab Addressing"},{"location":"feature/2-dis/","text":"Influence the Designated IS Election In the IS-IS on Point-to-Point Links lab exercise, we discussed why it\u2019s better to configure Ethernet inter-router links as point-to-point links instead of leaving them configured as multi-access links. However, even though a large majority of core Ethernet links connect two routers, you might encounter situations where you have to connect routers to a multi-access network, for example, when building a private WAN network on top of Carrier Ethernet E-LAN service. Like OSPF, IS-IS routers 1 connected to a shared segment elect a Designated Intermediate System (DIS). Unlike OSPF, the DIS is not as crucial to the proper operation of the routing protocol as the OSPF Designated Router is. IS-IS, therefore, does not have a concept of a Backup DIS. DIS failure can still temporarily slow down network convergence ( more details ); it makes sense to ensure that the most stable router (for example, the hub router of a Carrier Ethernet network) becomes DIS. That\u2019s almost impossible to achieve without additional device configuration; when all routers connected to a segment have the same priority, the one with the highest MAC address becomes DIS, and that\u2019s often the last router you bought 2 , not the hub router. Therefore, you should always increase the DIS election priority on hub routers and decrease it on routers you don\u2019t want to use as DIS (spoke routers). You\u2019ll practice both in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers). Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/2-dis Execute netlab up . You\u2019ll get a lab with IPv4 addresses and IS-IS routing configured on all lab routers. Log into lab routers with netlab connect and verify their configuration. The Problem Docker or libvirt/KVM assigns random MAC addresses to containers or virtual machines. Predicting which router on your Carrier Ethernet will become DIS is a Mission Impossible. You can usually check the DIS status of your router with a command similar to show isis interface name . This is what you\u2019d get on a router running FRRouting when it\u2019s not a DIS: The IS-IS interface details displayed on the Hub router running FRRouting hub# show isis interface eth1 Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0xbb Type: lan, Level: L2, SNPA: aac1.ab23.d6e0 Level-2 Information: Metric: 10, Active neighbors: 2 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 LAN Priority: 64, is not DIS IP Prefix(es): 172.16.0.1/24 You can often display the DIS status of IS-IS neighbors with a command similar to show isis neighbor detail . This is what it displays on FRRouting when the first spoke router becomes DIS 3 : The details of IS-IS neighbors displayed on the Hub router running FRRouting hub# show isis nei detail Area Gandalf: s1 Interface: eth1, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 11s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.abed.313f, LAN id: s1.b7 LAN Priority: 64, is DIS, DIS flaps: 1, Last: 3s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.2 s2 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 11s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.ab7d.6c12, LAN id: s1.b7 LAN Priority: 64, is not DIS, DIS flaps: 1, Last: 3s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.3 Configuration Tasks Using an interface command similar to isis priority , increase the hub router\u2019s DIS election priority to 127 (the highest value; the default value is 64) and lower the value on the spoke routers to zero (the lowest possible value). Tip Some devices configure the interface IGP parameters within the interface configuration; others do it within the IGP configuration. Validation Log into your devices and check the state of their IS-IS interfaces and IS-IS neighbors. The hub router should consistently become the DIS; these are the printouts you should get on the Hub router: The IS-IS interface details (Hub router running FRRouting) hub# show isis interface eth1 Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0xbb Type: lan, Level: L2, SNPA: aac1.ab23.d6e0 Level-2 Information: Metric: 10, Active neighbors: 2 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 LAN Priority: 127, is DIS IP Prefix(es): 172.16.0.1/24 The IS-IS neighbor details (Hub router running FRRouting) hub# show isis neighbor detail Area Gandalf: s1 Interface: eth1, Level: 2, State: Up, Expires in 28s Adjacency flaps: 1, Last: 1h26m3s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.abed.313f, LAN id: 0000.0000.0001.bb LAN Priority: 0, is not DIS, DIS flaps: 4, Last: 1m33s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.2 s2 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 1h26m3s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.ab7d.6c12, LAN id: 0000.0000.0001.bb LAN Priority: 0, is not DIS, DIS flaps: 1, Last: 1h25m55s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.3 The Role of a Designated Intermediate System The Designated Intermediate System on a LAN segment has two roles: It advertises the LAN pseudonode . The LAN pseudonode has zero-cost links to all other nodes attached to the LAN , and all LAN nodes advertise a link to the LAN pseudonode It helps other routers detect transmission errors. DIS sends periodic Complete Sequence Number PDU (CSNP) packets. These packets contain the table-of-contents of the DIS LSPDB, and other routers attached to the LAN can use them to discover LSPDB discrepancies. A router that discovers it has an extra bit of information floods it, and a router that\u2019s missing some information requests it with the Partial Sequence Number PDU (PSNP) packet. If a DIS fails, its pseudonode LSP remains in the LSPDB, and the connectivity through the pseudonode is intact until another DIS is elected. At that point, the new DIS advertises a new LAN pseudonode, and all remaining routers change their LSPs to link to it. A change in DIS thus causes no connectivity loss 4 , but it does cause a flurry of LSP changes. Error recovery is more critical. In a perfect world with no transmission errors, a DIS failure doesn\u2019t matter. However, if the LAN segment experiences packet drops, and there\u2019s no DIS to send periodic CSNP packets, the dropped packets won\u2019t be retransmitted until the new DIS is elected and sends the first CSNP packet. DIS failure thus has the potential to impact network convergence. Takeaway: Making DIS stable is not a bad idea, especially on large-scale segments with many routers and a higher probability of packet loss (for example, large Carrier Ethernet deployments). Next: Protect IS-IS Routing Data with MD5 Authentication Reference Information Lab Wiring Origin Device Origin Port Link Name (NET) Description hub eth1 dis_1 hub -> [s1,s2] s1 eth1 dis_1 s1 -> [s2,hub] s2 eth1 dis_1 s2 -> [s1,hub] Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description hub 10.0.0.1/32 Loopback eth1 172.16.0.1/24 hub -> [s1,s2] s1 10.0.0.2/32 Loopback eth1 172.16.0.2/24 s1 -> [s2,hub] s2 10.0.0.3/32 Loopback eth1 172.16.0.3/24 s2 -> [s1,hub] Called Intermediate Systems in IS-IS standards \u21a9 One would expect MAC addresses to increase over time within the same vendor ID (OUI, the top 24 bits of the MAC address) \u21a9 If you don\u2019t like the results, restart the lab with netlab restart and hope for a better set of random MAC addresses. \u21a9 The details are left as an exercise for the reader. \u21a9","title":"Influence the Designated IS Election"},{"location":"feature/2-dis/#influence-the-designated-is-election","text":"In the IS-IS on Point-to-Point Links lab exercise, we discussed why it\u2019s better to configure Ethernet inter-router links as point-to-point links instead of leaving them configured as multi-access links. However, even though a large majority of core Ethernet links connect two routers, you might encounter situations where you have to connect routers to a multi-access network, for example, when building a private WAN network on top of Carrier Ethernet E-LAN service. Like OSPF, IS-IS routers 1 connected to a shared segment elect a Designated Intermediate System (DIS). Unlike OSPF, the DIS is not as crucial to the proper operation of the routing protocol as the OSPF Designated Router is. IS-IS, therefore, does not have a concept of a Backup DIS. DIS failure can still temporarily slow down network convergence ( more details ); it makes sense to ensure that the most stable router (for example, the hub router of a Carrier Ethernet network) becomes DIS. That\u2019s almost impossible to achieve without additional device configuration; when all routers connected to a segment have the same priority, the one with the highest MAC address becomes DIS, and that\u2019s often the last router you bought 2 , not the hub router. Therefore, you should always increase the DIS election priority on hub routers and decrease it on routers you don\u2019t want to use as DIS (spoke routers). You\u2019ll practice both in this lab exercise.","title":"Influence the Designated IS Election"},{"location":"feature/2-dis/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers).","title":"Device Requirements"},{"location":"feature/2-dis/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/2-dis Execute netlab up . You\u2019ll get a lab with IPv4 addresses and IS-IS routing configured on all lab routers. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/2-dis/#the-problem","text":"Docker or libvirt/KVM assigns random MAC addresses to containers or virtual machines. Predicting which router on your Carrier Ethernet will become DIS is a Mission Impossible. You can usually check the DIS status of your router with a command similar to show isis interface name . This is what you\u2019d get on a router running FRRouting when it\u2019s not a DIS: The IS-IS interface details displayed on the Hub router running FRRouting hub# show isis interface eth1 Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0xbb Type: lan, Level: L2, SNPA: aac1.ab23.d6e0 Level-2 Information: Metric: 10, Active neighbors: 2 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 LAN Priority: 64, is not DIS IP Prefix(es): 172.16.0.1/24 You can often display the DIS status of IS-IS neighbors with a command similar to show isis neighbor detail . This is what it displays on FRRouting when the first spoke router becomes DIS 3 : The details of IS-IS neighbors displayed on the Hub router running FRRouting hub# show isis nei detail Area Gandalf: s1 Interface: eth1, Level: 2, State: Up, Expires in 27s Adjacency flaps: 1, Last: 11s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.abed.313f, LAN id: s1.b7 LAN Priority: 64, is DIS, DIS flaps: 1, Last: 3s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.2 s2 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 11s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.ab7d.6c12, LAN id: s1.b7 LAN Priority: 64, is not DIS, DIS flaps: 1, Last: 3s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.3","title":"The Problem"},{"location":"feature/2-dis/#configuration-tasks","text":"Using an interface command similar to isis priority , increase the hub router\u2019s DIS election priority to 127 (the highest value; the default value is 64) and lower the value on the spoke routers to zero (the lowest possible value). Tip Some devices configure the interface IGP parameters within the interface configuration; others do it within the IGP configuration.","title":"Configuration Tasks"},{"location":"feature/2-dis/#validation","text":"Log into your devices and check the state of their IS-IS interfaces and IS-IS neighbors. The hub router should consistently become the DIS; these are the printouts you should get on the Hub router: The IS-IS interface details (Hub router running FRRouting) hub# show isis interface eth1 Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0xbb Type: lan, Level: L2, SNPA: aac1.ab23.d6e0 Level-2 Information: Metric: 10, Active neighbors: 2 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 LAN Priority: 127, is DIS IP Prefix(es): 172.16.0.1/24 The IS-IS neighbor details (Hub router running FRRouting) hub# show isis neighbor detail Area Gandalf: s1 Interface: eth1, Level: 2, State: Up, Expires in 28s Adjacency flaps: 1, Last: 1h26m3s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.abed.313f, LAN id: 0000.0000.0001.bb LAN Priority: 0, is not DIS, DIS flaps: 4, Last: 1m33s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.2 s2 Interface: eth1, Level: 2, State: Up, Expires in 30s Adjacency flaps: 1, Last: 1h26m3s ago Circuit type: L2, Speaks: IPv4 SNPA: aac1.ab7d.6c12, LAN id: 0000.0000.0001.bb LAN Priority: 0, is not DIS, DIS flaps: 1, Last: 1h25m55s ago Area Address(es): 49.0001 IPv4 Address(es): 172.16.0.3","title":"Validation"},{"location":"feature/2-dis/#bg","text":"The Designated Intermediate System on a LAN segment has two roles: It advertises the LAN pseudonode . The LAN pseudonode has zero-cost links to all other nodes attached to the LAN , and all LAN nodes advertise a link to the LAN pseudonode It helps other routers detect transmission errors. DIS sends periodic Complete Sequence Number PDU (CSNP) packets. These packets contain the table-of-contents of the DIS LSPDB, and other routers attached to the LAN can use them to discover LSPDB discrepancies. A router that discovers it has an extra bit of information floods it, and a router that\u2019s missing some information requests it with the Partial Sequence Number PDU (PSNP) packet. If a DIS fails, its pseudonode LSP remains in the LSPDB, and the connectivity through the pseudonode is intact until another DIS is elected. At that point, the new DIS advertises a new LAN pseudonode, and all remaining routers change their LSPs to link to it. A change in DIS thus causes no connectivity loss 4 , but it does cause a flurry of LSP changes. Error recovery is more critical. In a perfect world with no transmission errors, a DIS failure doesn\u2019t matter. However, if the LAN segment experiences packet drops, and there\u2019s no DIS to send periodic CSNP packets, the dropped packets won\u2019t be retransmitted until the new DIS is elected and sends the first CSNP packet. DIS failure thus has the potential to impact network convergence. Takeaway: Making DIS stable is not a bad idea, especially on large-scale segments with many routers and a higher probability of packet loss (for example, large Carrier Ethernet deployments). Next: Protect IS-IS Routing Data with MD5 Authentication","title":"The Role of a Designated Intermediate System"},{"location":"feature/2-dis/#reference-information","text":"","title":"Reference Information"},{"location":"feature/2-dis/#lab-wiring","text":"Origin Device Origin Port Link Name (NET) Description hub eth1 dis_1 hub -> [s1,s2] s1 eth1 dis_1 s1 -> [s2,hub] s2 eth1 dis_1 s2 -> [s1,hub] Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting.","title":"Lab Wiring"},{"location":"feature/2-dis/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description hub 10.0.0.1/32 Loopback eth1 172.16.0.1/24 hub -> [s1,s2] s1 10.0.0.2/32 Loopback eth1 172.16.0.2/24 s1 -> [s2,hub] s2 10.0.0.3/32 Loopback eth1 172.16.0.3/24 s2 -> [s1,hub] Called Intermediate Systems in IS-IS standards \u21a9 One would expect MAC addresses to increase over time within the same vendor ID (OUI, the top 24 bits of the MAC address) \u21a9 If you don\u2019t like the results, restart the lab with netlab restart and hope for a better set of random MAC addresses. \u21a9 The details are left as an exercise for the reader. \u21a9","title":"Lab Addressing"},{"location":"feature/3-md5/","text":"Protect IS-IS Routing Data with MD5 Authentication Like OSPF and BGP, IS-IS contains a simple mechanism to authenticate routing traffic \u2013 IS-IS packets can include a cleartext password or an MD5 - or SHA hash 1 . Unlike OSPF, IS-IS can authenticate: The packets exchanged between routers (hello packets) The contents of Link State PDUs flooded across an area or a domain. Authenticating IS-IS traffic is not as critical as authenticating EBGP traffic. It\u2019s almost impossible to inject IS-IS packets into a LAN segment the intruder is not connected to, and you\u2019re not supposed to run an IGP on an untrusted network anyway. Most IS-IS implementations have interface passwords (authenticating the IS-IS hello packets), area passwords (authenticating level-1 LSPs), and domain passwords (authenticating level-2 LSPs). You\u2019ll practice configuring all three in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module for R1 (default: FRRouting virtual machines or containers). If you want preconfigured passwords for the other three routers (R2, R3, and R4), use FRRouting or Arista EOS. You can use any other device for these routers, but you\u2019ll have to configure the passwords yourself. Automated lab validation requires FRRouting on R2, R3, and R4. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/3-md5 Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration. Initial Configuration R1, R2, and R3 are in IS-IS area 49.0001. R4 is in IS-IS area 49.0002. R1 (your router) and R2 are level-1-2 routers. R3 is a level-1 router, and R4 is a level-2 router. The link between R1 and R2 is a LAN (multi-access) link, the links R1-R3 and R1-R4 are point-to-point links. The initial configuration should result in these IS-IS adjacencies: Link Adjacency R1-R2 level-1 + level-2 R1-R3 level-1 R1-R4 level-2 However, R2, R3, and R4 use IS-IS MD5 authentication with these keys: Password type Password Interface ForgetMeNot Area (level-1) MyAreaOnly Domain (level-2) CloseFriends The Problem Some IS-IS implementations exhibit bizarre behavior when adjacent devices have an authentication mismatch. The device not using IS-IS authentication can claim full adjacency with its neighbors. In contrast, the adjacent device claims the adjacency is in the INIT state or shows no IS-IS neighbors on the interface. For example, R1 running FRRouting claims it has three IS-IS neighbors and full adjacency with two of them. IS-IS neighbors on R1 running FRRouting $ netlab connect r1 --show isis neighbor Connecting to container clab-md5-r1, executing vtysh -c \"show isis neighbor\" Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth1 1 Initializing 28 aac1.ab76.78a5 r2 eth1 2 Initializing 28 aac1.ab76.78a5 r3 eth2 1 Up 28 2020.2020.2020 r4 eth3 2 Up 28 2020.2020.2020 At the same time, R2 through R4 claim they have no IS-IS neighbors. Arista EOS is a bit more consistent. R1 running Arista EOS claims to have three IS-IS neighbors, but the adjacency is stuck in the INIT phase. IS-IS neighbors on R1 running Arista EOS r1# show isis neighbor Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default 0000.0000.0002 L1 Ethernet1 52:dc:ca:fe:2:1 INIT 25 r1.97 Gandalf default 0000.0000.0002 L2 Ethernet1 52:dc:ca:fe:2:1 INIT 25 r1.97 Gandalf default 0000.0000.0003 L1 Ethernet2 P2P INIT 26 95 Gandalf default 0000.0000.0004 L2 Ethernet3 P2P INIT 23 98 Anyway, we know what\u2019s wrong: R2, R3, and R4 use MD5 authentication and ignore unauthenticated packets sent by R1 2 . Let\u2019s fix it. Configuration Tasks Configure the following IS-IS passwords using authentication or password interface- or router configuration commands 3 : Password type Password Interface ForgetMeNot Area MyAreaOnly Domain RemoteFriend Validation You can use the netlab validate command if you run FRRouting on R2, R3, and R4. The validation process checks the IS-IS adjacency using IS-IS hostnames. The validation will succeed on R2 and R3 if you configured the interface password (otherwise, the IS-IS adjacency is not established) and the area password (otherwise, R2 and R3 see adjacent system ID 0000.0000.0001 but do not know it is R1). You must configure the domain password for the validation to succeed on R4. For example, this is the printout you would get after configuring the interface- and area passwords: You could also do manual validation: After configuring the interface passwords, all IS-IS adjacencies should be in UP state on all routers. IS-IS neighbors on R1 running Arista EOS r1#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r2 L1 Ethernet1 52:dc:ca:fe:2:1 UP 8 r2.a4 Gandalf default r2 L2 Ethernet1 52:dc:ca:fe:2:1 UP 6 r2.a4 Gandalf default r3 L1 Ethernet2 P2P UP 22 A6 Gandalf default r4 L2 Ethernet3 P2P UP 28 A8 You will not see R1 level-1 LSPs on other routers until you configure the area (level-1) password on R1. For example, this is the level-1 database on R2 when R1 has no area password. The R1 LSP is missing, and R3 is unreachable. IS-IS level-1 database on R2 running Arista EOS r2#show isis database level-1 Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 3 61902 905 113 L2 0000.0000.0002.00-00 <> U r2.a4-00 1 13264 905 70 L2 0000.0000.0002.a4-00 <> U r3.00-00 3 58414 907 113 L1 0000.0000.0003.00-00 <> After configuring the area (level-1) password on R1, R2 and R3 should display R1\u2019s LSPs in their level-1 database: IS-IS level-1 database on R2 running Arista EOS contains authenticated R1 LSP r2#show isis database level-1 Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r1.00-00 9 61720 1195 150 L2 0000.0000.0001.00-00 <DefaultAtt> r2.00-00 3 61902 842 113 L2 0000.0000.0002.00-00 <> r2.a4-00 1 13264 842 70 L2 0000.0000.0002.a4-00 <> r3.00-00 3 58414 844 113 L1 0000.0000.0003.00-00 <> Similarly, R2 and R4 won\u2019t display R1 level-2 LSP until you configure the domain (level-2) password: IS-IS level-2 database on R4 (running Arista EOS) does not contain the R1 LSP r4#show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags U r2.00-00 4 53488 1052 151 L2 0000.0000.0002.00-00 <> U r2.a4-00 1 20572 711 70 L2 0000.0000.0002.a4-00 <> r4.00-00 3 36459 711 113 L2 0000.0000.0004.00-00 <> After configuring the domain (level-2) password on R1, R2 and R4 should display R1\u2019s LSPs in their level-2 database: IS-IS level-2 database on R4 running Arista EOS contains authenticated R1 LSP r4#show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r1.00-00 10 16371 1196 170 L2 0000.0000.0001.00-00 <> r2.00-00 4 53488 983 151 L2 0000.0000.0002.00-00 <> r2.a4-00 1 20572 642 70 L2 0000.0000.0002.a4-00 <> r4.00-00 3 36459 642 113 L2 0000.0000.0004.00-00 <> Next : Hide Transit Subnets in IS-IS Networks Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r1 eth2 r3 eth1 r1 eth3 r4 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.5/30 r1 -> r3 eth3 10.1.0.9/30 r1 -> r4 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r1 r4 10.0.0.4/32 Loopback eth1 10.1.0.10/30 r4 -> r1 Please note that the IS-IS packets are not encrypted. Anyone can see their contents, but the Hashed Message Authentication Code (HMAC) makes it really hard for an intruder to impersonate an IS-IS router using MD5 or SHA authentication (but not impossible as we know it\u2019s possible to break MD5). \u21a9 Figuring that out from the show printouts, particularly when you don\u2019t have access to the remote router, is an interesting hair-pulling exercise. \u21a9 Some implementations (for example, Arista EOS) call the area password level-1 and the domain password level-2 . \u21a9","title":"Protect IS-IS Routing Data with MD5 Authentication"},{"location":"feature/3-md5/#protect-is-is-routing-data-with-md5-authentication","text":"Like OSPF and BGP, IS-IS contains a simple mechanism to authenticate routing traffic \u2013 IS-IS packets can include a cleartext password or an MD5 - or SHA hash 1 . Unlike OSPF, IS-IS can authenticate: The packets exchanged between routers (hello packets) The contents of Link State PDUs flooded across an area or a domain. Authenticating IS-IS traffic is not as critical as authenticating EBGP traffic. It\u2019s almost impossible to inject IS-IS packets into a LAN segment the intruder is not connected to, and you\u2019re not supposed to run an IGP on an untrusted network anyway. Most IS-IS implementations have interface passwords (authenticating the IS-IS hello packets), area passwords (authenticating level-1 LSPs), and domain passwords (authenticating level-2 LSPs). You\u2019ll practice configuring all three in this lab exercise.","title":"Protect IS-IS Routing Data with MD5 Authentication"},{"location":"feature/3-md5/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for R1 (default: FRRouting virtual machines or containers). If you want preconfigured passwords for the other three routers (R2, R3, and R4), use FRRouting or Arista EOS. You can use any other device for these routers, but you\u2019ll have to configure the passwords yourself. Automated lab validation requires FRRouting on R2, R3, and R4.","title":"Device Requirements"},{"location":"feature/3-md5/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/3-md5 Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/3-md5/#initial-configuration","text":"R1, R2, and R3 are in IS-IS area 49.0001. R4 is in IS-IS area 49.0002. R1 (your router) and R2 are level-1-2 routers. R3 is a level-1 router, and R4 is a level-2 router. The link between R1 and R2 is a LAN (multi-access) link, the links R1-R3 and R1-R4 are point-to-point links. The initial configuration should result in these IS-IS adjacencies: Link Adjacency R1-R2 level-1 + level-2 R1-R3 level-1 R1-R4 level-2 However, R2, R3, and R4 use IS-IS MD5 authentication with these keys: Password type Password Interface ForgetMeNot Area (level-1) MyAreaOnly Domain (level-2) CloseFriends","title":"Initial Configuration"},{"location":"feature/3-md5/#the-problem","text":"Some IS-IS implementations exhibit bizarre behavior when adjacent devices have an authentication mismatch. The device not using IS-IS authentication can claim full adjacency with its neighbors. In contrast, the adjacent device claims the adjacency is in the INIT state or shows no IS-IS neighbors on the interface. For example, R1 running FRRouting claims it has three IS-IS neighbors and full adjacency with two of them. IS-IS neighbors on R1 running FRRouting $ netlab connect r1 --show isis neighbor Connecting to container clab-md5-r1, executing vtysh -c \"show isis neighbor\" Area Gandalf: System Id Interface L State Holdtime SNPA r2 eth1 1 Initializing 28 aac1.ab76.78a5 r2 eth1 2 Initializing 28 aac1.ab76.78a5 r3 eth2 1 Up 28 2020.2020.2020 r4 eth3 2 Up 28 2020.2020.2020 At the same time, R2 through R4 claim they have no IS-IS neighbors. Arista EOS is a bit more consistent. R1 running Arista EOS claims to have three IS-IS neighbors, but the adjacency is stuck in the INIT phase. IS-IS neighbors on R1 running Arista EOS r1# show isis neighbor Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default 0000.0000.0002 L1 Ethernet1 52:dc:ca:fe:2:1 INIT 25 r1.97 Gandalf default 0000.0000.0002 L2 Ethernet1 52:dc:ca:fe:2:1 INIT 25 r1.97 Gandalf default 0000.0000.0003 L1 Ethernet2 P2P INIT 26 95 Gandalf default 0000.0000.0004 L2 Ethernet3 P2P INIT 23 98 Anyway, we know what\u2019s wrong: R2, R3, and R4 use MD5 authentication and ignore unauthenticated packets sent by R1 2 . Let\u2019s fix it.","title":"The Problem"},{"location":"feature/3-md5/#configuration-tasks","text":"Configure the following IS-IS passwords using authentication or password interface- or router configuration commands 3 : Password type Password Interface ForgetMeNot Area MyAreaOnly Domain RemoteFriend","title":"Configuration Tasks"},{"location":"feature/3-md5/#validation","text":"You can use the netlab validate command if you run FRRouting on R2, R3, and R4. The validation process checks the IS-IS adjacency using IS-IS hostnames. The validation will succeed on R2 and R3 if you configured the interface password (otherwise, the IS-IS adjacency is not established) and the area password (otherwise, R2 and R3 see adjacent system ID 0000.0000.0001 but do not know it is R1). You must configure the domain password for the validation to succeed on R4. For example, this is the printout you would get after configuring the interface- and area passwords: You could also do manual validation: After configuring the interface passwords, all IS-IS adjacencies should be in UP state on all routers. IS-IS neighbors on R1 running Arista EOS r1#show isis neighbors Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r2 L1 Ethernet1 52:dc:ca:fe:2:1 UP 8 r2.a4 Gandalf default r2 L2 Ethernet1 52:dc:ca:fe:2:1 UP 6 r2.a4 Gandalf default r3 L1 Ethernet2 P2P UP 22 A6 Gandalf default r4 L2 Ethernet3 P2P UP 28 A8 You will not see R1 level-1 LSPs on other routers until you configure the area (level-1) password on R1. For example, this is the level-1 database on R2 when R1 has no area password. The R1 LSP is missing, and R3 is unreachable. IS-IS level-1 database on R2 running Arista EOS r2#show isis database level-1 Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r2.00-00 3 61902 905 113 L2 0000.0000.0002.00-00 <> U r2.a4-00 1 13264 905 70 L2 0000.0000.0002.a4-00 <> U r3.00-00 3 58414 907 113 L1 0000.0000.0003.00-00 <> After configuring the area (level-1) password on R1, R2 and R3 should display R1\u2019s LSPs in their level-1 database: IS-IS level-1 database on R2 running Arista EOS contains authenticated R1 LSP r2#show isis database level-1 Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 1 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r1.00-00 9 61720 1195 150 L2 0000.0000.0001.00-00 <DefaultAtt> r2.00-00 3 61902 842 113 L2 0000.0000.0002.00-00 <> r2.a4-00 1 13264 842 70 L2 0000.0000.0002.a4-00 <> r3.00-00 3 58414 844 113 L1 0000.0000.0003.00-00 <> Similarly, R2 and R4 won\u2019t display R1 level-2 LSP until you configure the domain (level-2) password: IS-IS level-2 database on R4 (running Arista EOS) does not contain the R1 LSP r4#show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags U r2.00-00 4 53488 1052 151 L2 0000.0000.0002.00-00 <> U r2.a4-00 1 20572 711 70 L2 0000.0000.0002.a4-00 <> r4.00-00 3 36459 711 113 L2 0000.0000.0004.00-00 <> After configuring the domain (level-2) password on R1, R2 and R4 should display R1\u2019s LSPs in their level-2 database: IS-IS level-2 database on R4 running Arista EOS contains authenticated R1 LSP r4#show isis database Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags r1.00-00 10 16371 1196 170 L2 0000.0000.0001.00-00 <> r2.00-00 4 53488 983 151 L2 0000.0000.0002.00-00 <> r2.a4-00 1 20572 642 70 L2 0000.0000.0002.a4-00 <> r4.00-00 3 36459 642 113 L2 0000.0000.0004.00-00 <> Next : Hide Transit Subnets in IS-IS Networks","title":"Validation"},{"location":"feature/3-md5/#reference-information","text":"","title":"Reference Information"},{"location":"feature/3-md5/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 eth1 r2 eth1 r1 eth2 r3 eth1 r1 eth3 r4 eth1 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting.","title":"Lab Wiring"},{"location":"feature/3-md5/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description r1 10.0.0.1/32 Loopback eth1 10.1.0.1/30 r1 -> r2 eth2 10.1.0.5/30 r1 -> r3 eth3 10.1.0.9/30 r1 -> r4 r2 10.0.0.2/32 Loopback eth1 10.1.0.2/30 r2 -> r1 r3 10.0.0.3/32 Loopback eth1 10.1.0.6/30 r3 -> r1 r4 10.0.0.4/32 Loopback eth1 10.1.0.10/30 r4 -> r1 Please note that the IS-IS packets are not encrypted. Anyone can see their contents, but the Hashed Message Authentication Code (HMAC) makes it really hard for an intruder to impersonate an IS-IS router using MD5 or SHA authentication (but not impossible as we know it\u2019s possible to break MD5). \u21a9 Figuring that out from the show printouts, particularly when you don\u2019t have access to the remote router, is an interesting hair-pulling exercise. \u21a9 Some implementations (for example, Arista EOS) call the area password level-1 and the domain password level-2 . \u21a9","title":"Lab Addressing"},{"location":"feature/4-hide-transit/","text":"Hide Transit Subnets in IS-IS Networks Transit subnets (the prefixes configured on inter-router or inter-switch links) could represent a large percentage of the IP routing table in highly meshed networks. Those subnets are usually not used 1 and thus represent pure overhead. Removing them from the IS-IS LSPs would reduce the LSP size and improve the forwarding table convergence time 2 . That\u2019s what you\u2019ll do in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module for the routers in your lab. You can do automated lab validation when using Arista EOS on your routers. Warning The advertise-passive-only functionality did not work correctly on any FRRouting release I tested 3 . After configuring that IS-IS router configuration command, all IS-IS routes disappeared from the IP routing table. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/4-hide-transit Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration. The Problem Most routers in your network are advertising the /30 prefixes configured on inter-router links. The IP routing table on the WAN router contains three IS-IS loopback prefixes (one for each router), one LAN prefix, and two transit prefixes (the third transit prefix is a connected route). The IP routing table on the WAN router running Arista EOS $ netlab connect wan --show ip route isis Connecting to clab-adv_passive-wan using SSH port 22, executing show ip route isis ... I L2 10.0.0.1/32 [115/20] via 10.1.0.9, Ethernet1 I L2 10.0.0.2/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.1.0.0/30 [115/20] via 10.1.0.9, Ethernet1 I L2 10.1.0.4/30 [115/20] via 10.1.0.9, Ethernet1 I L2 172.16.0.0/24 [115/30] via 10.1.0.9, Ethernet1 You can see the same information in the IS-IS LSPs. For example, the ACC1 router advertises its loopback, LAN, and transit prefixes: The IS-IS LSP advertised by ACC1 $ netlab connect -q wan --show isis database acc1.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags acc1.00-00 3 13191 1073 119 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: acc1 Area addresses: 49.0001 Interface address: 10.1.0.1 Interface address: 172.16.0.1 Interface address: 10.0.0.2 IS Neighbor : acc2.00 Metric: 10 IS Neighbor : core.00 Metric: 10 Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 172.16.0.0/24 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0 Configuration Tasks Many IS-IS implementations contain one or two nerd knobs that can be used to suppress the advertising of transit prefixes. For example, you can control which IP prefixes and which interface addresses the Arista EOS devices advertise. Disable the advertising of transit prefixes on all routers in your lab. If available, turn off the advertising of transit interface addresses. Some devices also have the opposite nerd knob that can explicitly suppress the subnet used on the interface. Problem Solved? Not Yet Connect to the WAN router and inspect the IS-IS routes in its IP routing table. You\u2019re done if you see the three loopback prefixes and the LAN prefix . However, if you mindlessly followed the above instructions, you\u2019ll get only the three loopback prefixes: The reduced IP routing table on WAN $ netlab connect -q wan --show ip route isis ... I L2 10.0.0.1/32 [115/20] via 10.1.0.9, Ethernet1 I L2 10.0.0.2/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.9, Ethernet1 Arista EOS allows you to advertise only the prefixes of the passive interfaces , but the LAN segment connected to ACC1 and ACC2 is not (yet) configured as a passive interface. Configure the LAN segment as a passive interface on ACC1 and ACC2. The details are in the Passive IS-IS Interfaces lab exercise. Validation You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run Arista EOS on the WAN router. This is the printout you should get after completing the lab exercise: You could also manually validate your work. Inspect IS-IS routes in the WAN router\u2019s IP routing table; it should contain three loopback (/32) prefixes and a single LAN (/24) prefix but no transit (/30) prefixes. Next: Drain Traffic Before Node Maintenance Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port core Ethernet1 acc1 Ethernet1 core Ethernet2 acc2 Ethernet1 core Ethernet3 wan Ethernet1 acc1 Ethernet2 acc2 Ethernet2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running Arista EOS. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description acc1 10.0.0.2/32 Loopback Ethernet1 10.1.0.1/30 acc1 -> core Ethernet2 172.16.0.1/24 acc1 -> acc2 acc2 10.0.0.3/32 Loopback Ethernet1 10.1.0.5/30 acc2 -> core Ethernet2 172.16.0.2/24 acc2 -> acc1 core 10.0.0.1/32 Loopback Ethernet1 10.1.0.2/30 core -> acc1 Ethernet2 10.1.0.6/30 core -> acc2 Ethernet3 10.1.0.9/30 core -> wan wan 10.0.0.4/32 Loopback Ethernet1 10.1.0.10/30 wan -> core If the IGP is running, you can access a device through its loopback interfaces, and if the IGP is broken, you won\u2019t get any reachability information anyway. \u21a9 The forwarding table convergence time on modern devices is usually limited by the bandwidth between the CPU and the switching ASICs. Reducing the size of the IP routing table directly impacts the time it takes to update the forwarding table. \u21a9 The issue reporting this bug was closed after nobody touched it for over 6 months. \u21a9","title":"Hide Transit Subnets in IS-IS Networks"},{"location":"feature/4-hide-transit/#hide-transit-subnets-in-is-is-networks","text":"Transit subnets (the prefixes configured on inter-router or inter-switch links) could represent a large percentage of the IP routing table in highly meshed networks. Those subnets are usually not used 1 and thus represent pure overhead. Removing them from the IS-IS LSPs would reduce the LSP size and improve the forwarding table convergence time 2 . That\u2019s what you\u2019ll do in this lab exercise.","title":"Hide Transit Subnets in IS-IS Networks"},{"location":"feature/4-hide-transit/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for the routers in your lab. You can do automated lab validation when using Arista EOS on your routers. Warning The advertise-passive-only functionality did not work correctly on any FRRouting release I tested 3 . After configuring that IS-IS router configuration command, all IS-IS routes disappeared from the IP routing table.","title":"Device Requirements"},{"location":"feature/4-hide-transit/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/4-hide-transit Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/4-hide-transit/#the-problem","text":"Most routers in your network are advertising the /30 prefixes configured on inter-router links. The IP routing table on the WAN router contains three IS-IS loopback prefixes (one for each router), one LAN prefix, and two transit prefixes (the third transit prefix is a connected route). The IP routing table on the WAN router running Arista EOS $ netlab connect wan --show ip route isis Connecting to clab-adv_passive-wan using SSH port 22, executing show ip route isis ... I L2 10.0.0.1/32 [115/20] via 10.1.0.9, Ethernet1 I L2 10.0.0.2/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.1.0.0/30 [115/20] via 10.1.0.9, Ethernet1 I L2 10.1.0.4/30 [115/20] via 10.1.0.9, Ethernet1 I L2 172.16.0.0/24 [115/30] via 10.1.0.9, Ethernet1 You can see the same information in the IS-IS LSPs. For example, the ACC1 router advertises its loopback, LAN, and transit prefixes: The IS-IS LSP advertised by ACC1 $ netlab connect -q wan --show isis database acc1.00-00 detail Legend: H - hostname conflict U - node unreachable IS-IS Instance: Gandalf VRF: default IS-IS Level 2 Link State Database LSPID Seq Num Cksum Life Length IS Received LSPID Flags acc1.00-00 3 13191 1073 119 L2 0000.0000.0002.00-00 <> Remaining lifetime received: 1199 s Modified to: 1200 s NLPID: 0xCC(IPv4) Hostname: acc1 Area addresses: 49.0001 Interface address: 10.1.0.1 Interface address: 172.16.0.1 Interface address: 10.0.0.2 IS Neighbor : acc2.00 Metric: 10 IS Neighbor : core.00 Metric: 10 Reachability : 10.1.0.0/30 Metric: 10 Type: 1 Up Reachability : 172.16.0.0/24 Metric: 10 Type: 1 Up Reachability : 10.0.0.2/32 Metric: 10 Type: 1 Up Router Capabilities: Router Id: 10.0.0.2 Flags: [] Area leader priority: 250 algorithm: 0","title":"The Problem"},{"location":"feature/4-hide-transit/#configuration-tasks","text":"Many IS-IS implementations contain one or two nerd knobs that can be used to suppress the advertising of transit prefixes. For example, you can control which IP prefixes and which interface addresses the Arista EOS devices advertise. Disable the advertising of transit prefixes on all routers in your lab. If available, turn off the advertising of transit interface addresses. Some devices also have the opposite nerd knob that can explicitly suppress the subnet used on the interface.","title":"Configuration Tasks"},{"location":"feature/4-hide-transit/#problem-solved-not-yet","text":"Connect to the WAN router and inspect the IS-IS routes in its IP routing table. You\u2019re done if you see the three loopback prefixes and the LAN prefix . However, if you mindlessly followed the above instructions, you\u2019ll get only the three loopback prefixes: The reduced IP routing table on WAN $ netlab connect -q wan --show ip route isis ... I L2 10.0.0.1/32 [115/20] via 10.1.0.9, Ethernet1 I L2 10.0.0.2/32 [115/30] via 10.1.0.9, Ethernet1 I L2 10.0.0.3/32 [115/30] via 10.1.0.9, Ethernet1 Arista EOS allows you to advertise only the prefixes of the passive interfaces , but the LAN segment connected to ACC1 and ACC2 is not (yet) configured as a passive interface. Configure the LAN segment as a passive interface on ACC1 and ACC2. The details are in the Passive IS-IS Interfaces lab exercise.","title":"Problem Solved? Not Yet"},{"location":"feature/4-hide-transit/#validation","text":"You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run Arista EOS on the WAN router. This is the printout you should get after completing the lab exercise: You could also manually validate your work. Inspect IS-IS routes in the WAN router\u2019s IP routing table; it should contain three loopback (/32) prefixes and a single LAN (/24) prefix but no transit (/30) prefixes. Next: Drain Traffic Before Node Maintenance","title":"Validation"},{"location":"feature/4-hide-transit/#reference-information","text":"","title":"Reference Information"},{"location":"feature/4-hide-transit/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port core Ethernet1 acc1 Ethernet1 core Ethernet2 acc2 Ethernet1 core Ethernet3 wan Ethernet1 acc1 Ethernet2 acc2 Ethernet2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running Arista EOS.","title":"Lab Wiring"},{"location":"feature/4-hide-transit/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description acc1 10.0.0.2/32 Loopback Ethernet1 10.1.0.1/30 acc1 -> core Ethernet2 172.16.0.1/24 acc1 -> acc2 acc2 10.0.0.3/32 Loopback Ethernet1 10.1.0.5/30 acc2 -> core Ethernet2 172.16.0.2/24 acc2 -> acc1 core 10.0.0.1/32 Loopback Ethernet1 10.1.0.2/30 core -> acc1 Ethernet2 10.1.0.6/30 core -> acc2 Ethernet3 10.1.0.9/30 core -> wan wan 10.0.0.4/32 Loopback Ethernet1 10.1.0.10/30 wan -> core If the IGP is running, you can access a device through its loopback interfaces, and if the IGP is broken, you won\u2019t get any reachability information anyway. \u21a9 The forwarding table convergence time on modern devices is usually limited by the bandwidth between the CPU and the switching ASICs. Reducing the size of the IP routing table directly impacts the time it takes to update the forwarding table. \u21a9 The issue reporting this bug was closed after nobody touched it for over 6 months. \u21a9","title":"Lab Addressing"},{"location":"feature/5-drain/","text":"Drain Traffic Before Node Maintenance Imagine you have a leaf-and-spine fabric with two spines. Each leaf has two equal-cost paths to every other leaf, resulting in a pretty optimal traffic distribution across all core links. Next, assume you must do some maintenance on S1. Turning it off would disrupt the traffic between L1 and L2 until they realize S1 is gone and the convergence process does its job ( more details ). Is there a way to drain the traffic from the spine switch before turning it off? You\u2019ll explore that in this lab exercise. Device Requirements Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers). You can do automated lab validation with FRRouting running on L1 and L2. Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/5-drain Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration. The Problem Every leaf switch has two equal-cost paths to every other leaf switch. For example L1 uses S1 and S2 to reach the loopback interface of L2: Routes toward the loopback interface of L2 on L1 running FRRouting $ netlab connect -q l1 --show ip route 10.0.0.4 Routing entry for 10.0.0.4/32 Known via \"isis\", distance 115, metric 30, best Last update 00:01:17 ago * 10.1.0.2, via eth1, weight 1 * 10.1.0.6, via eth2, weight 1 If you shut down S1, the routes using S1 (next hop 10.1.0.2) remain in the routing (and forwarding) table of L1 until L1 discovers it lost the link toward S1. That might be pretty fast if you can rely on the physical link-loss signal or take seconds if your only failure detection mechanism is the IS-IS hello protocol. Regardless of the failure detection time, there will be some traffic disruption. Draining Traffic from an IS-IS Router We\u2019re using the maximum metric functionality in OSPF networks to solve a similar problem; if an OSPF router advertises all its links with a high metric, all other routers eventually find a better path, and the router is no longer used for transit traffic. While some IS-IS implementations have a similar configuration command (for example, advertise-high-metrics on FRRouting), the IS-IS designers decided to take an even better approach years before OSPF got the maximum metric functionality: the IS-IS LSPs contain an overload bit that a router can use to tell everyone else to avoid it for transit traffic. Setting the overload bit on S1 enables a clean shutdown. As the other routers receive and flood S1 LSP across the network, they recompute their best paths and remove routes using S1 (or replace them with alternate paths). Tip Abruptly increasing interface metrics or setting the overload bit could cause transient micro-loops in complex networks due to the asynchronous nature of IS-IS path computation. Fortunately, we won\u2019t experience micro-loops in our fabric, as we always have multiple equal-cost paths between the leaf switches. At least one academic team published a paper describing an algorithm for computing a series of gradual metric increases that avoids micro-loops. However, I don\u2019t know anyone using that approach in a production network. Configuration Tasks Configure the overload bit in the IS-IS process of S1. Tip You\u2019re running a dual-stack network; some devices (for example, FRRouting) can set the overload bit for individual address families. Check what your devices are doing, or you might drain IPv4 traffic but leave IPv6 intact. Check also the IS-IS high metric functionality on devices that support it as an alternative to the overload bit and in combination with it, and explore the resulting changes in the S1\u2019s IS-IS LSP, IS-IS topology, and IP routing table. Validation You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on L1 and L2. This is the printout you\u2019d get if you failed to configure the overload bit: You could also do manual validation of the routing tables on L1 and L2: There should be a single path (through S2) for the other leaf router\u2019s IPv4 and IPv6 loopback prefixes. The IPv4 and IPv6 loopback prefixes of S1 should still be reachable (because it\u2019s not a transit route through S1). The final IPv4 loopback IS-IS routes on L1 (FRRouting) l1# show ip route 10.0.0.0/24 longer-prefixes isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:22:00 I>* 10.0.0.2/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:22:00 I>* 10.0.0.4/32 [115/30] via 10.1.0.6, eth2, weight 1, 00:00:59 You can also inspect the S1 LSP to verify it has the overload bit set: The S1 LSP on L1 (FRRouting). The overload bit is the summary line\u2019s /OL part. l1# show isis database detail s1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL s1.00-00 112 0x00000004 0x0266 1618 0/0/1 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: s1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0003.00 (Metric: 10) Extended Reachability: 0000.0000.0004.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 10) Extended IP Reachability: 10.0.0.1/32 (Metric: 10) Other Uses of the Overload Bit Most IS-IS implementations can set the overload bit during the device startup process to prevent other routers from using a device for transit routing until it completes collecting routing information or initializing other control-plane protocols (for example, LDP). Some implementations allow you to set the overload bit for a fixed amount of time; others are more flexible and can wait for the initial BGP convergence to complete before clearing the overload bit. Finally, some implementors returned to the fundamentals and started using the overload bit for what it was initially designed to do: signal to the rest of the network that the router has performance problems (for example, running out of RAM due to a memory leak) and should be avoided. Next: Adjust IS-IS Timers Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port l1 eth1 s1 eth1 l1 eth2 s2 eth1 l2 eth1 s1 eth2 l2 eth2 s2 eth2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description l1 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback eth1 10.1.0.1/30 LLA l1 -> s1 eth2 10.1.0.5/30 LLA l1 -> s2 l2 10.0.0.4/32 2001:db8:cafe:4::1/64 Loopback eth1 10.1.0.9/30 LLA l2 -> s1 eth2 10.1.0.13/30 LLA l2 -> s2 s1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback Ethernet1 10.1.0.2/30 LLA s1 -> l1 Ethernet2 10.1.0.10/30 LLA s1 -> l2 s2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback Ethernet1 10.1.0.6/30 LLA s2 -> l1 Ethernet2 10.1.0.14/30 LLA s2 -> l2","title":"Drain Traffic Before Node Maintenance"},{"location":"feature/5-drain/#drain-traffic-before-node-maintenance","text":"Imagine you have a leaf-and-spine fabric with two spines. Each leaf has two equal-cost paths to every other leaf, resulting in a pretty optimal traffic distribution across all core links. Next, assume you must do some maintenance on S1. Turning it off would disrupt the traffic between L1 and L2 until they realize S1 is gone and the convergence process does its job ( more details ). Is there a way to drain the traffic from the spine switch before turning it off? You\u2019ll explore that in this lab exercise.","title":"Drain Traffic Before Node Maintenance"},{"location":"feature/5-drain/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for the routers in your lab (default: FRRouting virtual machines or containers). You can do automated lab validation with FRRouting running on L1 and L2.","title":"Device Requirements"},{"location":"feature/5-drain/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/5-drain Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/5-drain/#the-problem","text":"Every leaf switch has two equal-cost paths to every other leaf switch. For example L1 uses S1 and S2 to reach the loopback interface of L2: Routes toward the loopback interface of L2 on L1 running FRRouting $ netlab connect -q l1 --show ip route 10.0.0.4 Routing entry for 10.0.0.4/32 Known via \"isis\", distance 115, metric 30, best Last update 00:01:17 ago * 10.1.0.2, via eth1, weight 1 * 10.1.0.6, via eth2, weight 1 If you shut down S1, the routes using S1 (next hop 10.1.0.2) remain in the routing (and forwarding) table of L1 until L1 discovers it lost the link toward S1. That might be pretty fast if you can rely on the physical link-loss signal or take seconds if your only failure detection mechanism is the IS-IS hello protocol. Regardless of the failure detection time, there will be some traffic disruption.","title":"The Problem"},{"location":"feature/5-drain/#draining-traffic-from-an-is-is-router","text":"We\u2019re using the maximum metric functionality in OSPF networks to solve a similar problem; if an OSPF router advertises all its links with a high metric, all other routers eventually find a better path, and the router is no longer used for transit traffic. While some IS-IS implementations have a similar configuration command (for example, advertise-high-metrics on FRRouting), the IS-IS designers decided to take an even better approach years before OSPF got the maximum metric functionality: the IS-IS LSPs contain an overload bit that a router can use to tell everyone else to avoid it for transit traffic. Setting the overload bit on S1 enables a clean shutdown. As the other routers receive and flood S1 LSP across the network, they recompute their best paths and remove routes using S1 (or replace them with alternate paths). Tip Abruptly increasing interface metrics or setting the overload bit could cause transient micro-loops in complex networks due to the asynchronous nature of IS-IS path computation. Fortunately, we won\u2019t experience micro-loops in our fabric, as we always have multiple equal-cost paths between the leaf switches. At least one academic team published a paper describing an algorithm for computing a series of gradual metric increases that avoids micro-loops. However, I don\u2019t know anyone using that approach in a production network.","title":"Draining Traffic from an IS-IS Router"},{"location":"feature/5-drain/#configuration-tasks","text":"Configure the overload bit in the IS-IS process of S1. Tip You\u2019re running a dual-stack network; some devices (for example, FRRouting) can set the overload bit for individual address families. Check what your devices are doing, or you might drain IPv4 traffic but leave IPv6 intact. Check also the IS-IS high metric functionality on devices that support it as an alternative to the overload bit and in combination with it, and explore the resulting changes in the S1\u2019s IS-IS LSP, IS-IS topology, and IP routing table.","title":"Configuration Tasks"},{"location":"feature/5-drain/#validation","text":"You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run FRRouting on L1 and L2. This is the printout you\u2019d get if you failed to configure the overload bit: You could also do manual validation of the routing tables on L1 and L2: There should be a single path (through S2) for the other leaf router\u2019s IPv4 and IPv6 loopback prefixes. The IPv4 and IPv6 loopback prefixes of S1 should still be reachable (because it\u2019s not a transit route through S1). The final IPv4 loopback IS-IS routes on L1 (FRRouting) l1# show ip route 10.0.0.0/24 longer-prefixes isis Codes: K - kernel route, C - connected, L - local, S - static, R - RIP, O - OSPF, I - IS-IS, B - BGP, E - EIGRP, N - NHRP, T - Table, v - VNC, V - VNC-Direct, A - Babel, F - PBR, f - OpenFabric, t - Table-Direct, > - selected route, * - FIB route, q - queued, r - rejected, b - backup t - trapped, o - offload failure I>* 10.0.0.1/32 [115/20] via 10.1.0.2, eth1, weight 1, 00:22:00 I>* 10.0.0.2/32 [115/20] via 10.1.0.6, eth2, weight 1, 00:22:00 I>* 10.0.0.4/32 [115/30] via 10.1.0.6, eth2, weight 1, 00:00:59 You can also inspect the S1 LSP to verify it has the overload bit set: The S1 LSP on L1 (FRRouting). The overload bit is the summary line\u2019s /OL part. l1# show isis database detail s1.00-00 Area Gandalf: IS-IS Level-2 link-state database: LSP ID PduLen SeqNumber Chksum Holdtime ATT/P/OL s1.00-00 112 0x00000004 0x0266 1618 0/0/1 Protocols Supported: IPv4 Area Address: 49.0001 Hostname: s1 TE Router ID: 10.0.0.1 Router Capability: 10.0.0.1 , D:0, S:0 Extended Reachability: 0000.0000.0003.00 (Metric: 10) Extended Reachability: 0000.0000.0004.00 (Metric: 10) IPv4 Interface Address: 10.0.0.1 Extended IP Reachability: 10.1.0.0/30 (Metric: 10) Extended IP Reachability: 10.1.0.8/30 (Metric: 10) Extended IP Reachability: 10.0.0.1/32 (Metric: 10)","title":"Validation"},{"location":"feature/5-drain/#other-uses-of-the-overload-bit","text":"Most IS-IS implementations can set the overload bit during the device startup process to prevent other routers from using a device for transit routing until it completes collecting routing information or initializing other control-plane protocols (for example, LDP). Some implementations allow you to set the overload bit for a fixed amount of time; others are more flexible and can wait for the initial BGP convergence to complete before clearing the overload bit. Finally, some implementors returned to the fundamentals and started using the overload bit for what it was initially designed to do: signal to the rest of the network that the router has performance problems (for example, running out of RAM due to a memory leak) and should be avoided. Next: Adjust IS-IS Timers","title":"Other Uses of the Overload Bit"},{"location":"feature/5-drain/#reference-information","text":"","title":"Reference Information"},{"location":"feature/5-drain/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port l1 eth1 s1 eth1 l1 eth2 s2 eth1 l2 eth1 s1 eth2 l2 eth2 s2 eth2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running FRRouting.","title":"Lab Wiring"},{"location":"feature/5-drain/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description l1 10.0.0.3/32 2001:db8:cafe:3::1/64 Loopback eth1 10.1.0.1/30 LLA l1 -> s1 eth2 10.1.0.5/30 LLA l1 -> s2 l2 10.0.0.4/32 2001:db8:cafe:4::1/64 Loopback eth1 10.1.0.9/30 LLA l2 -> s1 eth2 10.1.0.13/30 LLA l2 -> s2 s1 10.0.0.1/32 2001:db8:cafe:1::1/64 Loopback Ethernet1 10.1.0.2/30 LLA s1 -> l1 Ethernet2 10.1.0.10/30 LLA s1 -> l2 s2 10.0.0.2/32 2001:db8:cafe:2::1/64 Loopback Ethernet1 10.1.0.6/30 LLA s2 -> l1 Ethernet2 10.1.0.14/30 LLA s2 -> l2","title":"Lab Addressing"},{"location":"feature/6-timers/","text":"Adjust IS-IS Timers Like any other (interior) routing protocol, IS-IS uses hello packets to discover adjacent routers (intermediate systems) and to detect the loss of communication with them. Unlike OSPF, where the hello timers must match between neighbors, IS-IS allows each router to define its own hold time (the time after which it is considered unreachable). The advertised hold time is the only parameter relevant in the neighbor loss detection; it\u2019s up to the IS-IS implementation what the hello interval is and how many hello packets are sent within the hold time. In this lab exercise, you will reduce the IS-IS timers on the remote routers (R1, R2) to speed up neighbor loss detection on the Core router. You will also explore other configurable timers. Warning Changing IS-IS hello timers should be a last resort. If you want to improve the failure detection speed, use BFD. Device Requirements Use any device supported by the netlab IS-IS configuration module for the routers in your lab. You can do automated lab validation when using Arista EOS on your routers 1 . Starting the Lab You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/6-timers Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration. Initial State Most IS-IS implementations advertise a 30-second hold interval but differ significantly in their hello intervals. For example, by default, FRRouting sends IIH (IS-IS Hello) packets every three seconds, while Arista EOS sends them every ten seconds. Some platforms show the configured IIH timers in the show isis interface commands: The show isis interface command on FRRouting displays the hello timers r1# show isis interface detail Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0x0 Type: p2p, Level: L2 Level-2 Information: Metric: 10, Active neighbors: 1 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 IP Prefix(es): 10.1.0.1/30 To get the advertised hold time value, use the show isis neighbor command; some implementations include it in the printout. The show isis neighbor detail command on Arista EOS displays the advertised hold time r1#show isis neighbors detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r2 L2 Ethernet1 P2P UP 25 DB Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:04:38 ago at 2025-03-12 16:36:58 IPv4 Interface Address: 10.1.0.2 IPv6 Interface Address: none Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4 Configuration Tasks In our network, every remote router has a single uplink to the core router. Detecting neighbor loss on the remote routers is thus not as relevant as detecting remote site failure on the core router: Reduce the advertised hold time on the Core router to 15 seconds. Reduce the advertised hold time on R1 and R2 to 3 seconds. Most IS-IS implementations ask you to configure the interface parameters hello-interval and hello-multiplier (the advertised hold time is a product of these two parameters). Use whatever parameter values work for you. Validation You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run Arista EOS on the WAN router. This is the printout you should get after completing the lab exercise: You could also manually validate your work. Inspect the details of IS-IS neighbors on all three routers and check the advertised hold time . Beyond Neighbor Hold Times Most IS-IS implementations have several SPF-, LSP-, and CSNP-related timers you can tweak to improve your network\u2019s convergence. While setting these timers to low values is tempting, you always have to find the right balance between convergence speed, routing protocol overhead (excessive flooding and CPU utilization), and network instability due to overly quick reactions to partially updated information ( example ). These are the usual timers you can tweak: SPF interval This parameter changes the maximum interval between SPF runs. It directly impacts the convergence speed and is set to conservative values in implementations with enough history, as they had to work on very slow CPUs. Most modern IS-IS implementations use reasonable values for SPF interval. LSP generation The interval between the generation of changed LSPs. This parameter should not be set too low, as it prevents your router from flooding the network with too many changes generated by a flapping interface. However, it might also impact the speed with which changes in network topology or redistributed routes are advertised in IS-IS. CSNP generation IS-IS uses periodic CSNP packets (table-of-contents of the LSP database) to detect missing information. Sending them more often will improve recovery from lost LSP updates. However, if the LSP packet loss significantly impacts your network convergence, you have much bigger problems to fix than the CSNP interval. You can find further network-convergence-related information in the Fast Failover series of blog posts. Reference Information Lab Wiring Origin Device Origin Port Destination Device Destination Port r1 Ethernet1 core Ethernet1 r2 Ethernet1 core Ethernet2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running Arista EOS. Lab Addressing Node/Interface IPv4 Address IPv6 Address Description core 10.0.0.2/32 Loopback Ethernet1 10.1.0.1/30 core -> r1 Ethernet2 10.1.0.5/30 core -> r2 r1 10.0.0.1/32 Loopback Ethernet1 10.1.0.2/30 r1 -> core r2 10.0.0.3/32 Loopback Ethernet1 10.1.0.6/30 r2 -> core FRRouting does not display the advertised hold time in the show isis neighbors command and thus cannot provide the information needed for the automated validation. \u21a9","title":"Adjust IS-IS Timers"},{"location":"feature/6-timers/#adjust-is-is-timers","text":"Like any other (interior) routing protocol, IS-IS uses hello packets to discover adjacent routers (intermediate systems) and to detect the loss of communication with them. Unlike OSPF, where the hello timers must match between neighbors, IS-IS allows each router to define its own hold time (the time after which it is considered unreachable). The advertised hold time is the only parameter relevant in the neighbor loss detection; it\u2019s up to the IS-IS implementation what the hello interval is and how many hello packets are sent within the hold time. In this lab exercise, you will reduce the IS-IS timers on the remote routers (R1, R2) to speed up neighbor loss detection on the Core router. You will also explore other configurable timers. Warning Changing IS-IS hello timers should be a last resort. If you want to improve the failure detection speed, use BFD.","title":"Adjust IS-IS Timers"},{"location":"feature/6-timers/#device-requirements","text":"Use any device supported by the netlab IS-IS configuration module for the routers in your lab. You can do automated lab validation when using Arista EOS on your routers 1 .","title":"Device Requirements"},{"location":"feature/6-timers/#starting-the-lab","text":"You can start the lab on your own lab infrastructure or in GitHub Codespaces ( more details ): Change directory to feature/6-timers Execute netlab up . You\u2019ll get a lab with IPv4 addresses configured on all interfaces and level-2 IS-IS routing configured on all routers. Log into lab routers with netlab connect and verify their configuration.","title":"Starting the Lab"},{"location":"feature/6-timers/#initial-state","text":"Most IS-IS implementations advertise a 30-second hold interval but differ significantly in their hello intervals. For example, by default, FRRouting sends IIH (IS-IS Hello) packets every three seconds, while Arista EOS sends them every ten seconds. Some platforms show the configured IIH timers in the show isis interface commands: The show isis interface command on FRRouting displays the hello timers r1# show isis interface detail Area Gandalf: Interface: eth1, State: Up, Active, Circuit Id: 0x0 Type: p2p, Level: L2 Level-2 Information: Metric: 10, Active neighbors: 1 Hello interval: 3, Holddown count: 10, Padding: yes CNSP interval: 10, PSNP interval: 2 IP Prefix(es): 10.1.0.1/30 To get the advertised hold time value, use the show isis neighbor command; some implementations include it in the printout. The show isis neighbor detail command on Arista EOS displays the advertised hold time r1#show isis neighbors detail Instance VRF System Id Type Interface SNPA State Hold time Circuit Id Gandalf default r2 L2 Ethernet1 P2P UP 25 DB Area addresses: 49.0001 SNPA: P2P Router ID: 0.0.0.0 Advertised Hold Time: 30 State Changed: 00:04:38 ago at 2025-03-12 16:36:58 IPv4 Interface Address: 10.1.0.2 IPv6 Interface Address: none Interface name: Ethernet1 Graceful Restart: Supported Supported Address Families: IPv4 Neighbor Supported Address Families: IPv4","title":"Initial State"},{"location":"feature/6-timers/#configuration-tasks","text":"In our network, every remote router has a single uplink to the core router. Detecting neighbor loss on the remote routers is thus not as relevant as detecting remote site failure on the core router: Reduce the advertised hold time on the Core router to 15 seconds. Reduce the advertised hold time on R1 and R2 to 3 seconds. Most IS-IS implementations ask you to configure the interface parameters hello-interval and hello-multiplier (the advertised hold time is a product of these two parameters). Use whatever parameter values work for you.","title":"Configuration Tasks"},{"location":"feature/6-timers/#validation","text":"You can use the netlab validate command if you\u2019re using netlab release 1.8.4 or later and run Arista EOS on the WAN router. This is the printout you should get after completing the lab exercise: You could also manually validate your work. Inspect the details of IS-IS neighbors on all three routers and check the advertised hold time .","title":"Validation"},{"location":"feature/6-timers/#beyond-neighbor-hold-times","text":"Most IS-IS implementations have several SPF-, LSP-, and CSNP-related timers you can tweak to improve your network\u2019s convergence. While setting these timers to low values is tempting, you always have to find the right balance between convergence speed, routing protocol overhead (excessive flooding and CPU utilization), and network instability due to overly quick reactions to partially updated information ( example ). These are the usual timers you can tweak: SPF interval This parameter changes the maximum interval between SPF runs. It directly impacts the convergence speed and is set to conservative values in implementations with enough history, as they had to work on very slow CPUs. Most modern IS-IS implementations use reasonable values for SPF interval. LSP generation The interval between the generation of changed LSPs. This parameter should not be set too low, as it prevents your router from flooding the network with too many changes generated by a flapping interface. However, it might also impact the speed with which changes in network topology or redistributed routes are advertised in IS-IS. CSNP generation IS-IS uses periodic CSNP packets (table-of-contents of the LSP database) to detect missing information. Sending them more often will improve recovery from lost LSP updates. However, if the LSP packet loss significantly impacts your network convergence, you have much bigger problems to fix than the CSNP interval. You can find further network-convergence-related information in the Fast Failover series of blog posts.","title":"Beyond Neighbor Hold Times"},{"location":"feature/6-timers/#reference-information","text":"","title":"Reference Information"},{"location":"feature/6-timers/#lab-wiring","text":"Origin Device Origin Port Destination Device Destination Port r1 Ethernet1 core Ethernet1 r2 Ethernet1 core Ethernet2 Note: The interface names depend on the devices you use in the lab. The printout was generated with lab devices running Arista EOS.","title":"Lab Wiring"},{"location":"feature/6-timers/#lab-addressing","text":"Node/Interface IPv4 Address IPv6 Address Description core 10.0.0.2/32 Loopback Ethernet1 10.1.0.1/30 core -> r1 Ethernet2 10.1.0.5/30 core -> r2 r1 10.0.0.1/32 Loopback Ethernet1 10.1.0.2/30 r1 -> core r2 10.0.0.3/32 Loopback Ethernet1 10.1.0.6/30 r2 -> core FRRouting does not display the advertised hold time in the show isis neighbors command and thus cannot provide the information needed for the automated validation. \u21a9","title":"Lab Addressing"}]}